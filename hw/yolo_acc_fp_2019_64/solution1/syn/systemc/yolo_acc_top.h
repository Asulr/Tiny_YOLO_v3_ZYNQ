// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _yolo_acc_top_HH_
#define _yolo_acc_top_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "yolo_acc_top_CTRL_BUS_s_axi.h"

namespace ap_rtl {

template<unsigned int C_S_AXI_CTRL_BUS_ADDR_WIDTH = 5,
         unsigned int C_S_AXI_CTRL_BUS_DATA_WIDTH = 32>
struct yolo_acc_top : public sc_module {
    // Port declarations 47
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst_n;
    sc_in< sc_lv<64> > inStream_a_TDATA;
    sc_in< sc_logic > inStream_a_TVALID;
    sc_out< sc_logic > inStream_a_TREADY;
    sc_in< sc_lv<8> > inStream_a_TKEEP;
    sc_in< sc_lv<8> > inStream_a_TSTRB;
    sc_in< sc_lv<2> > inStream_a_TUSER;
    sc_in< sc_lv<1> > inStream_a_TLAST;
    sc_in< sc_lv<5> > inStream_a_TID;
    sc_in< sc_lv<6> > inStream_a_TDEST;
    sc_in< sc_lv<64> > inStream_b_TDATA;
    sc_in< sc_logic > inStream_b_TVALID;
    sc_out< sc_logic > inStream_b_TREADY;
    sc_in< sc_lv<8> > inStream_b_TKEEP;
    sc_in< sc_lv<8> > inStream_b_TSTRB;
    sc_in< sc_lv<2> > inStream_b_TUSER;
    sc_in< sc_lv<1> > inStream_b_TLAST;
    sc_in< sc_lv<5> > inStream_b_TID;
    sc_in< sc_lv<6> > inStream_b_TDEST;
    sc_out< sc_lv<64> > outStream_TDATA;
    sc_out< sc_logic > outStream_TVALID;
    sc_in< sc_logic > outStream_TREADY;
    sc_out< sc_lv<8> > outStream_TKEEP;
    sc_out< sc_lv<8> > outStream_TSTRB;
    sc_out< sc_lv<2> > outStream_TUSER;
    sc_out< sc_lv<1> > outStream_TLAST;
    sc_out< sc_lv<5> > outStream_TID;
    sc_out< sc_lv<6> > outStream_TDEST;
    sc_in< sc_logic > s_axi_CTRL_BUS_AWVALID;
    sc_out< sc_logic > s_axi_CTRL_BUS_AWREADY;
    sc_in< sc_uint<C_S_AXI_CTRL_BUS_ADDR_WIDTH> > s_axi_CTRL_BUS_AWADDR;
    sc_in< sc_logic > s_axi_CTRL_BUS_WVALID;
    sc_out< sc_logic > s_axi_CTRL_BUS_WREADY;
    sc_in< sc_uint<C_S_AXI_CTRL_BUS_DATA_WIDTH> > s_axi_CTRL_BUS_WDATA;
    sc_in< sc_uint<C_S_AXI_CTRL_BUS_DATA_WIDTH/8> > s_axi_CTRL_BUS_WSTRB;
    sc_in< sc_logic > s_axi_CTRL_BUS_ARVALID;
    sc_out< sc_logic > s_axi_CTRL_BUS_ARREADY;
    sc_in< sc_uint<C_S_AXI_CTRL_BUS_ADDR_WIDTH> > s_axi_CTRL_BUS_ARADDR;
    sc_out< sc_logic > s_axi_CTRL_BUS_RVALID;
    sc_in< sc_logic > s_axi_CTRL_BUS_RREADY;
    sc_out< sc_uint<C_S_AXI_CTRL_BUS_DATA_WIDTH> > s_axi_CTRL_BUS_RDATA;
    sc_out< sc_lv<2> > s_axi_CTRL_BUS_RRESP;
    sc_out< sc_logic > s_axi_CTRL_BUS_BVALID;
    sc_in< sc_logic > s_axi_CTRL_BUS_BREADY;
    sc_out< sc_lv<2> > s_axi_CTRL_BUS_BRESP;
    sc_out< sc_logic > interrupt;
    sc_signal< sc_logic > ap_var_for_const0;


    // Module declarations
    yolo_acc_top(sc_module_name name);
    SC_HAS_PROCESS(yolo_acc_top);

    ~yolo_acc_top();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    yolo_acc_top_CTRL_BUS_s_axi<C_S_AXI_CTRL_BUS_ADDR_WIDTH,C_S_AXI_CTRL_BUS_DATA_WIDTH>* yolo_acc_top_CTRL_BUS_s_axi_U;
    sc_signal< sc_logic > ap_rst_n_inv;
    sc_signal< sc_logic > ap_start;
    sc_signal< sc_logic > ap_done;
    sc_signal< sc_logic > ap_idle;
    sc_signal< sc_lv<6> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > ap_ready;
    sc_signal< sc_lv<64> > inStream_a_V_data_0_data_out;
    sc_signal< sc_logic > inStream_a_V_data_0_vld_in;
    sc_signal< sc_logic > inStream_a_V_data_0_vld_out;
    sc_signal< sc_logic > inStream_a_V_data_0_ack_in;
    sc_signal< sc_logic > inStream_a_V_data_0_ack_out;
    sc_signal< sc_lv<64> > inStream_a_V_data_0_payload_A;
    sc_signal< sc_lv<64> > inStream_a_V_data_0_payload_B;
    sc_signal< sc_logic > inStream_a_V_data_0_sel_rd;
    sc_signal< sc_logic > inStream_a_V_data_0_sel_wr;
    sc_signal< sc_logic > inStream_a_V_data_0_sel;
    sc_signal< sc_logic > inStream_a_V_data_0_load_A;
    sc_signal< sc_logic > inStream_a_V_data_0_load_B;
    sc_signal< sc_lv<2> > inStream_a_V_data_0_state;
    sc_signal< sc_logic > inStream_a_V_data_0_state_cmp_full;
    sc_signal< sc_lv<8> > inStream_a_V_keep_V_0_data_out;
    sc_signal< sc_logic > inStream_a_V_keep_V_0_vld_in;
    sc_signal< sc_logic > inStream_a_V_keep_V_0_vld_out;
    sc_signal< sc_logic > inStream_a_V_keep_V_0_ack_in;
    sc_signal< sc_logic > inStream_a_V_keep_V_0_ack_out;
    sc_signal< sc_lv<8> > inStream_a_V_keep_V_0_payload_A;
    sc_signal< sc_lv<8> > inStream_a_V_keep_V_0_payload_B;
    sc_signal< sc_logic > inStream_a_V_keep_V_0_sel_rd;
    sc_signal< sc_logic > inStream_a_V_keep_V_0_sel_wr;
    sc_signal< sc_logic > inStream_a_V_keep_V_0_sel;
    sc_signal< sc_logic > inStream_a_V_keep_V_0_load_A;
    sc_signal< sc_logic > inStream_a_V_keep_V_0_load_B;
    sc_signal< sc_lv<2> > inStream_a_V_keep_V_0_state;
    sc_signal< sc_logic > inStream_a_V_keep_V_0_state_cmp_full;
    sc_signal< sc_lv<8> > inStream_a_V_strb_V_0_data_out;
    sc_signal< sc_logic > inStream_a_V_strb_V_0_vld_in;
    sc_signal< sc_logic > inStream_a_V_strb_V_0_vld_out;
    sc_signal< sc_logic > inStream_a_V_strb_V_0_ack_in;
    sc_signal< sc_logic > inStream_a_V_strb_V_0_ack_out;
    sc_signal< sc_lv<8> > inStream_a_V_strb_V_0_payload_A;
    sc_signal< sc_lv<8> > inStream_a_V_strb_V_0_payload_B;
    sc_signal< sc_logic > inStream_a_V_strb_V_0_sel_rd;
    sc_signal< sc_logic > inStream_a_V_strb_V_0_sel_wr;
    sc_signal< sc_logic > inStream_a_V_strb_V_0_sel;
    sc_signal< sc_logic > inStream_a_V_strb_V_0_load_A;
    sc_signal< sc_logic > inStream_a_V_strb_V_0_load_B;
    sc_signal< sc_lv<2> > inStream_a_V_strb_V_0_state;
    sc_signal< sc_logic > inStream_a_V_strb_V_0_state_cmp_full;
    sc_signal< sc_lv<2> > inStream_a_V_user_V_0_data_out;
    sc_signal< sc_logic > inStream_a_V_user_V_0_vld_in;
    sc_signal< sc_logic > inStream_a_V_user_V_0_vld_out;
    sc_signal< sc_logic > inStream_a_V_user_V_0_ack_in;
    sc_signal< sc_logic > inStream_a_V_user_V_0_ack_out;
    sc_signal< sc_lv<2> > inStream_a_V_user_V_0_payload_A;
    sc_signal< sc_lv<2> > inStream_a_V_user_V_0_payload_B;
    sc_signal< sc_logic > inStream_a_V_user_V_0_sel_rd;
    sc_signal< sc_logic > inStream_a_V_user_V_0_sel_wr;
    sc_signal< sc_logic > inStream_a_V_user_V_0_sel;
    sc_signal< sc_logic > inStream_a_V_user_V_0_load_A;
    sc_signal< sc_logic > inStream_a_V_user_V_0_load_B;
    sc_signal< sc_lv<2> > inStream_a_V_user_V_0_state;
    sc_signal< sc_logic > inStream_a_V_user_V_0_state_cmp_full;
    sc_signal< sc_lv<5> > inStream_a_V_id_V_0_data_out;
    sc_signal< sc_logic > inStream_a_V_id_V_0_vld_in;
    sc_signal< sc_logic > inStream_a_V_id_V_0_vld_out;
    sc_signal< sc_logic > inStream_a_V_id_V_0_ack_in;
    sc_signal< sc_logic > inStream_a_V_id_V_0_ack_out;
    sc_signal< sc_lv<5> > inStream_a_V_id_V_0_payload_A;
    sc_signal< sc_lv<5> > inStream_a_V_id_V_0_payload_B;
    sc_signal< sc_logic > inStream_a_V_id_V_0_sel_rd;
    sc_signal< sc_logic > inStream_a_V_id_V_0_sel_wr;
    sc_signal< sc_logic > inStream_a_V_id_V_0_sel;
    sc_signal< sc_logic > inStream_a_V_id_V_0_load_A;
    sc_signal< sc_logic > inStream_a_V_id_V_0_load_B;
    sc_signal< sc_lv<2> > inStream_a_V_id_V_0_state;
    sc_signal< sc_logic > inStream_a_V_id_V_0_state_cmp_full;
    sc_signal< sc_lv<6> > inStream_a_V_dest_V_0_data_out;
    sc_signal< sc_logic > inStream_a_V_dest_V_0_vld_in;
    sc_signal< sc_logic > inStream_a_V_dest_V_0_vld_out;
    sc_signal< sc_logic > inStream_a_V_dest_V_0_ack_in;
    sc_signal< sc_logic > inStream_a_V_dest_V_0_ack_out;
    sc_signal< sc_lv<6> > inStream_a_V_dest_V_0_payload_A;
    sc_signal< sc_lv<6> > inStream_a_V_dest_V_0_payload_B;
    sc_signal< sc_logic > inStream_a_V_dest_V_0_sel_rd;
    sc_signal< sc_logic > inStream_a_V_dest_V_0_sel_wr;
    sc_signal< sc_logic > inStream_a_V_dest_V_0_sel;
    sc_signal< sc_logic > inStream_a_V_dest_V_0_load_A;
    sc_signal< sc_logic > inStream_a_V_dest_V_0_load_B;
    sc_signal< sc_lv<2> > inStream_a_V_dest_V_0_state;
    sc_signal< sc_logic > inStream_a_V_dest_V_0_state_cmp_full;
    sc_signal< sc_lv<64> > inStream_b_V_data_0_data_out;
    sc_signal< sc_logic > inStream_b_V_data_0_vld_in;
    sc_signal< sc_logic > inStream_b_V_data_0_vld_out;
    sc_signal< sc_logic > inStream_b_V_data_0_ack_in;
    sc_signal< sc_logic > inStream_b_V_data_0_ack_out;
    sc_signal< sc_lv<64> > inStream_b_V_data_0_payload_A;
    sc_signal< sc_lv<64> > inStream_b_V_data_0_payload_B;
    sc_signal< sc_logic > inStream_b_V_data_0_sel_rd;
    sc_signal< sc_logic > inStream_b_V_data_0_sel_wr;
    sc_signal< sc_logic > inStream_b_V_data_0_sel;
    sc_signal< sc_logic > inStream_b_V_data_0_load_A;
    sc_signal< sc_logic > inStream_b_V_data_0_load_B;
    sc_signal< sc_lv<2> > inStream_b_V_data_0_state;
    sc_signal< sc_logic > inStream_b_V_data_0_state_cmp_full;
    sc_signal< sc_logic > inStream_b_V_dest_V_0_vld_in;
    sc_signal< sc_logic > inStream_b_V_dest_V_0_ack_out;
    sc_signal< sc_lv<2> > inStream_b_V_dest_V_0_state;
    sc_signal< sc_lv<64> > outStream_V_data_1_data_out;
    sc_signal< sc_logic > outStream_V_data_1_vld_in;
    sc_signal< sc_logic > outStream_V_data_1_vld_out;
    sc_signal< sc_logic > outStream_V_data_1_ack_in;
    sc_signal< sc_logic > outStream_V_data_1_ack_out;
    sc_signal< sc_lv<64> > outStream_V_data_1_payload_A;
    sc_signal< sc_lv<64> > outStream_V_data_1_payload_B;
    sc_signal< sc_logic > outStream_V_data_1_sel_rd;
    sc_signal< sc_logic > outStream_V_data_1_sel_wr;
    sc_signal< sc_logic > outStream_V_data_1_sel;
    sc_signal< sc_logic > outStream_V_data_1_load_A;
    sc_signal< sc_logic > outStream_V_data_1_load_B;
    sc_signal< sc_lv<2> > outStream_V_data_1_state;
    sc_signal< sc_logic > outStream_V_data_1_state_cmp_full;
    sc_signal< sc_lv<8> > outStream_V_keep_V_1_data_out;
    sc_signal< sc_logic > outStream_V_keep_V_1_vld_in;
    sc_signal< sc_logic > outStream_V_keep_V_1_vld_out;
    sc_signal< sc_logic > outStream_V_keep_V_1_ack_in;
    sc_signal< sc_logic > outStream_V_keep_V_1_ack_out;
    sc_signal< sc_lv<8> > outStream_V_keep_V_1_payload_A;
    sc_signal< sc_lv<8> > outStream_V_keep_V_1_payload_B;
    sc_signal< sc_logic > outStream_V_keep_V_1_sel_rd;
    sc_signal< sc_logic > outStream_V_keep_V_1_sel_wr;
    sc_signal< sc_logic > outStream_V_keep_V_1_sel;
    sc_signal< sc_logic > outStream_V_keep_V_1_load_A;
    sc_signal< sc_logic > outStream_V_keep_V_1_load_B;
    sc_signal< sc_lv<2> > outStream_V_keep_V_1_state;
    sc_signal< sc_logic > outStream_V_keep_V_1_state_cmp_full;
    sc_signal< sc_lv<8> > outStream_V_strb_V_1_data_out;
    sc_signal< sc_logic > outStream_V_strb_V_1_vld_in;
    sc_signal< sc_logic > outStream_V_strb_V_1_vld_out;
    sc_signal< sc_logic > outStream_V_strb_V_1_ack_in;
    sc_signal< sc_logic > outStream_V_strb_V_1_ack_out;
    sc_signal< sc_lv<8> > outStream_V_strb_V_1_payload_A;
    sc_signal< sc_lv<8> > outStream_V_strb_V_1_payload_B;
    sc_signal< sc_logic > outStream_V_strb_V_1_sel_rd;
    sc_signal< sc_logic > outStream_V_strb_V_1_sel_wr;
    sc_signal< sc_logic > outStream_V_strb_V_1_sel;
    sc_signal< sc_logic > outStream_V_strb_V_1_load_A;
    sc_signal< sc_logic > outStream_V_strb_V_1_load_B;
    sc_signal< sc_lv<2> > outStream_V_strb_V_1_state;
    sc_signal< sc_logic > outStream_V_strb_V_1_state_cmp_full;
    sc_signal< sc_lv<2> > outStream_V_user_V_1_data_out;
    sc_signal< sc_logic > outStream_V_user_V_1_vld_in;
    sc_signal< sc_logic > outStream_V_user_V_1_vld_out;
    sc_signal< sc_logic > outStream_V_user_V_1_ack_in;
    sc_signal< sc_logic > outStream_V_user_V_1_ack_out;
    sc_signal< sc_lv<2> > outStream_V_user_V_1_payload_A;
    sc_signal< sc_lv<2> > outStream_V_user_V_1_payload_B;
    sc_signal< sc_logic > outStream_V_user_V_1_sel_rd;
    sc_signal< sc_logic > outStream_V_user_V_1_sel_wr;
    sc_signal< sc_logic > outStream_V_user_V_1_sel;
    sc_signal< sc_logic > outStream_V_user_V_1_load_A;
    sc_signal< sc_logic > outStream_V_user_V_1_load_B;
    sc_signal< sc_lv<2> > outStream_V_user_V_1_state;
    sc_signal< sc_logic > outStream_V_user_V_1_state_cmp_full;
    sc_signal< sc_lv<1> > outStream_V_last_V_1_data_out;
    sc_signal< sc_logic > outStream_V_last_V_1_vld_in;
    sc_signal< sc_logic > outStream_V_last_V_1_vld_out;
    sc_signal< sc_logic > outStream_V_last_V_1_ack_in;
    sc_signal< sc_logic > outStream_V_last_V_1_ack_out;
    sc_signal< sc_lv<1> > outStream_V_last_V_1_payload_A;
    sc_signal< sc_lv<1> > outStream_V_last_V_1_payload_B;
    sc_signal< sc_logic > outStream_V_last_V_1_sel_rd;
    sc_signal< sc_logic > outStream_V_last_V_1_sel_wr;
    sc_signal< sc_logic > outStream_V_last_V_1_sel;
    sc_signal< sc_logic > outStream_V_last_V_1_load_A;
    sc_signal< sc_logic > outStream_V_last_V_1_load_B;
    sc_signal< sc_lv<2> > outStream_V_last_V_1_state;
    sc_signal< sc_logic > outStream_V_last_V_1_state_cmp_full;
    sc_signal< sc_lv<5> > outStream_V_id_V_1_data_out;
    sc_signal< sc_logic > outStream_V_id_V_1_vld_in;
    sc_signal< sc_logic > outStream_V_id_V_1_vld_out;
    sc_signal< sc_logic > outStream_V_id_V_1_ack_in;
    sc_signal< sc_logic > outStream_V_id_V_1_ack_out;
    sc_signal< sc_lv<5> > outStream_V_id_V_1_payload_A;
    sc_signal< sc_lv<5> > outStream_V_id_V_1_payload_B;
    sc_signal< sc_logic > outStream_V_id_V_1_sel_rd;
    sc_signal< sc_logic > outStream_V_id_V_1_sel_wr;
    sc_signal< sc_logic > outStream_V_id_V_1_sel;
    sc_signal< sc_logic > outStream_V_id_V_1_load_A;
    sc_signal< sc_logic > outStream_V_id_V_1_load_B;
    sc_signal< sc_lv<2> > outStream_V_id_V_1_state;
    sc_signal< sc_logic > outStream_V_id_V_1_state_cmp_full;
    sc_signal< sc_lv<6> > outStream_V_dest_V_1_data_out;
    sc_signal< sc_logic > outStream_V_dest_V_1_vld_in;
    sc_signal< sc_logic > outStream_V_dest_V_1_vld_out;
    sc_signal< sc_logic > outStream_V_dest_V_1_ack_in;
    sc_signal< sc_logic > outStream_V_dest_V_1_ack_out;
    sc_signal< sc_lv<6> > outStream_V_dest_V_1_payload_A;
    sc_signal< sc_lv<6> > outStream_V_dest_V_1_payload_B;
    sc_signal< sc_logic > outStream_V_dest_V_1_sel_rd;
    sc_signal< sc_logic > outStream_V_dest_V_1_sel_wr;
    sc_signal< sc_logic > outStream_V_dest_V_1_sel;
    sc_signal< sc_logic > outStream_V_dest_V_1_load_A;
    sc_signal< sc_logic > outStream_V_dest_V_1_load_B;
    sc_signal< sc_lv<2> > outStream_V_dest_V_1_state;
    sc_signal< sc_logic > outStream_V_dest_V_1_state_cmp_full;
    sc_signal< sc_lv<6> > input_h_V;
    sc_signal< sc_lv<6> > input_w_V;
    sc_signal< sc_lv<6> > input_w_V_0_data_reg;
    sc_signal< sc_logic > input_w_V_0_vld_reg;
    sc_signal< sc_logic > input_w_V_0_ack_out;
    sc_signal< sc_logic > inStream_a_TDATA_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<1> > icmp_ln18_fu_294_p2;
    sc_signal< sc_logic > inStream_b_TDATA_blk_n;
    sc_signal< sc_logic > outStream_TDATA_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<6> > input_h_V_read_reg_798;
    sc_signal< sc_lv<6> > input_w_V_read_reg_804;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<7> > add_ln1354_fu_234_p2;
    sc_signal< sc_lv<7> > add_ln1354_reg_809;
    sc_signal< sc_lv<7> > add_ln1354_1_fu_243_p2;
    sc_signal< sc_lv<7> > add_ln1354_1_reg_814;
    sc_signal< sc_lv<6> > row_idx_fu_254_p2;
    sc_signal< sc_lv<6> > row_idx_reg_822;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< bool > ap_block_state3;
    sc_signal< sc_lv<1> > icmp_ln35_2_fu_264_p2;
    sc_signal< sc_lv<1> > icmp_ln35_2_reg_827;
    sc_signal< sc_lv<1> > icmp_ln14_fu_249_p2;
    sc_signal< sc_lv<6> > col_idx_fu_274_p2;
    sc_signal< sc_lv<6> > col_idx_reg_835;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<1> > or_ln35_fu_289_p2;
    sc_signal< sc_lv<1> > or_ln35_reg_840;
    sc_signal< sc_lv<1> > icmp_ln16_fu_269_p2;
    sc_signal< sc_lv<4> > input_ch_idx_fu_300_p2;
    sc_signal< sc_lv<4> > input_ch_idx_reg_848;
    sc_signal< bool > ap_block_state5;
    sc_signal< bool > ap_block_state5_io;
    sc_signal< sc_lv<1> > tmp_last_V_fu_778_p2;
    sc_signal< sc_lv<64> > tmp_data_2_fu_785_p5;
    sc_signal< sc_lv<6> > i_op_assign_reg_197;
    sc_signal< sc_lv<6> > i_op_assign_1_reg_208;
    sc_signal< sc_lv<4> > input_ch_idx_0_reg_219;
    sc_signal< sc_lv<7> > zext_ln1354_fu_230_p1;
    sc_signal< sc_lv<7> > zext_ln1354_1_fu_240_p1;
    sc_signal< sc_lv<7> > zext_ln1598_fu_260_p1;
    sc_signal< sc_lv<7> > zext_ln18_fu_280_p1;
    sc_signal< sc_lv<1> > icmp_ln35_1_fu_284_p2;
    sc_signal< sc_lv<16> > p_Val2_s_fu_335_p1;
    sc_signal< sc_lv<16> > p_Val2_1_fu_373_p1;
    sc_signal< sc_lv<17> > lhs_V_fu_407_p1;
    sc_signal< sc_lv<17> > rhs_V_fu_411_p1;
    sc_signal< sc_lv<17> > ret_V_fu_415_p2;
    sc_signal< sc_lv<16> > p_Val2_6_fu_429_p2;
    sc_signal< sc_lv<1> > p_Result_1_fu_435_p3;
    sc_signal< sc_lv<1> > p_Result_s_fu_421_p3;
    sc_signal< sc_lv<1> > xor_ln786_fu_443_p2;
    sc_signal< sc_lv<1> > xor_ln340_fu_461_p2;
    sc_signal< sc_lv<1> > xor_ln340_4_fu_455_p2;
    sc_signal< sc_lv<1> > underflow_fu_449_p2;
    sc_signal< sc_lv<1> > or_ln340_fu_467_p2;
    sc_signal< sc_lv<16> > select_ln340_fu_473_p3;
    sc_signal< sc_lv<16> > select_ln388_fu_481_p3;
    sc_signal< sc_lv<16> > p_Val2_4_fu_339_p4;
    sc_signal< sc_lv<16> > p_Val2_5_fu_377_p4;
    sc_signal< sc_lv<17> > lhs_V_1_fu_497_p1;
    sc_signal< sc_lv<17> > rhs_V_1_fu_501_p1;
    sc_signal< sc_lv<17> > ret_V_1_fu_505_p2;
    sc_signal< sc_lv<16> > p_Val2_10_fu_519_p2;
    sc_signal< sc_lv<1> > p_Result_3_fu_525_p3;
    sc_signal< sc_lv<1> > p_Result_2_fu_511_p3;
    sc_signal< sc_lv<1> > xor_ln786_1_fu_533_p2;
    sc_signal< sc_lv<1> > xor_ln340_1_fu_551_p2;
    sc_signal< sc_lv<1> > xor_ln340_5_fu_545_p2;
    sc_signal< sc_lv<1> > underflow_1_fu_539_p2;
    sc_signal< sc_lv<1> > or_ln340_1_fu_557_p2;
    sc_signal< sc_lv<16> > select_ln340_1_fu_563_p3;
    sc_signal< sc_lv<16> > select_ln388_1_fu_571_p3;
    sc_signal< sc_lv<16> > p_Val2_8_fu_349_p4;
    sc_signal< sc_lv<16> > p_Val2_9_fu_387_p4;
    sc_signal< sc_lv<17> > lhs_V_2_fu_587_p1;
    sc_signal< sc_lv<17> > rhs_V_2_fu_591_p1;
    sc_signal< sc_lv<17> > ret_V_2_fu_595_p2;
    sc_signal< sc_lv<16> > p_Val2_12_fu_609_p2;
    sc_signal< sc_lv<1> > p_Result_5_fu_615_p3;
    sc_signal< sc_lv<1> > p_Result_4_fu_601_p3;
    sc_signal< sc_lv<1> > xor_ln786_2_fu_623_p2;
    sc_signal< sc_lv<1> > xor_ln340_2_fu_641_p2;
    sc_signal< sc_lv<1> > xor_ln340_6_fu_635_p2;
    sc_signal< sc_lv<1> > underflow_2_fu_629_p2;
    sc_signal< sc_lv<1> > or_ln340_2_fu_647_p2;
    sc_signal< sc_lv<16> > select_ln340_2_fu_653_p3;
    sc_signal< sc_lv<16> > select_ln388_2_fu_661_p3;
    sc_signal< sc_lv<16> > p_Val2_13_fu_359_p4;
    sc_signal< sc_lv<16> > p_Val2_2_fu_397_p4;
    sc_signal< sc_lv<17> > lhs_V_3_fu_677_p1;
    sc_signal< sc_lv<17> > rhs_V_3_fu_681_p1;
    sc_signal< sc_lv<17> > ret_V_3_fu_685_p2;
    sc_signal< sc_lv<16> > p_Val2_15_fu_699_p2;
    sc_signal< sc_lv<1> > p_Result_7_fu_705_p3;
    sc_signal< sc_lv<1> > p_Result_6_fu_691_p3;
    sc_signal< sc_lv<1> > xor_ln786_3_fu_713_p2;
    sc_signal< sc_lv<1> > xor_ln340_3_fu_731_p2;
    sc_signal< sc_lv<1> > xor_ln340_7_fu_725_p2;
    sc_signal< sc_lv<1> > underflow_3_fu_719_p2;
    sc_signal< sc_lv<1> > or_ln340_3_fu_737_p2;
    sc_signal< sc_lv<16> > select_ln340_3_fu_743_p3;
    sc_signal< sc_lv<16> > select_ln388_3_fu_751_p3;
    sc_signal< sc_lv<1> > icmp_ln35_fu_767_p2;
    sc_signal< sc_lv<1> > or_ln35_1_fu_773_p2;
    sc_signal< sc_lv<16> > tmp_data_sub_data_3_s_fu_759_p3;
    sc_signal< sc_lv<16> > tmp_data_sub_data_2_s_fu_669_p3;
    sc_signal< sc_lv<16> > tmp_data_sub_data_1_s_fu_579_p3;
    sc_signal< sc_lv<16> > tmp_data_sub_data_0_s_fu_489_p3;
    sc_signal< sc_lv<6> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<6> ap_ST_fsm_state1;
    static const sc_lv<6> ap_ST_fsm_state2;
    static const sc_lv<6> ap_ST_fsm_state3;
    static const sc_lv<6> ap_ST_fsm_state4;
    static const sc_lv<6> ap_ST_fsm_state5;
    static const sc_lv<6> ap_ST_fsm_state6;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<2> ap_const_lv2_2;
    static const sc_lv<2> ap_const_lv2_3;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<6> ap_const_lv6_0;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const int C_S_AXI_DATA_WIDTH;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<7> ap_const_lv7_7F;
    static const sc_lv<6> ap_const_lv6_1;
    static const sc_lv<4> ap_const_lv4_8;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<32> ap_const_lv32_10;
    static const sc_lv<32> ap_const_lv32_1F;
    static const sc_lv<32> ap_const_lv32_20;
    static const sc_lv<32> ap_const_lv32_2F;
    static const sc_lv<32> ap_const_lv32_30;
    static const sc_lv<32> ap_const_lv32_3F;
    static const sc_lv<32> ap_const_lv32_F;
    static const sc_lv<16> ap_const_lv16_7FFF;
    static const sc_lv<16> ap_const_lv16_8000;
    static const sc_lv<4> ap_const_lv4_7;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_add_ln1354_1_fu_243_p2();
    void thread_add_ln1354_fu_234_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_block_state3();
    void thread_ap_block_state5();
    void thread_ap_block_state5_io();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_rst_n_inv();
    void thread_col_idx_fu_274_p2();
    void thread_icmp_ln14_fu_249_p2();
    void thread_icmp_ln16_fu_269_p2();
    void thread_icmp_ln18_fu_294_p2();
    void thread_icmp_ln35_1_fu_284_p2();
    void thread_icmp_ln35_2_fu_264_p2();
    void thread_icmp_ln35_fu_767_p2();
    void thread_inStream_a_TDATA_blk_n();
    void thread_inStream_a_TREADY();
    void thread_inStream_a_V_data_0_ack_in();
    void thread_inStream_a_V_data_0_ack_out();
    void thread_inStream_a_V_data_0_data_out();
    void thread_inStream_a_V_data_0_load_A();
    void thread_inStream_a_V_data_0_load_B();
    void thread_inStream_a_V_data_0_sel();
    void thread_inStream_a_V_data_0_state_cmp_full();
    void thread_inStream_a_V_data_0_vld_in();
    void thread_inStream_a_V_data_0_vld_out();
    void thread_inStream_a_V_dest_V_0_ack_in();
    void thread_inStream_a_V_dest_V_0_ack_out();
    void thread_inStream_a_V_dest_V_0_data_out();
    void thread_inStream_a_V_dest_V_0_load_A();
    void thread_inStream_a_V_dest_V_0_load_B();
    void thread_inStream_a_V_dest_V_0_sel();
    void thread_inStream_a_V_dest_V_0_state_cmp_full();
    void thread_inStream_a_V_dest_V_0_vld_in();
    void thread_inStream_a_V_dest_V_0_vld_out();
    void thread_inStream_a_V_id_V_0_ack_in();
    void thread_inStream_a_V_id_V_0_ack_out();
    void thread_inStream_a_V_id_V_0_data_out();
    void thread_inStream_a_V_id_V_0_load_A();
    void thread_inStream_a_V_id_V_0_load_B();
    void thread_inStream_a_V_id_V_0_sel();
    void thread_inStream_a_V_id_V_0_state_cmp_full();
    void thread_inStream_a_V_id_V_0_vld_in();
    void thread_inStream_a_V_id_V_0_vld_out();
    void thread_inStream_a_V_keep_V_0_ack_in();
    void thread_inStream_a_V_keep_V_0_ack_out();
    void thread_inStream_a_V_keep_V_0_data_out();
    void thread_inStream_a_V_keep_V_0_load_A();
    void thread_inStream_a_V_keep_V_0_load_B();
    void thread_inStream_a_V_keep_V_0_sel();
    void thread_inStream_a_V_keep_V_0_state_cmp_full();
    void thread_inStream_a_V_keep_V_0_vld_in();
    void thread_inStream_a_V_keep_V_0_vld_out();
    void thread_inStream_a_V_strb_V_0_ack_in();
    void thread_inStream_a_V_strb_V_0_ack_out();
    void thread_inStream_a_V_strb_V_0_data_out();
    void thread_inStream_a_V_strb_V_0_load_A();
    void thread_inStream_a_V_strb_V_0_load_B();
    void thread_inStream_a_V_strb_V_0_sel();
    void thread_inStream_a_V_strb_V_0_state_cmp_full();
    void thread_inStream_a_V_strb_V_0_vld_in();
    void thread_inStream_a_V_strb_V_0_vld_out();
    void thread_inStream_a_V_user_V_0_ack_in();
    void thread_inStream_a_V_user_V_0_ack_out();
    void thread_inStream_a_V_user_V_0_data_out();
    void thread_inStream_a_V_user_V_0_load_A();
    void thread_inStream_a_V_user_V_0_load_B();
    void thread_inStream_a_V_user_V_0_sel();
    void thread_inStream_a_V_user_V_0_state_cmp_full();
    void thread_inStream_a_V_user_V_0_vld_in();
    void thread_inStream_a_V_user_V_0_vld_out();
    void thread_inStream_b_TDATA_blk_n();
    void thread_inStream_b_TREADY();
    void thread_inStream_b_V_data_0_ack_in();
    void thread_inStream_b_V_data_0_ack_out();
    void thread_inStream_b_V_data_0_data_out();
    void thread_inStream_b_V_data_0_load_A();
    void thread_inStream_b_V_data_0_load_B();
    void thread_inStream_b_V_data_0_sel();
    void thread_inStream_b_V_data_0_state_cmp_full();
    void thread_inStream_b_V_data_0_vld_in();
    void thread_inStream_b_V_data_0_vld_out();
    void thread_inStream_b_V_dest_V_0_ack_out();
    void thread_inStream_b_V_dest_V_0_vld_in();
    void thread_input_ch_idx_fu_300_p2();
    void thread_input_w_V_0_ack_out();
    void thread_lhs_V_1_fu_497_p1();
    void thread_lhs_V_2_fu_587_p1();
    void thread_lhs_V_3_fu_677_p1();
    void thread_lhs_V_fu_407_p1();
    void thread_or_ln340_1_fu_557_p2();
    void thread_or_ln340_2_fu_647_p2();
    void thread_or_ln340_3_fu_737_p2();
    void thread_or_ln340_fu_467_p2();
    void thread_or_ln35_1_fu_773_p2();
    void thread_or_ln35_fu_289_p2();
    void thread_outStream_TDATA();
    void thread_outStream_TDATA_blk_n();
    void thread_outStream_TDEST();
    void thread_outStream_TID();
    void thread_outStream_TKEEP();
    void thread_outStream_TLAST();
    void thread_outStream_TSTRB();
    void thread_outStream_TUSER();
    void thread_outStream_TVALID();
    void thread_outStream_V_data_1_ack_in();
    void thread_outStream_V_data_1_ack_out();
    void thread_outStream_V_data_1_data_out();
    void thread_outStream_V_data_1_load_A();
    void thread_outStream_V_data_1_load_B();
    void thread_outStream_V_data_1_sel();
    void thread_outStream_V_data_1_state_cmp_full();
    void thread_outStream_V_data_1_vld_in();
    void thread_outStream_V_data_1_vld_out();
    void thread_outStream_V_dest_V_1_ack_in();
    void thread_outStream_V_dest_V_1_ack_out();
    void thread_outStream_V_dest_V_1_data_out();
    void thread_outStream_V_dest_V_1_load_A();
    void thread_outStream_V_dest_V_1_load_B();
    void thread_outStream_V_dest_V_1_sel();
    void thread_outStream_V_dest_V_1_state_cmp_full();
    void thread_outStream_V_dest_V_1_vld_in();
    void thread_outStream_V_dest_V_1_vld_out();
    void thread_outStream_V_id_V_1_ack_in();
    void thread_outStream_V_id_V_1_ack_out();
    void thread_outStream_V_id_V_1_data_out();
    void thread_outStream_V_id_V_1_load_A();
    void thread_outStream_V_id_V_1_load_B();
    void thread_outStream_V_id_V_1_sel();
    void thread_outStream_V_id_V_1_state_cmp_full();
    void thread_outStream_V_id_V_1_vld_in();
    void thread_outStream_V_id_V_1_vld_out();
    void thread_outStream_V_keep_V_1_ack_in();
    void thread_outStream_V_keep_V_1_ack_out();
    void thread_outStream_V_keep_V_1_data_out();
    void thread_outStream_V_keep_V_1_load_A();
    void thread_outStream_V_keep_V_1_load_B();
    void thread_outStream_V_keep_V_1_sel();
    void thread_outStream_V_keep_V_1_state_cmp_full();
    void thread_outStream_V_keep_V_1_vld_in();
    void thread_outStream_V_keep_V_1_vld_out();
    void thread_outStream_V_last_V_1_ack_in();
    void thread_outStream_V_last_V_1_ack_out();
    void thread_outStream_V_last_V_1_data_out();
    void thread_outStream_V_last_V_1_load_A();
    void thread_outStream_V_last_V_1_load_B();
    void thread_outStream_V_last_V_1_sel();
    void thread_outStream_V_last_V_1_state_cmp_full();
    void thread_outStream_V_last_V_1_vld_in();
    void thread_outStream_V_last_V_1_vld_out();
    void thread_outStream_V_strb_V_1_ack_in();
    void thread_outStream_V_strb_V_1_ack_out();
    void thread_outStream_V_strb_V_1_data_out();
    void thread_outStream_V_strb_V_1_load_A();
    void thread_outStream_V_strb_V_1_load_B();
    void thread_outStream_V_strb_V_1_sel();
    void thread_outStream_V_strb_V_1_state_cmp_full();
    void thread_outStream_V_strb_V_1_vld_in();
    void thread_outStream_V_strb_V_1_vld_out();
    void thread_outStream_V_user_V_1_ack_in();
    void thread_outStream_V_user_V_1_ack_out();
    void thread_outStream_V_user_V_1_data_out();
    void thread_outStream_V_user_V_1_load_A();
    void thread_outStream_V_user_V_1_load_B();
    void thread_outStream_V_user_V_1_sel();
    void thread_outStream_V_user_V_1_state_cmp_full();
    void thread_outStream_V_user_V_1_vld_in();
    void thread_outStream_V_user_V_1_vld_out();
    void thread_p_Result_1_fu_435_p3();
    void thread_p_Result_2_fu_511_p3();
    void thread_p_Result_3_fu_525_p3();
    void thread_p_Result_4_fu_601_p3();
    void thread_p_Result_5_fu_615_p3();
    void thread_p_Result_6_fu_691_p3();
    void thread_p_Result_7_fu_705_p3();
    void thread_p_Result_s_fu_421_p3();
    void thread_p_Val2_10_fu_519_p2();
    void thread_p_Val2_12_fu_609_p2();
    void thread_p_Val2_13_fu_359_p4();
    void thread_p_Val2_15_fu_699_p2();
    void thread_p_Val2_1_fu_373_p1();
    void thread_p_Val2_2_fu_397_p4();
    void thread_p_Val2_4_fu_339_p4();
    void thread_p_Val2_5_fu_377_p4();
    void thread_p_Val2_6_fu_429_p2();
    void thread_p_Val2_8_fu_349_p4();
    void thread_p_Val2_9_fu_387_p4();
    void thread_p_Val2_s_fu_335_p1();
    void thread_ret_V_1_fu_505_p2();
    void thread_ret_V_2_fu_595_p2();
    void thread_ret_V_3_fu_685_p2();
    void thread_ret_V_fu_415_p2();
    void thread_rhs_V_1_fu_501_p1();
    void thread_rhs_V_2_fu_591_p1();
    void thread_rhs_V_3_fu_681_p1();
    void thread_rhs_V_fu_411_p1();
    void thread_row_idx_fu_254_p2();
    void thread_select_ln340_1_fu_563_p3();
    void thread_select_ln340_2_fu_653_p3();
    void thread_select_ln340_3_fu_743_p3();
    void thread_select_ln340_fu_473_p3();
    void thread_select_ln388_1_fu_571_p3();
    void thread_select_ln388_2_fu_661_p3();
    void thread_select_ln388_3_fu_751_p3();
    void thread_select_ln388_fu_481_p3();
    void thread_tmp_data_2_fu_785_p5();
    void thread_tmp_data_sub_data_0_s_fu_489_p3();
    void thread_tmp_data_sub_data_1_s_fu_579_p3();
    void thread_tmp_data_sub_data_2_s_fu_669_p3();
    void thread_tmp_data_sub_data_3_s_fu_759_p3();
    void thread_tmp_last_V_fu_778_p2();
    void thread_underflow_1_fu_539_p2();
    void thread_underflow_2_fu_629_p2();
    void thread_underflow_3_fu_719_p2();
    void thread_underflow_fu_449_p2();
    void thread_xor_ln340_1_fu_551_p2();
    void thread_xor_ln340_2_fu_641_p2();
    void thread_xor_ln340_3_fu_731_p2();
    void thread_xor_ln340_4_fu_455_p2();
    void thread_xor_ln340_5_fu_545_p2();
    void thread_xor_ln340_6_fu_635_p2();
    void thread_xor_ln340_7_fu_725_p2();
    void thread_xor_ln340_fu_461_p2();
    void thread_xor_ln786_1_fu_533_p2();
    void thread_xor_ln786_2_fu_623_p2();
    void thread_xor_ln786_3_fu_713_p2();
    void thread_xor_ln786_fu_443_p2();
    void thread_zext_ln1354_1_fu_240_p1();
    void thread_zext_ln1354_fu_230_p1();
    void thread_zext_ln1598_fu_260_p1();
    void thread_zext_ln18_fu_280_p1();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
