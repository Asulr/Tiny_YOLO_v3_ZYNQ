// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _yolo_acc_top_HH_
#define _yolo_acc_top_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "post_process_unit.h"
#include "yolo_acc_top_mul_mul_13ns_9ns_22_1_1.h"
#include "yolo_acc_top_kernel_bias_fp_0_V.h"
#include "yolo_acc_top_CTRL_BUS_s_axi.h"

namespace ap_rtl {

template<unsigned int C_S_AXI_CTRL_BUS_ADDR_WIDTH = 6,
         unsigned int C_S_AXI_CTRL_BUS_DATA_WIDTH = 32>
struct yolo_acc_top : public sc_module {
    // Port declarations 47
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst_n;
    sc_in< sc_lv<64> > inStream_a_TDATA;
    sc_in< sc_logic > inStream_a_TVALID;
    sc_out< sc_logic > inStream_a_TREADY;
    sc_in< sc_lv<8> > inStream_a_TKEEP;
    sc_in< sc_lv<8> > inStream_a_TSTRB;
    sc_in< sc_lv<2> > inStream_a_TUSER;
    sc_in< sc_lv<1> > inStream_a_TLAST;
    sc_in< sc_lv<5> > inStream_a_TID;
    sc_in< sc_lv<6> > inStream_a_TDEST;
    sc_in< sc_lv<64> > inStream_b_TDATA;
    sc_in< sc_logic > inStream_b_TVALID;
    sc_out< sc_logic > inStream_b_TREADY;
    sc_in< sc_lv<8> > inStream_b_TKEEP;
    sc_in< sc_lv<8> > inStream_b_TSTRB;
    sc_in< sc_lv<2> > inStream_b_TUSER;
    sc_in< sc_lv<1> > inStream_b_TLAST;
    sc_in< sc_lv<5> > inStream_b_TID;
    sc_in< sc_lv<6> > inStream_b_TDEST;
    sc_out< sc_lv<64> > outStream_TDATA;
    sc_out< sc_logic > outStream_TVALID;
    sc_in< sc_logic > outStream_TREADY;
    sc_out< sc_lv<8> > outStream_TKEEP;
    sc_out< sc_lv<8> > outStream_TSTRB;
    sc_out< sc_lv<2> > outStream_TUSER;
    sc_out< sc_lv<1> > outStream_TLAST;
    sc_out< sc_lv<5> > outStream_TID;
    sc_out< sc_lv<6> > outStream_TDEST;
    sc_in< sc_logic > s_axi_CTRL_BUS_AWVALID;
    sc_out< sc_logic > s_axi_CTRL_BUS_AWREADY;
    sc_in< sc_uint<C_S_AXI_CTRL_BUS_ADDR_WIDTH> > s_axi_CTRL_BUS_AWADDR;
    sc_in< sc_logic > s_axi_CTRL_BUS_WVALID;
    sc_out< sc_logic > s_axi_CTRL_BUS_WREADY;
    sc_in< sc_uint<C_S_AXI_CTRL_BUS_DATA_WIDTH> > s_axi_CTRL_BUS_WDATA;
    sc_in< sc_uint<C_S_AXI_CTRL_BUS_DATA_WIDTH/8> > s_axi_CTRL_BUS_WSTRB;
    sc_in< sc_logic > s_axi_CTRL_BUS_ARVALID;
    sc_out< sc_logic > s_axi_CTRL_BUS_ARREADY;
    sc_in< sc_uint<C_S_AXI_CTRL_BUS_ADDR_WIDTH> > s_axi_CTRL_BUS_ARADDR;
    sc_out< sc_logic > s_axi_CTRL_BUS_RVALID;
    sc_in< sc_logic > s_axi_CTRL_BUS_RREADY;
    sc_out< sc_uint<C_S_AXI_CTRL_BUS_DATA_WIDTH> > s_axi_CTRL_BUS_RDATA;
    sc_out< sc_lv<2> > s_axi_CTRL_BUS_RRESP;
    sc_out< sc_logic > s_axi_CTRL_BUS_BVALID;
    sc_in< sc_logic > s_axi_CTRL_BUS_BREADY;
    sc_out< sc_lv<2> > s_axi_CTRL_BUS_BRESP;
    sc_out< sc_logic > interrupt;
    sc_signal< sc_logic > ap_var_for_const0;


    // Module declarations
    yolo_acc_top(sc_module_name name);
    SC_HAS_PROCESS(yolo_acc_top);

    ~yolo_acc_top();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    yolo_acc_top_CTRL_BUS_s_axi<C_S_AXI_CTRL_BUS_ADDR_WIDTH,C_S_AXI_CTRL_BUS_DATA_WIDTH>* yolo_acc_top_CTRL_BUS_s_axi_U;
    yolo_acc_top_kernel_bias_fp_0_V* kernel_bias_fp_0_V_U;
    yolo_acc_top_kernel_bias_fp_0_V* kernel_bias_fp_1_V_U;
    post_process_unit* grp_post_process_unit_fu_403;
    post_process_unit* grp_post_process_unit_fu_412;
    post_process_unit* grp_post_process_unit_fu_421;
    post_process_unit* grp_post_process_unit_fu_430;
    yolo_acc_top_mul_mul_13ns_9ns_22_1_1<1,1,13,9,22>* yolo_acc_top_mul_mul_13ns_9ns_22_1_1_U7;
    sc_signal< sc_logic > ap_rst_n_inv;
    sc_signal< sc_logic > ap_start;
    sc_signal< sc_logic > ap_done;
    sc_signal< sc_logic > ap_idle;
    sc_signal< sc_lv<6> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > ap_ready;
    sc_signal< sc_lv<64> > inStream_a_V_data_0_data_out;
    sc_signal< sc_logic > inStream_a_V_data_0_vld_in;
    sc_signal< sc_logic > inStream_a_V_data_0_vld_out;
    sc_signal< sc_logic > inStream_a_V_data_0_ack_in;
    sc_signal< sc_logic > inStream_a_V_data_0_ack_out;
    sc_signal< sc_lv<64> > inStream_a_V_data_0_payload_A;
    sc_signal< sc_lv<64> > inStream_a_V_data_0_payload_B;
    sc_signal< sc_logic > inStream_a_V_data_0_sel_rd;
    sc_signal< sc_logic > inStream_a_V_data_0_sel_wr;
    sc_signal< sc_logic > inStream_a_V_data_0_sel;
    sc_signal< sc_logic > inStream_a_V_data_0_load_A;
    sc_signal< sc_logic > inStream_a_V_data_0_load_B;
    sc_signal< sc_lv<2> > inStream_a_V_data_0_state;
    sc_signal< sc_logic > inStream_a_V_data_0_state_cmp_full;
    sc_signal< sc_lv<8> > inStream_a_V_keep_V_0_data_out;
    sc_signal< sc_logic > inStream_a_V_keep_V_0_vld_in;
    sc_signal< sc_logic > inStream_a_V_keep_V_0_vld_out;
    sc_signal< sc_logic > inStream_a_V_keep_V_0_ack_in;
    sc_signal< sc_logic > inStream_a_V_keep_V_0_ack_out;
    sc_signal< sc_lv<8> > inStream_a_V_keep_V_0_payload_A;
    sc_signal< sc_lv<8> > inStream_a_V_keep_V_0_payload_B;
    sc_signal< sc_logic > inStream_a_V_keep_V_0_sel_rd;
    sc_signal< sc_logic > inStream_a_V_keep_V_0_sel_wr;
    sc_signal< sc_logic > inStream_a_V_keep_V_0_sel;
    sc_signal< sc_logic > inStream_a_V_keep_V_0_load_A;
    sc_signal< sc_logic > inStream_a_V_keep_V_0_load_B;
    sc_signal< sc_lv<2> > inStream_a_V_keep_V_0_state;
    sc_signal< sc_logic > inStream_a_V_keep_V_0_state_cmp_full;
    sc_signal< sc_lv<8> > inStream_a_V_strb_V_0_data_out;
    sc_signal< sc_logic > inStream_a_V_strb_V_0_vld_in;
    sc_signal< sc_logic > inStream_a_V_strb_V_0_vld_out;
    sc_signal< sc_logic > inStream_a_V_strb_V_0_ack_in;
    sc_signal< sc_logic > inStream_a_V_strb_V_0_ack_out;
    sc_signal< sc_lv<8> > inStream_a_V_strb_V_0_payload_A;
    sc_signal< sc_lv<8> > inStream_a_V_strb_V_0_payload_B;
    sc_signal< sc_logic > inStream_a_V_strb_V_0_sel_rd;
    sc_signal< sc_logic > inStream_a_V_strb_V_0_sel_wr;
    sc_signal< sc_logic > inStream_a_V_strb_V_0_sel;
    sc_signal< sc_logic > inStream_a_V_strb_V_0_load_A;
    sc_signal< sc_logic > inStream_a_V_strb_V_0_load_B;
    sc_signal< sc_lv<2> > inStream_a_V_strb_V_0_state;
    sc_signal< sc_logic > inStream_a_V_strb_V_0_state_cmp_full;
    sc_signal< sc_lv<2> > inStream_a_V_user_V_0_data_out;
    sc_signal< sc_logic > inStream_a_V_user_V_0_vld_in;
    sc_signal< sc_logic > inStream_a_V_user_V_0_vld_out;
    sc_signal< sc_logic > inStream_a_V_user_V_0_ack_in;
    sc_signal< sc_logic > inStream_a_V_user_V_0_ack_out;
    sc_signal< sc_lv<2> > inStream_a_V_user_V_0_payload_A;
    sc_signal< sc_lv<2> > inStream_a_V_user_V_0_payload_B;
    sc_signal< sc_logic > inStream_a_V_user_V_0_sel_rd;
    sc_signal< sc_logic > inStream_a_V_user_V_0_sel_wr;
    sc_signal< sc_logic > inStream_a_V_user_V_0_sel;
    sc_signal< sc_logic > inStream_a_V_user_V_0_load_A;
    sc_signal< sc_logic > inStream_a_V_user_V_0_load_B;
    sc_signal< sc_lv<2> > inStream_a_V_user_V_0_state;
    sc_signal< sc_logic > inStream_a_V_user_V_0_state_cmp_full;
    sc_signal< sc_lv<5> > inStream_a_V_id_V_0_data_out;
    sc_signal< sc_logic > inStream_a_V_id_V_0_vld_in;
    sc_signal< sc_logic > inStream_a_V_id_V_0_vld_out;
    sc_signal< sc_logic > inStream_a_V_id_V_0_ack_in;
    sc_signal< sc_logic > inStream_a_V_id_V_0_ack_out;
    sc_signal< sc_lv<5> > inStream_a_V_id_V_0_payload_A;
    sc_signal< sc_lv<5> > inStream_a_V_id_V_0_payload_B;
    sc_signal< sc_logic > inStream_a_V_id_V_0_sel_rd;
    sc_signal< sc_logic > inStream_a_V_id_V_0_sel_wr;
    sc_signal< sc_logic > inStream_a_V_id_V_0_sel;
    sc_signal< sc_logic > inStream_a_V_id_V_0_load_A;
    sc_signal< sc_logic > inStream_a_V_id_V_0_load_B;
    sc_signal< sc_lv<2> > inStream_a_V_id_V_0_state;
    sc_signal< sc_logic > inStream_a_V_id_V_0_state_cmp_full;
    sc_signal< sc_lv<6> > inStream_a_V_dest_V_0_data_out;
    sc_signal< sc_logic > inStream_a_V_dest_V_0_vld_in;
    sc_signal< sc_logic > inStream_a_V_dest_V_0_vld_out;
    sc_signal< sc_logic > inStream_a_V_dest_V_0_ack_in;
    sc_signal< sc_logic > inStream_a_V_dest_V_0_ack_out;
    sc_signal< sc_lv<6> > inStream_a_V_dest_V_0_payload_A;
    sc_signal< sc_lv<6> > inStream_a_V_dest_V_0_payload_B;
    sc_signal< sc_logic > inStream_a_V_dest_V_0_sel_rd;
    sc_signal< sc_logic > inStream_a_V_dest_V_0_sel_wr;
    sc_signal< sc_logic > inStream_a_V_dest_V_0_sel;
    sc_signal< sc_logic > inStream_a_V_dest_V_0_load_A;
    sc_signal< sc_logic > inStream_a_V_dest_V_0_load_B;
    sc_signal< sc_lv<2> > inStream_a_V_dest_V_0_state;
    sc_signal< sc_logic > inStream_a_V_dest_V_0_state_cmp_full;
    sc_signal< sc_lv<64> > inStream_b_V_data_0_data_out;
    sc_signal< sc_logic > inStream_b_V_data_0_vld_in;
    sc_signal< sc_logic > inStream_b_V_data_0_vld_out;
    sc_signal< sc_logic > inStream_b_V_data_0_ack_in;
    sc_signal< sc_logic > inStream_b_V_data_0_ack_out;
    sc_signal< sc_lv<64> > inStream_b_V_data_0_payload_A;
    sc_signal< sc_lv<64> > inStream_b_V_data_0_payload_B;
    sc_signal< sc_logic > inStream_b_V_data_0_sel_rd;
    sc_signal< sc_logic > inStream_b_V_data_0_sel_wr;
    sc_signal< sc_logic > inStream_b_V_data_0_sel;
    sc_signal< sc_logic > inStream_b_V_data_0_load_A;
    sc_signal< sc_logic > inStream_b_V_data_0_load_B;
    sc_signal< sc_lv<2> > inStream_b_V_data_0_state;
    sc_signal< sc_logic > inStream_b_V_data_0_state_cmp_full;
    sc_signal< sc_logic > inStream_b_V_dest_V_0_vld_in;
    sc_signal< sc_logic > inStream_b_V_dest_V_0_ack_out;
    sc_signal< sc_lv<2> > inStream_b_V_dest_V_0_state;
    sc_signal< sc_lv<64> > outStream_V_data_1_data_out;
    sc_signal< sc_logic > outStream_V_data_1_vld_in;
    sc_signal< sc_logic > outStream_V_data_1_vld_out;
    sc_signal< sc_logic > outStream_V_data_1_ack_in;
    sc_signal< sc_logic > outStream_V_data_1_ack_out;
    sc_signal< sc_lv<64> > outStream_V_data_1_payload_A;
    sc_signal< sc_lv<64> > outStream_V_data_1_payload_B;
    sc_signal< sc_logic > outStream_V_data_1_sel_rd;
    sc_signal< sc_logic > outStream_V_data_1_sel_wr;
    sc_signal< sc_logic > outStream_V_data_1_sel;
    sc_signal< sc_logic > outStream_V_data_1_load_A;
    sc_signal< sc_logic > outStream_V_data_1_load_B;
    sc_signal< sc_lv<2> > outStream_V_data_1_state;
    sc_signal< sc_logic > outStream_V_data_1_state_cmp_full;
    sc_signal< sc_lv<8> > outStream_V_keep_V_1_data_out;
    sc_signal< sc_logic > outStream_V_keep_V_1_vld_in;
    sc_signal< sc_logic > outStream_V_keep_V_1_vld_out;
    sc_signal< sc_logic > outStream_V_keep_V_1_ack_in;
    sc_signal< sc_logic > outStream_V_keep_V_1_ack_out;
    sc_signal< sc_lv<8> > outStream_V_keep_V_1_payload_A;
    sc_signal< sc_lv<8> > outStream_V_keep_V_1_payload_B;
    sc_signal< sc_logic > outStream_V_keep_V_1_sel_rd;
    sc_signal< sc_logic > outStream_V_keep_V_1_sel_wr;
    sc_signal< sc_logic > outStream_V_keep_V_1_sel;
    sc_signal< sc_logic > outStream_V_keep_V_1_load_A;
    sc_signal< sc_logic > outStream_V_keep_V_1_load_B;
    sc_signal< sc_lv<2> > outStream_V_keep_V_1_state;
    sc_signal< sc_logic > outStream_V_keep_V_1_state_cmp_full;
    sc_signal< sc_lv<8> > outStream_V_strb_V_1_data_out;
    sc_signal< sc_logic > outStream_V_strb_V_1_vld_in;
    sc_signal< sc_logic > outStream_V_strb_V_1_vld_out;
    sc_signal< sc_logic > outStream_V_strb_V_1_ack_in;
    sc_signal< sc_logic > outStream_V_strb_V_1_ack_out;
    sc_signal< sc_lv<8> > outStream_V_strb_V_1_payload_A;
    sc_signal< sc_lv<8> > outStream_V_strb_V_1_payload_B;
    sc_signal< sc_logic > outStream_V_strb_V_1_sel_rd;
    sc_signal< sc_logic > outStream_V_strb_V_1_sel_wr;
    sc_signal< sc_logic > outStream_V_strb_V_1_sel;
    sc_signal< sc_logic > outStream_V_strb_V_1_load_A;
    sc_signal< sc_logic > outStream_V_strb_V_1_load_B;
    sc_signal< sc_lv<2> > outStream_V_strb_V_1_state;
    sc_signal< sc_logic > outStream_V_strb_V_1_state_cmp_full;
    sc_signal< sc_lv<2> > outStream_V_user_V_1_data_out;
    sc_signal< sc_logic > outStream_V_user_V_1_vld_in;
    sc_signal< sc_logic > outStream_V_user_V_1_vld_out;
    sc_signal< sc_logic > outStream_V_user_V_1_ack_in;
    sc_signal< sc_logic > outStream_V_user_V_1_ack_out;
    sc_signal< sc_lv<2> > outStream_V_user_V_1_payload_A;
    sc_signal< sc_lv<2> > outStream_V_user_V_1_payload_B;
    sc_signal< sc_logic > outStream_V_user_V_1_sel_rd;
    sc_signal< sc_logic > outStream_V_user_V_1_sel_wr;
    sc_signal< sc_logic > outStream_V_user_V_1_sel;
    sc_signal< sc_logic > outStream_V_user_V_1_load_A;
    sc_signal< sc_logic > outStream_V_user_V_1_load_B;
    sc_signal< sc_lv<2> > outStream_V_user_V_1_state;
    sc_signal< sc_logic > outStream_V_user_V_1_state_cmp_full;
    sc_signal< sc_lv<1> > outStream_V_last_V_1_data_out;
    sc_signal< sc_logic > outStream_V_last_V_1_vld_in;
    sc_signal< sc_logic > outStream_V_last_V_1_vld_out;
    sc_signal< sc_logic > outStream_V_last_V_1_ack_in;
    sc_signal< sc_logic > outStream_V_last_V_1_ack_out;
    sc_signal< sc_lv<1> > outStream_V_last_V_1_payload_A;
    sc_signal< sc_lv<1> > outStream_V_last_V_1_payload_B;
    sc_signal< sc_logic > outStream_V_last_V_1_sel_rd;
    sc_signal< sc_logic > outStream_V_last_V_1_sel_wr;
    sc_signal< sc_logic > outStream_V_last_V_1_sel;
    sc_signal< sc_logic > outStream_V_last_V_1_load_A;
    sc_signal< sc_logic > outStream_V_last_V_1_load_B;
    sc_signal< sc_lv<2> > outStream_V_last_V_1_state;
    sc_signal< sc_logic > outStream_V_last_V_1_state_cmp_full;
    sc_signal< sc_lv<5> > outStream_V_id_V_1_data_out;
    sc_signal< sc_logic > outStream_V_id_V_1_vld_in;
    sc_signal< sc_logic > outStream_V_id_V_1_vld_out;
    sc_signal< sc_logic > outStream_V_id_V_1_ack_in;
    sc_signal< sc_logic > outStream_V_id_V_1_ack_out;
    sc_signal< sc_lv<5> > outStream_V_id_V_1_payload_A;
    sc_signal< sc_lv<5> > outStream_V_id_V_1_payload_B;
    sc_signal< sc_logic > outStream_V_id_V_1_sel_rd;
    sc_signal< sc_logic > outStream_V_id_V_1_sel_wr;
    sc_signal< sc_logic > outStream_V_id_V_1_sel;
    sc_signal< sc_logic > outStream_V_id_V_1_load_A;
    sc_signal< sc_logic > outStream_V_id_V_1_load_B;
    sc_signal< sc_lv<2> > outStream_V_id_V_1_state;
    sc_signal< sc_logic > outStream_V_id_V_1_state_cmp_full;
    sc_signal< sc_lv<6> > outStream_V_dest_V_1_data_out;
    sc_signal< sc_logic > outStream_V_dest_V_1_vld_in;
    sc_signal< sc_logic > outStream_V_dest_V_1_vld_out;
    sc_signal< sc_logic > outStream_V_dest_V_1_ack_in;
    sc_signal< sc_logic > outStream_V_dest_V_1_ack_out;
    sc_signal< sc_lv<6> > outStream_V_dest_V_1_payload_A;
    sc_signal< sc_lv<6> > outStream_V_dest_V_1_payload_B;
    sc_signal< sc_logic > outStream_V_dest_V_1_sel_rd;
    sc_signal< sc_logic > outStream_V_dest_V_1_sel_wr;
    sc_signal< sc_logic > outStream_V_dest_V_1_sel;
    sc_signal< sc_logic > outStream_V_dest_V_1_load_A;
    sc_signal< sc_logic > outStream_V_dest_V_1_load_B;
    sc_signal< sc_lv<2> > outStream_V_dest_V_1_state;
    sc_signal< sc_logic > outStream_V_dest_V_1_state_cmp_full;
    sc_signal< sc_lv<9> > input_h_V;
    sc_signal< sc_lv<9> > input_w_V;
    sc_signal< sc_lv<4> > fold_input_ch_V;
    sc_signal< sc_lv<1> > leaky_V;
    sc_signal< sc_lv<1> > bias_en_V;
    sc_signal< sc_logic > inStream_a_TDATA_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_pp1_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp1_iter0;
    sc_signal< bool > ap_block_pp1_stage0;
    sc_signal< sc_lv<1> > icmp_ln40_fu_589_p2;
    sc_signal< sc_logic > inStream_b_TDATA_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<1> > icmp_ln23_fu_476_p2;
    sc_signal< sc_lv<1> > bias_en_V_read_reg_1225;
    sc_signal< sc_logic > outStream_TDATA_blk_n;
    sc_signal< sc_logic > ap_enable_reg_pp1_iter4;
    sc_signal< sc_lv<1> > icmp_ln40_reg_1302;
    sc_signal< sc_lv<1> > icmp_ln40_reg_1302_pp1_iter3_reg;
    sc_signal< sc_logic > ap_enable_reg_pp1_iter5;
    sc_signal< sc_lv<1> > icmp_ln40_reg_1302_pp1_iter4_reg;
    sc_signal< sc_lv<22> > indvar_flatten17_reg_348;
    sc_signal< sc_lv<9> > i_op_assign_reg_359;
    sc_signal< sc_lv<13> > indvar_flatten_reg_370;
    sc_signal< sc_lv<9> > i_op_assign_1_reg_381;
    sc_signal< sc_lv<4> > i_op_assign_2_reg_392;
    sc_signal< sc_lv<1> > leaky_V_read_reg_1233;
    sc_signal< sc_lv<4> > fold_input_ch_V_read_reg_1241;
    sc_signal< sc_lv<9> > input_w_V_read_reg_1249;
    sc_signal< sc_lv<9> > input_h_V_read_reg_1255;
    sc_signal< sc_lv<4> > i_V_fu_481_p2;
    sc_signal< bool > ap_predicate_op64_read_state2;
    sc_signal< bool > ap_block_state2;
    sc_signal< sc_lv<13> > mul_ln1354_fu_524_p2;
    sc_signal< sc_lv<13> > mul_ln1354_reg_1269;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<10> > add_ln1354_fu_533_p2;
    sc_signal< sc_lv<10> > add_ln1354_reg_1275;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<10> > add_ln1354_1_fu_542_p2;
    sc_signal< sc_lv<10> > add_ln1354_1_reg_1281;
    sc_signal< sc_lv<22> > mul_ln1354_1_fu_1219_p2;
    sc_signal< sc_lv<22> > mul_ln1354_1_reg_1287;
    sc_signal< sc_lv<1> > icmp_ln73_3_fu_554_p2;
    sc_signal< sc_lv<1> > icmp_ln73_3_reg_1292;
    sc_signal< sc_lv<1> > icmp_ln46_fu_560_p2;
    sc_signal< sc_lv<1> > icmp_ln46_reg_1297;
    sc_signal< bool > ap_block_state5_pp1_stage0_iter0;
    sc_signal< bool > ap_block_state6_pp1_stage0_iter1;
    sc_signal< bool > ap_block_state7_pp1_stage0_iter2;
    sc_signal< bool > ap_block_state8_pp1_stage0_iter3;
    sc_signal< bool > ap_block_state9_pp1_stage0_iter4;
    sc_signal< bool > ap_block_state9_io;
    sc_signal< bool > ap_block_state10_pp1_stage0_iter5;
    sc_signal< bool > ap_block_state10_io;
    sc_signal< bool > ap_block_pp1_stage0_11001;
    sc_signal< sc_lv<1> > icmp_ln40_reg_1302_pp1_iter1_reg;
    sc_signal< sc_lv<1> > icmp_ln40_reg_1302_pp1_iter2_reg;
    sc_signal< sc_lv<22> > add_ln40_fu_594_p2;
    sc_signal< sc_lv<9> > select_ln40_fu_661_p3;
    sc_signal< sc_lv<9> > select_ln43_fu_712_p3;
    sc_signal< sc_lv<8> > tmp_keep_V_reg_1321;
    sc_signal< sc_lv<8> > tmp_keep_V_reg_1321_pp1_iter1_reg;
    sc_signal< sc_lv<8> > tmp_keep_V_reg_1321_pp1_iter2_reg;
    sc_signal< sc_lv<8> > tmp_keep_V_reg_1321_pp1_iter3_reg;
    sc_signal< sc_lv<8> > tmp_strb_V_reg_1326;
    sc_signal< sc_lv<8> > tmp_strb_V_reg_1326_pp1_iter1_reg;
    sc_signal< sc_lv<8> > tmp_strb_V_reg_1326_pp1_iter2_reg;
    sc_signal< sc_lv<8> > tmp_strb_V_reg_1326_pp1_iter3_reg;
    sc_signal< sc_lv<2> > tmp_user_V_reg_1331;
    sc_signal< sc_lv<2> > tmp_user_V_reg_1331_pp1_iter1_reg;
    sc_signal< sc_lv<2> > tmp_user_V_reg_1331_pp1_iter2_reg;
    sc_signal< sc_lv<2> > tmp_user_V_reg_1331_pp1_iter3_reg;
    sc_signal< sc_lv<5> > tmp_id_V_reg_1336;
    sc_signal< sc_lv<5> > tmp_id_V_reg_1336_pp1_iter1_reg;
    sc_signal< sc_lv<5> > tmp_id_V_reg_1336_pp1_iter2_reg;
    sc_signal< sc_lv<5> > tmp_id_V_reg_1336_pp1_iter3_reg;
    sc_signal< sc_lv<6> > tmp_dest_V_reg_1341;
    sc_signal< sc_lv<6> > tmp_dest_V_reg_1341_pp1_iter1_reg;
    sc_signal< sc_lv<6> > tmp_dest_V_reg_1341_pp1_iter2_reg;
    sc_signal< sc_lv<6> > tmp_dest_V_reg_1341_pp1_iter3_reg;
    sc_signal< sc_lv<16> > output_acc_0_V_fu_864_p3;
    sc_signal< sc_lv<16> > output_acc_0_V_reg_1346;
    sc_signal< sc_lv<16> > output_acc_1_V_fu_954_p3;
    sc_signal< sc_lv<16> > output_acc_1_V_reg_1351;
    sc_signal< sc_lv<16> > output_acc_2_V_fu_1044_p3;
    sc_signal< sc_lv<16> > output_acc_2_V_reg_1356;
    sc_signal< sc_lv<16> > output_acc_3_V_fu_1134_p3;
    sc_signal< sc_lv<16> > output_acc_3_V_reg_1361;
    sc_signal< sc_lv<1> > tmp_last_V_fu_1180_p2;
    sc_signal< sc_lv<1> > tmp_last_V_reg_1386;
    sc_signal< sc_lv<1> > tmp_last_V_reg_1386_pp1_iter1_reg;
    sc_signal< sc_lv<1> > tmp_last_V_reg_1386_pp1_iter2_reg;
    sc_signal< sc_lv<1> > tmp_last_V_reg_1386_pp1_iter3_reg;
    sc_signal< sc_lv<4> > input_ch_idx_fu_1186_p2;
    sc_signal< sc_lv<13> > select_ln43_1_fu_1198_p3;
    sc_signal< sc_lv<16> > kernel_bias_fp_0_V_q0;
    sc_signal< sc_logic > ap_enable_reg_pp1_iter1;
    sc_signal< sc_lv<16> > kernel_bias_fp_1_V_q0;
    sc_signal< sc_lv<16> > kernel_bias_fp_0_V_q1;
    sc_signal< sc_lv<16> > kernel_bias_fp_1_V_q1;
    sc_signal< sc_lv<64> > tmp_data_3_fu_1206_p5;
    sc_signal< bool > ap_block_pp1_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp1_exit_iter0_state5;
    sc_signal< sc_logic > ap_enable_reg_pp1_iter2;
    sc_signal< sc_logic > ap_enable_reg_pp1_iter3;
    sc_signal< sc_lv<4> > kernel_bias_fp_0_V_address0;
    sc_signal< sc_logic > kernel_bias_fp_0_V_ce0;
    sc_signal< sc_logic > kernel_bias_fp_0_V_we0;
    sc_signal< sc_lv<16> > kernel_bias_fp_0_V_d0;
    sc_signal< sc_lv<4> > kernel_bias_fp_0_V_address1;
    sc_signal< sc_logic > kernel_bias_fp_0_V_ce1;
    sc_signal< sc_logic > kernel_bias_fp_0_V_we1;
    sc_signal< sc_lv<16> > kernel_bias_fp_0_V_d1;
    sc_signal< sc_lv<4> > kernel_bias_fp_1_V_address0;
    sc_signal< sc_logic > kernel_bias_fp_1_V_ce0;
    sc_signal< sc_logic > kernel_bias_fp_1_V_we0;
    sc_signal< sc_lv<16> > kernel_bias_fp_1_V_d0;
    sc_signal< sc_lv<4> > kernel_bias_fp_1_V_address1;
    sc_signal< sc_logic > kernel_bias_fp_1_V_ce1;
    sc_signal< sc_logic > kernel_bias_fp_1_V_we1;
    sc_signal< sc_lv<16> > kernel_bias_fp_1_V_d1;
    sc_signal< sc_lv<16> > grp_post_process_unit_fu_403_ap_return;
    sc_signal< sc_logic > grp_post_process_unit_fu_403_ap_ce;
    sc_signal< bool > ap_block_state5_pp1_stage0_iter0_ignore_call99;
    sc_signal< bool > ap_block_state6_pp1_stage0_iter1_ignore_call99;
    sc_signal< bool > ap_block_state7_pp1_stage0_iter2_ignore_call99;
    sc_signal< bool > ap_block_state8_pp1_stage0_iter3_ignore_call99;
    sc_signal< bool > ap_block_state9_pp1_stage0_iter4_ignore_call99;
    sc_signal< bool > ap_block_state10_pp1_stage0_iter5_ignore_call99;
    sc_signal< bool > ap_block_pp1_stage0_11001_ignoreCallOp222;
    sc_signal< sc_lv<16> > grp_post_process_unit_fu_412_ap_return;
    sc_signal< sc_logic > grp_post_process_unit_fu_412_ap_ce;
    sc_signal< bool > ap_block_state5_pp1_stage0_iter0_ignore_call102;
    sc_signal< bool > ap_block_state6_pp1_stage0_iter1_ignore_call102;
    sc_signal< bool > ap_block_state7_pp1_stage0_iter2_ignore_call102;
    sc_signal< bool > ap_block_state8_pp1_stage0_iter3_ignore_call102;
    sc_signal< bool > ap_block_state9_pp1_stage0_iter4_ignore_call102;
    sc_signal< bool > ap_block_state10_pp1_stage0_iter5_ignore_call102;
    sc_signal< bool > ap_block_pp1_stage0_11001_ignoreCallOp224;
    sc_signal< sc_lv<16> > grp_post_process_unit_fu_421_ap_return;
    sc_signal< sc_logic > grp_post_process_unit_fu_421_ap_ce;
    sc_signal< bool > ap_block_state5_pp1_stage0_iter0_ignore_call107;
    sc_signal< bool > ap_block_state6_pp1_stage0_iter1_ignore_call107;
    sc_signal< bool > ap_block_state7_pp1_stage0_iter2_ignore_call107;
    sc_signal< bool > ap_block_state8_pp1_stage0_iter3_ignore_call107;
    sc_signal< bool > ap_block_state9_pp1_stage0_iter4_ignore_call107;
    sc_signal< bool > ap_block_state10_pp1_stage0_iter5_ignore_call107;
    sc_signal< bool > ap_block_pp1_stage0_11001_ignoreCallOp226;
    sc_signal< sc_lv<16> > grp_post_process_unit_fu_430_ap_return;
    sc_signal< sc_logic > grp_post_process_unit_fu_430_ap_ce;
    sc_signal< bool > ap_block_state5_pp1_stage0_iter0_ignore_call110;
    sc_signal< bool > ap_block_state6_pp1_stage0_iter1_ignore_call110;
    sc_signal< bool > ap_block_state7_pp1_stage0_iter2_ignore_call110;
    sc_signal< bool > ap_block_state8_pp1_stage0_iter3_ignore_call110;
    sc_signal< bool > ap_block_state9_pp1_stage0_iter4_ignore_call110;
    sc_signal< bool > ap_block_state10_pp1_stage0_iter5_ignore_call110;
    sc_signal< bool > ap_block_pp1_stage0_11001_ignoreCallOp228;
    sc_signal< sc_lv<4> > t_V_reg_337;
    sc_signal< sc_lv<64> > zext_ln203_fu_500_p1;
    sc_signal< sc_lv<64> > zext_ln203_1_fu_512_p1;
    sc_signal< sc_lv<64> > zext_ln63_fu_1150_p1;
    sc_signal< sc_lv<64> > zext_ln65_fu_1162_p1;
    sc_signal< bool > ap_block_pp1_stage0_01001;
    sc_signal< sc_lv<16> > grp_fu_454_p4;
    sc_signal< sc_lv<16> > grp_fu_443_p4;
    sc_signal< sc_lv<16> > grp_fu_465_p4;
    sc_signal< sc_lv<5> > tmp_1_fu_492_p3;
    sc_signal< sc_lv<5> > or_ln203_fu_506_p2;
    sc_signal< sc_lv<4> > mul_ln1354_fu_524_p0;
    sc_signal< sc_lv<9> > mul_ln1354_fu_524_p1;
    sc_signal< sc_lv<10> > zext_ln1354_fu_530_p1;
    sc_signal< sc_lv<10> > zext_ln1354_1_fu_539_p1;
    sc_signal< sc_lv<10> > zext_ln43_fu_565_p1;
    sc_signal< sc_lv<10> > zext_ln46_fu_574_p1;
    sc_signal< sc_lv<1> > icmp_ln73_1_fu_578_p2;
    sc_signal< sc_lv<1> > icmp_ln73_2_fu_569_p2;
    sc_signal< sc_lv<1> > icmp_ln43_fu_600_p2;
    sc_signal< sc_lv<9> > add_ln40_1_fu_613_p2;
    sc_signal< sc_lv<10> > zext_ln43_1_fu_619_p1;
    sc_signal< sc_lv<1> > icmp_ln73_4_fu_623_p2;
    sc_signal< sc_lv<1> > or_ln73_2_fu_636_p2;
    sc_signal< sc_lv<1> > or_ln73_fu_583_p2;
    sc_signal< sc_lv<1> > icmp_ln46_1_fu_649_p2;
    sc_signal< sc_lv<9> > select_ln1598_fu_605_p3;
    sc_signal< sc_lv<1> > select_ln1598_3_fu_654_p3;
    sc_signal< sc_lv<1> > or_ln1598_fu_675_p2;
    sc_signal< sc_lv<9> > col_idx_fu_669_p2;
    sc_signal< sc_lv<10> > zext_ln46_1_fu_689_p1;
    sc_signal< sc_lv<1> > icmp_ln73_5_fu_693_p2;
    sc_signal< sc_lv<1> > select_ln1598_1_fu_628_p3;
    sc_signal< sc_lv<1> > or_ln73_3_fu_698_p2;
    sc_signal< sc_lv<1> > select_ln1598_2_fu_641_p3;
    sc_signal< sc_lv<16> > p_Val2_s_fu_744_p1;
    sc_signal< sc_lv<16> > p_Val2_1_fu_778_p1;
    sc_signal< sc_lv<17> > rhs_V_fu_786_p1;
    sc_signal< sc_lv<17> > lhs_V_fu_782_p1;
    sc_signal< sc_lv<17> > ret_V_fu_790_p2;
    sc_signal< sc_lv<16> > p_Val2_6_fu_804_p2;
    sc_signal< sc_lv<1> > p_Result_1_fu_810_p3;
    sc_signal< sc_lv<1> > p_Result_s_fu_796_p3;
    sc_signal< sc_lv<1> > xor_ln786_fu_818_p2;
    sc_signal< sc_lv<1> > xor_ln340_fu_836_p2;
    sc_signal< sc_lv<1> > xor_ln340_4_fu_830_p2;
    sc_signal< sc_lv<1> > underflow_fu_824_p2;
    sc_signal< sc_lv<1> > or_ln340_fu_842_p2;
    sc_signal< sc_lv<16> > select_ln340_fu_848_p3;
    sc_signal< sc_lv<16> > select_ln388_fu_856_p3;
    sc_signal< sc_lv<16> > p_Val2_4_fu_748_p4;
    sc_signal< sc_lv<16> > rhs_V_1_fu_876_p0;
    sc_signal< sc_lv<17> > rhs_V_1_fu_876_p1;
    sc_signal< sc_lv<17> > lhs_V_1_fu_872_p1;
    sc_signal< sc_lv<17> > ret_V_1_fu_880_p2;
    sc_signal< sc_lv<16> > p_Val2_10_fu_894_p1;
    sc_signal< sc_lv<16> > p_Val2_10_fu_894_p2;
    sc_signal< sc_lv<1> > p_Result_3_fu_900_p3;
    sc_signal< sc_lv<1> > p_Result_2_fu_886_p3;
    sc_signal< sc_lv<1> > xor_ln786_1_fu_908_p2;
    sc_signal< sc_lv<1> > xor_ln340_1_fu_926_p2;
    sc_signal< sc_lv<1> > xor_ln340_5_fu_920_p2;
    sc_signal< sc_lv<1> > underflow_1_fu_914_p2;
    sc_signal< sc_lv<1> > or_ln340_1_fu_932_p2;
    sc_signal< sc_lv<16> > select_ln340_1_fu_938_p3;
    sc_signal< sc_lv<16> > select_ln388_1_fu_946_p3;
    sc_signal< sc_lv<16> > p_Val2_8_fu_758_p4;
    sc_signal< sc_lv<16> > rhs_V_2_fu_966_p0;
    sc_signal< sc_lv<17> > rhs_V_2_fu_966_p1;
    sc_signal< sc_lv<17> > lhs_V_2_fu_962_p1;
    sc_signal< sc_lv<17> > ret_V_2_fu_970_p2;
    sc_signal< sc_lv<16> > p_Val2_12_fu_984_p1;
    sc_signal< sc_lv<16> > p_Val2_12_fu_984_p2;
    sc_signal< sc_lv<1> > p_Result_5_fu_990_p3;
    sc_signal< sc_lv<1> > p_Result_4_fu_976_p3;
    sc_signal< sc_lv<1> > xor_ln786_2_fu_998_p2;
    sc_signal< sc_lv<1> > xor_ln340_2_fu_1016_p2;
    sc_signal< sc_lv<1> > xor_ln340_6_fu_1010_p2;
    sc_signal< sc_lv<1> > underflow_2_fu_1004_p2;
    sc_signal< sc_lv<1> > or_ln340_2_fu_1022_p2;
    sc_signal< sc_lv<16> > select_ln340_2_fu_1028_p3;
    sc_signal< sc_lv<16> > select_ln388_2_fu_1036_p3;
    sc_signal< sc_lv<16> > p_Val2_13_fu_768_p4;
    sc_signal< sc_lv<16> > rhs_V_3_fu_1056_p0;
    sc_signal< sc_lv<17> > rhs_V_3_fu_1056_p1;
    sc_signal< sc_lv<17> > lhs_V_3_fu_1052_p1;
    sc_signal< sc_lv<17> > ret_V_3_fu_1060_p2;
    sc_signal< sc_lv<16> > p_Val2_15_fu_1074_p1;
    sc_signal< sc_lv<16> > p_Val2_15_fu_1074_p2;
    sc_signal< sc_lv<1> > p_Result_7_fu_1080_p3;
    sc_signal< sc_lv<1> > p_Result_6_fu_1066_p3;
    sc_signal< sc_lv<1> > xor_ln786_3_fu_1088_p2;
    sc_signal< sc_lv<1> > xor_ln340_3_fu_1106_p2;
    sc_signal< sc_lv<1> > xor_ln340_7_fu_1100_p2;
    sc_signal< sc_lv<1> > underflow_3_fu_1094_p2;
    sc_signal< sc_lv<1> > or_ln340_3_fu_1112_p2;
    sc_signal< sc_lv<16> > select_ln340_3_fu_1118_p3;
    sc_signal< sc_lv<16> > select_ln388_3_fu_1126_p3;
    sc_signal< sc_lv<4> > select_ln1598_4_fu_681_p3;
    sc_signal< sc_lv<5> > shl_ln1_fu_1142_p3;
    sc_signal< sc_lv<5> > or_ln65_fu_1156_p2;
    sc_signal< sc_lv<1> > select_ln1598_5_fu_704_p3;
    sc_signal< sc_lv<1> > icmp_ln73_fu_1168_p2;
    sc_signal< sc_lv<1> > or_ln73_1_fu_1174_p2;
    sc_signal< sc_lv<13> > add_ln43_1_fu_1192_p2;
    sc_signal< sc_lv<13> > mul_ln1354_1_fu_1219_p0;
    sc_signal< sc_lv<9> > mul_ln1354_1_fu_1219_p1;
    sc_signal< sc_logic > ap_CS_fsm_state11;
    sc_signal< bool > ap_block_state11;
    sc_signal< sc_lv<6> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp1;
    sc_signal< sc_logic > ap_enable_pp1;
    sc_signal< sc_lv<22> > mul_ln1354_1_fu_1219_p00;
    sc_signal< sc_lv<22> > mul_ln1354_1_fu_1219_p10;
    sc_signal< sc_lv<13> > mul_ln1354_fu_524_p00;
    sc_signal< sc_lv<13> > mul_ln1354_fu_524_p10;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<6> ap_ST_fsm_state1;
    static const sc_lv<6> ap_ST_fsm_state2;
    static const sc_lv<6> ap_ST_fsm_state3;
    static const sc_lv<6> ap_ST_fsm_state4;
    static const sc_lv<6> ap_ST_fsm_pp1_stage0;
    static const sc_lv<6> ap_ST_fsm_state11;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<2> ap_const_lv2_2;
    static const sc_lv<2> ap_const_lv2_3;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<32> ap_const_lv32_4;
    static const bool ap_const_boolean_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const int C_S_AXI_DATA_WIDTH;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<22> ap_const_lv22_0;
    static const sc_lv<9> ap_const_lv9_0;
    static const sc_lv<13> ap_const_lv13_0;
    static const sc_lv<32> ap_const_lv32_10;
    static const sc_lv<32> ap_const_lv32_1F;
    static const sc_lv<32> ap_const_lv32_20;
    static const sc_lv<32> ap_const_lv32_2F;
    static const sc_lv<32> ap_const_lv32_30;
    static const sc_lv<32> ap_const_lv32_3F;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<5> ap_const_lv5_1;
    static const sc_lv<10> ap_const_lv10_3FF;
    static const sc_lv<10> ap_const_lv10_0;
    static const sc_lv<22> ap_const_lv22_1;
    static const sc_lv<9> ap_const_lv9_1;
    static const sc_lv<32> ap_const_lv32_F;
    static const sc_lv<16> ap_const_lv16_7FFF;
    static const sc_lv<16> ap_const_lv16_8000;
    static const sc_lv<4> ap_const_lv4_7;
    static const sc_lv<13> ap_const_lv13_1;
    static const sc_lv<32> ap_const_lv32_5;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_add_ln1354_1_fu_542_p2();
    void thread_add_ln1354_fu_533_p2();
    void thread_add_ln40_1_fu_613_p2();
    void thread_add_ln40_fu_594_p2();
    void thread_add_ln43_1_fu_1192_p2();
    void thread_ap_CS_fsm_pp1_stage0();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state11();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_block_pp1_stage0();
    void thread_ap_block_pp1_stage0_01001();
    void thread_ap_block_pp1_stage0_11001();
    void thread_ap_block_pp1_stage0_11001_ignoreCallOp222();
    void thread_ap_block_pp1_stage0_11001_ignoreCallOp224();
    void thread_ap_block_pp1_stage0_11001_ignoreCallOp226();
    void thread_ap_block_pp1_stage0_11001_ignoreCallOp228();
    void thread_ap_block_pp1_stage0_subdone();
    void thread_ap_block_state10_io();
    void thread_ap_block_state10_pp1_stage0_iter5();
    void thread_ap_block_state10_pp1_stage0_iter5_ignore_call102();
    void thread_ap_block_state10_pp1_stage0_iter5_ignore_call107();
    void thread_ap_block_state10_pp1_stage0_iter5_ignore_call110();
    void thread_ap_block_state10_pp1_stage0_iter5_ignore_call99();
    void thread_ap_block_state11();
    void thread_ap_block_state2();
    void thread_ap_block_state5_pp1_stage0_iter0();
    void thread_ap_block_state5_pp1_stage0_iter0_ignore_call102();
    void thread_ap_block_state5_pp1_stage0_iter0_ignore_call107();
    void thread_ap_block_state5_pp1_stage0_iter0_ignore_call110();
    void thread_ap_block_state5_pp1_stage0_iter0_ignore_call99();
    void thread_ap_block_state6_pp1_stage0_iter1();
    void thread_ap_block_state6_pp1_stage0_iter1_ignore_call102();
    void thread_ap_block_state6_pp1_stage0_iter1_ignore_call107();
    void thread_ap_block_state6_pp1_stage0_iter1_ignore_call110();
    void thread_ap_block_state6_pp1_stage0_iter1_ignore_call99();
    void thread_ap_block_state7_pp1_stage0_iter2();
    void thread_ap_block_state7_pp1_stage0_iter2_ignore_call102();
    void thread_ap_block_state7_pp1_stage0_iter2_ignore_call107();
    void thread_ap_block_state7_pp1_stage0_iter2_ignore_call110();
    void thread_ap_block_state7_pp1_stage0_iter2_ignore_call99();
    void thread_ap_block_state8_pp1_stage0_iter3();
    void thread_ap_block_state8_pp1_stage0_iter3_ignore_call102();
    void thread_ap_block_state8_pp1_stage0_iter3_ignore_call107();
    void thread_ap_block_state8_pp1_stage0_iter3_ignore_call110();
    void thread_ap_block_state8_pp1_stage0_iter3_ignore_call99();
    void thread_ap_block_state9_io();
    void thread_ap_block_state9_pp1_stage0_iter4();
    void thread_ap_block_state9_pp1_stage0_iter4_ignore_call102();
    void thread_ap_block_state9_pp1_stage0_iter4_ignore_call107();
    void thread_ap_block_state9_pp1_stage0_iter4_ignore_call110();
    void thread_ap_block_state9_pp1_stage0_iter4_ignore_call99();
    void thread_ap_condition_pp1_exit_iter0_state5();
    void thread_ap_done();
    void thread_ap_enable_pp1();
    void thread_ap_idle();
    void thread_ap_idle_pp1();
    void thread_ap_predicate_op64_read_state2();
    void thread_ap_ready();
    void thread_ap_rst_n_inv();
    void thread_col_idx_fu_669_p2();
    void thread_grp_fu_443_p4();
    void thread_grp_fu_454_p4();
    void thread_grp_fu_465_p4();
    void thread_grp_post_process_unit_fu_403_ap_ce();
    void thread_grp_post_process_unit_fu_412_ap_ce();
    void thread_grp_post_process_unit_fu_421_ap_ce();
    void thread_grp_post_process_unit_fu_430_ap_ce();
    void thread_i_V_fu_481_p2();
    void thread_icmp_ln23_fu_476_p2();
    void thread_icmp_ln40_fu_589_p2();
    void thread_icmp_ln43_fu_600_p2();
    void thread_icmp_ln46_1_fu_649_p2();
    void thread_icmp_ln46_fu_560_p2();
    void thread_icmp_ln73_1_fu_578_p2();
    void thread_icmp_ln73_2_fu_569_p2();
    void thread_icmp_ln73_3_fu_554_p2();
    void thread_icmp_ln73_4_fu_623_p2();
    void thread_icmp_ln73_5_fu_693_p2();
    void thread_icmp_ln73_fu_1168_p2();
    void thread_inStream_a_TDATA_blk_n();
    void thread_inStream_a_TREADY();
    void thread_inStream_a_V_data_0_ack_in();
    void thread_inStream_a_V_data_0_ack_out();
    void thread_inStream_a_V_data_0_data_out();
    void thread_inStream_a_V_data_0_load_A();
    void thread_inStream_a_V_data_0_load_B();
    void thread_inStream_a_V_data_0_sel();
    void thread_inStream_a_V_data_0_state_cmp_full();
    void thread_inStream_a_V_data_0_vld_in();
    void thread_inStream_a_V_data_0_vld_out();
    void thread_inStream_a_V_dest_V_0_ack_in();
    void thread_inStream_a_V_dest_V_0_ack_out();
    void thread_inStream_a_V_dest_V_0_data_out();
    void thread_inStream_a_V_dest_V_0_load_A();
    void thread_inStream_a_V_dest_V_0_load_B();
    void thread_inStream_a_V_dest_V_0_sel();
    void thread_inStream_a_V_dest_V_0_state_cmp_full();
    void thread_inStream_a_V_dest_V_0_vld_in();
    void thread_inStream_a_V_dest_V_0_vld_out();
    void thread_inStream_a_V_id_V_0_ack_in();
    void thread_inStream_a_V_id_V_0_ack_out();
    void thread_inStream_a_V_id_V_0_data_out();
    void thread_inStream_a_V_id_V_0_load_A();
    void thread_inStream_a_V_id_V_0_load_B();
    void thread_inStream_a_V_id_V_0_sel();
    void thread_inStream_a_V_id_V_0_state_cmp_full();
    void thread_inStream_a_V_id_V_0_vld_in();
    void thread_inStream_a_V_id_V_0_vld_out();
    void thread_inStream_a_V_keep_V_0_ack_in();
    void thread_inStream_a_V_keep_V_0_ack_out();
    void thread_inStream_a_V_keep_V_0_data_out();
    void thread_inStream_a_V_keep_V_0_load_A();
    void thread_inStream_a_V_keep_V_0_load_B();
    void thread_inStream_a_V_keep_V_0_sel();
    void thread_inStream_a_V_keep_V_0_state_cmp_full();
    void thread_inStream_a_V_keep_V_0_vld_in();
    void thread_inStream_a_V_keep_V_0_vld_out();
    void thread_inStream_a_V_strb_V_0_ack_in();
    void thread_inStream_a_V_strb_V_0_ack_out();
    void thread_inStream_a_V_strb_V_0_data_out();
    void thread_inStream_a_V_strb_V_0_load_A();
    void thread_inStream_a_V_strb_V_0_load_B();
    void thread_inStream_a_V_strb_V_0_sel();
    void thread_inStream_a_V_strb_V_0_state_cmp_full();
    void thread_inStream_a_V_strb_V_0_vld_in();
    void thread_inStream_a_V_strb_V_0_vld_out();
    void thread_inStream_a_V_user_V_0_ack_in();
    void thread_inStream_a_V_user_V_0_ack_out();
    void thread_inStream_a_V_user_V_0_data_out();
    void thread_inStream_a_V_user_V_0_load_A();
    void thread_inStream_a_V_user_V_0_load_B();
    void thread_inStream_a_V_user_V_0_sel();
    void thread_inStream_a_V_user_V_0_state_cmp_full();
    void thread_inStream_a_V_user_V_0_vld_in();
    void thread_inStream_a_V_user_V_0_vld_out();
    void thread_inStream_b_TDATA_blk_n();
    void thread_inStream_b_TREADY();
    void thread_inStream_b_V_data_0_ack_in();
    void thread_inStream_b_V_data_0_ack_out();
    void thread_inStream_b_V_data_0_data_out();
    void thread_inStream_b_V_data_0_load_A();
    void thread_inStream_b_V_data_0_load_B();
    void thread_inStream_b_V_data_0_sel();
    void thread_inStream_b_V_data_0_state_cmp_full();
    void thread_inStream_b_V_data_0_vld_in();
    void thread_inStream_b_V_data_0_vld_out();
    void thread_inStream_b_V_dest_V_0_ack_out();
    void thread_inStream_b_V_dest_V_0_vld_in();
    void thread_input_ch_idx_fu_1186_p2();
    void thread_kernel_bias_fp_0_V_address0();
    void thread_kernel_bias_fp_0_V_address1();
    void thread_kernel_bias_fp_0_V_ce0();
    void thread_kernel_bias_fp_0_V_ce1();
    void thread_kernel_bias_fp_0_V_d0();
    void thread_kernel_bias_fp_0_V_d1();
    void thread_kernel_bias_fp_0_V_we0();
    void thread_kernel_bias_fp_0_V_we1();
    void thread_kernel_bias_fp_1_V_address0();
    void thread_kernel_bias_fp_1_V_address1();
    void thread_kernel_bias_fp_1_V_ce0();
    void thread_kernel_bias_fp_1_V_ce1();
    void thread_kernel_bias_fp_1_V_d0();
    void thread_kernel_bias_fp_1_V_d1();
    void thread_kernel_bias_fp_1_V_we0();
    void thread_kernel_bias_fp_1_V_we1();
    void thread_lhs_V_1_fu_872_p1();
    void thread_lhs_V_2_fu_962_p1();
    void thread_lhs_V_3_fu_1052_p1();
    void thread_lhs_V_fu_782_p1();
    void thread_mul_ln1354_1_fu_1219_p0();
    void thread_mul_ln1354_1_fu_1219_p00();
    void thread_mul_ln1354_1_fu_1219_p1();
    void thread_mul_ln1354_1_fu_1219_p10();
    void thread_mul_ln1354_fu_524_p0();
    void thread_mul_ln1354_fu_524_p00();
    void thread_mul_ln1354_fu_524_p1();
    void thread_mul_ln1354_fu_524_p10();
    void thread_mul_ln1354_fu_524_p2();
    void thread_or_ln1598_fu_675_p2();
    void thread_or_ln203_fu_506_p2();
    void thread_or_ln340_1_fu_932_p2();
    void thread_or_ln340_2_fu_1022_p2();
    void thread_or_ln340_3_fu_1112_p2();
    void thread_or_ln340_fu_842_p2();
    void thread_or_ln65_fu_1156_p2();
    void thread_or_ln73_1_fu_1174_p2();
    void thread_or_ln73_2_fu_636_p2();
    void thread_or_ln73_3_fu_698_p2();
    void thread_or_ln73_fu_583_p2();
    void thread_outStream_TDATA();
    void thread_outStream_TDATA_blk_n();
    void thread_outStream_TDEST();
    void thread_outStream_TID();
    void thread_outStream_TKEEP();
    void thread_outStream_TLAST();
    void thread_outStream_TSTRB();
    void thread_outStream_TUSER();
    void thread_outStream_TVALID();
    void thread_outStream_V_data_1_ack_in();
    void thread_outStream_V_data_1_ack_out();
    void thread_outStream_V_data_1_data_out();
    void thread_outStream_V_data_1_load_A();
    void thread_outStream_V_data_1_load_B();
    void thread_outStream_V_data_1_sel();
    void thread_outStream_V_data_1_state_cmp_full();
    void thread_outStream_V_data_1_vld_in();
    void thread_outStream_V_data_1_vld_out();
    void thread_outStream_V_dest_V_1_ack_in();
    void thread_outStream_V_dest_V_1_ack_out();
    void thread_outStream_V_dest_V_1_data_out();
    void thread_outStream_V_dest_V_1_load_A();
    void thread_outStream_V_dest_V_1_load_B();
    void thread_outStream_V_dest_V_1_sel();
    void thread_outStream_V_dest_V_1_state_cmp_full();
    void thread_outStream_V_dest_V_1_vld_in();
    void thread_outStream_V_dest_V_1_vld_out();
    void thread_outStream_V_id_V_1_ack_in();
    void thread_outStream_V_id_V_1_ack_out();
    void thread_outStream_V_id_V_1_data_out();
    void thread_outStream_V_id_V_1_load_A();
    void thread_outStream_V_id_V_1_load_B();
    void thread_outStream_V_id_V_1_sel();
    void thread_outStream_V_id_V_1_state_cmp_full();
    void thread_outStream_V_id_V_1_vld_in();
    void thread_outStream_V_id_V_1_vld_out();
    void thread_outStream_V_keep_V_1_ack_in();
    void thread_outStream_V_keep_V_1_ack_out();
    void thread_outStream_V_keep_V_1_data_out();
    void thread_outStream_V_keep_V_1_load_A();
    void thread_outStream_V_keep_V_1_load_B();
    void thread_outStream_V_keep_V_1_sel();
    void thread_outStream_V_keep_V_1_state_cmp_full();
    void thread_outStream_V_keep_V_1_vld_in();
    void thread_outStream_V_keep_V_1_vld_out();
    void thread_outStream_V_last_V_1_ack_in();
    void thread_outStream_V_last_V_1_ack_out();
    void thread_outStream_V_last_V_1_data_out();
    void thread_outStream_V_last_V_1_load_A();
    void thread_outStream_V_last_V_1_load_B();
    void thread_outStream_V_last_V_1_sel();
    void thread_outStream_V_last_V_1_state_cmp_full();
    void thread_outStream_V_last_V_1_vld_in();
    void thread_outStream_V_last_V_1_vld_out();
    void thread_outStream_V_strb_V_1_ack_in();
    void thread_outStream_V_strb_V_1_ack_out();
    void thread_outStream_V_strb_V_1_data_out();
    void thread_outStream_V_strb_V_1_load_A();
    void thread_outStream_V_strb_V_1_load_B();
    void thread_outStream_V_strb_V_1_sel();
    void thread_outStream_V_strb_V_1_state_cmp_full();
    void thread_outStream_V_strb_V_1_vld_in();
    void thread_outStream_V_strb_V_1_vld_out();
    void thread_outStream_V_user_V_1_ack_in();
    void thread_outStream_V_user_V_1_ack_out();
    void thread_outStream_V_user_V_1_data_out();
    void thread_outStream_V_user_V_1_load_A();
    void thread_outStream_V_user_V_1_load_B();
    void thread_outStream_V_user_V_1_sel();
    void thread_outStream_V_user_V_1_state_cmp_full();
    void thread_outStream_V_user_V_1_vld_in();
    void thread_outStream_V_user_V_1_vld_out();
    void thread_output_acc_0_V_fu_864_p3();
    void thread_output_acc_1_V_fu_954_p3();
    void thread_output_acc_2_V_fu_1044_p3();
    void thread_output_acc_3_V_fu_1134_p3();
    void thread_p_Result_1_fu_810_p3();
    void thread_p_Result_2_fu_886_p3();
    void thread_p_Result_3_fu_900_p3();
    void thread_p_Result_4_fu_976_p3();
    void thread_p_Result_5_fu_990_p3();
    void thread_p_Result_6_fu_1066_p3();
    void thread_p_Result_7_fu_1080_p3();
    void thread_p_Result_s_fu_796_p3();
    void thread_p_Val2_10_fu_894_p1();
    void thread_p_Val2_10_fu_894_p2();
    void thread_p_Val2_12_fu_984_p1();
    void thread_p_Val2_12_fu_984_p2();
    void thread_p_Val2_13_fu_768_p4();
    void thread_p_Val2_15_fu_1074_p1();
    void thread_p_Val2_15_fu_1074_p2();
    void thread_p_Val2_1_fu_778_p1();
    void thread_p_Val2_4_fu_748_p4();
    void thread_p_Val2_6_fu_804_p2();
    void thread_p_Val2_8_fu_758_p4();
    void thread_p_Val2_s_fu_744_p1();
    void thread_ret_V_1_fu_880_p2();
    void thread_ret_V_2_fu_970_p2();
    void thread_ret_V_3_fu_1060_p2();
    void thread_ret_V_fu_790_p2();
    void thread_rhs_V_1_fu_876_p0();
    void thread_rhs_V_1_fu_876_p1();
    void thread_rhs_V_2_fu_966_p0();
    void thread_rhs_V_2_fu_966_p1();
    void thread_rhs_V_3_fu_1056_p0();
    void thread_rhs_V_3_fu_1056_p1();
    void thread_rhs_V_fu_786_p1();
    void thread_select_ln1598_1_fu_628_p3();
    void thread_select_ln1598_2_fu_641_p3();
    void thread_select_ln1598_3_fu_654_p3();
    void thread_select_ln1598_4_fu_681_p3();
    void thread_select_ln1598_5_fu_704_p3();
    void thread_select_ln1598_fu_605_p3();
    void thread_select_ln340_1_fu_938_p3();
    void thread_select_ln340_2_fu_1028_p3();
    void thread_select_ln340_3_fu_1118_p3();
    void thread_select_ln340_fu_848_p3();
    void thread_select_ln388_1_fu_946_p3();
    void thread_select_ln388_2_fu_1036_p3();
    void thread_select_ln388_3_fu_1126_p3();
    void thread_select_ln388_fu_856_p3();
    void thread_select_ln40_fu_661_p3();
    void thread_select_ln43_1_fu_1198_p3();
    void thread_select_ln43_fu_712_p3();
    void thread_shl_ln1_fu_1142_p3();
    void thread_tmp_1_fu_492_p3();
    void thread_tmp_data_3_fu_1206_p5();
    void thread_tmp_last_V_fu_1180_p2();
    void thread_underflow_1_fu_914_p2();
    void thread_underflow_2_fu_1004_p2();
    void thread_underflow_3_fu_1094_p2();
    void thread_underflow_fu_824_p2();
    void thread_xor_ln340_1_fu_926_p2();
    void thread_xor_ln340_2_fu_1016_p2();
    void thread_xor_ln340_3_fu_1106_p2();
    void thread_xor_ln340_4_fu_830_p2();
    void thread_xor_ln340_5_fu_920_p2();
    void thread_xor_ln340_6_fu_1010_p2();
    void thread_xor_ln340_7_fu_1100_p2();
    void thread_xor_ln340_fu_836_p2();
    void thread_xor_ln786_1_fu_908_p2();
    void thread_xor_ln786_2_fu_998_p2();
    void thread_xor_ln786_3_fu_1088_p2();
    void thread_xor_ln786_fu_818_p2();
    void thread_zext_ln1354_1_fu_539_p1();
    void thread_zext_ln1354_fu_530_p1();
    void thread_zext_ln203_1_fu_512_p1();
    void thread_zext_ln203_fu_500_p1();
    void thread_zext_ln43_1_fu_619_p1();
    void thread_zext_ln43_fu_565_p1();
    void thread_zext_ln46_1_fu_689_p1();
    void thread_zext_ln46_fu_574_p1();
    void thread_zext_ln63_fu_1150_p1();
    void thread_zext_ln65_fu_1162_p1();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
