// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="yolo_max_pool_top,hls_ip_2019_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.196750,HLS_SYN_LAT=1384471,HLS_SYN_TPT=none,HLS_SYN_MEM=16,HLS_SYN_DSP=0,HLS_SYN_FF=3130,HLS_SYN_LUT=5772,HLS_VERSION=2019_1}" *)

module yolo_max_pool_top (
        ap_clk,
        ap_rst_n,
        inStream_TDATA,
        inStream_TVALID,
        inStream_TREADY,
        inStream_TKEEP,
        inStream_TSTRB,
        inStream_TUSER,
        inStream_TLAST,
        inStream_TID,
        inStream_TDEST,
        outStream_TDATA,
        outStream_TVALID,
        outStream_TREADY,
        outStream_TKEEP,
        outStream_TSTRB,
        outStream_TUSER,
        outStream_TLAST,
        outStream_TID,
        outStream_TDEST,
        s_axi_AXILiteS_AWVALID,
        s_axi_AXILiteS_AWREADY,
        s_axi_AXILiteS_AWADDR,
        s_axi_AXILiteS_WVALID,
        s_axi_AXILiteS_WREADY,
        s_axi_AXILiteS_WDATA,
        s_axi_AXILiteS_WSTRB,
        s_axi_AXILiteS_ARVALID,
        s_axi_AXILiteS_ARREADY,
        s_axi_AXILiteS_ARADDR,
        s_axi_AXILiteS_RVALID,
        s_axi_AXILiteS_RREADY,
        s_axi_AXILiteS_RDATA,
        s_axi_AXILiteS_RRESP,
        s_axi_AXILiteS_BVALID,
        s_axi_AXILiteS_BREADY,
        s_axi_AXILiteS_BRESP,
        interrupt
);

parameter    ap_ST_fsm_state1 = 8'd1;
parameter    ap_ST_fsm_state2 = 8'd2;
parameter    ap_ST_fsm_state3 = 8'd4;
parameter    ap_ST_fsm_state4 = 8'd8;
parameter    ap_ST_fsm_state5 = 8'd16;
parameter    ap_ST_fsm_pp0_stage0 = 8'd32;
parameter    ap_ST_fsm_pp0_stage1 = 8'd64;
parameter    ap_ST_fsm_state14 = 8'd128;
parameter    C_S_AXI_AXILITES_DATA_WIDTH = 32;
parameter    C_S_AXI_AXILITES_ADDR_WIDTH = 4;
parameter    C_S_AXI_DATA_WIDTH = 32;

parameter C_S_AXI_AXILITES_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
input  [63:0] inStream_TDATA;
input   inStream_TVALID;
output   inStream_TREADY;
input  [7:0] inStream_TKEEP;
input  [7:0] inStream_TSTRB;
input  [1:0] inStream_TUSER;
input  [0:0] inStream_TLAST;
input  [4:0] inStream_TID;
input  [5:0] inStream_TDEST;
output  [63:0] outStream_TDATA;
output   outStream_TVALID;
input   outStream_TREADY;
output  [7:0] outStream_TKEEP;
output  [7:0] outStream_TSTRB;
output  [1:0] outStream_TUSER;
output  [0:0] outStream_TLAST;
output  [4:0] outStream_TID;
output  [5:0] outStream_TDEST;
input   s_axi_AXILiteS_AWVALID;
output   s_axi_AXILiteS_AWREADY;
input  [C_S_AXI_AXILITES_ADDR_WIDTH - 1:0] s_axi_AXILiteS_AWADDR;
input   s_axi_AXILiteS_WVALID;
output   s_axi_AXILiteS_WREADY;
input  [C_S_AXI_AXILITES_DATA_WIDTH - 1:0] s_axi_AXILiteS_WDATA;
input  [C_S_AXI_AXILITES_WSTRB_WIDTH - 1:0] s_axi_AXILiteS_WSTRB;
input   s_axi_AXILiteS_ARVALID;
output   s_axi_AXILiteS_ARREADY;
input  [C_S_AXI_AXILITES_ADDR_WIDTH - 1:0] s_axi_AXILiteS_ARADDR;
output   s_axi_AXILiteS_RVALID;
input   s_axi_AXILiteS_RREADY;
output  [C_S_AXI_AXILITES_DATA_WIDTH - 1:0] s_axi_AXILiteS_RDATA;
output  [1:0] s_axi_AXILiteS_RRESP;
output   s_axi_AXILiteS_BVALID;
input   s_axi_AXILiteS_BREADY;
output  [1:0] s_axi_AXILiteS_BRESP;
output   interrupt;

 reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [7:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_ready;
reg   [63:0] inStream_V_data_0_data_out;
wire    inStream_V_data_0_vld_in;
wire    inStream_V_data_0_vld_out;
wire    inStream_V_data_0_ack_in;
reg    inStream_V_data_0_ack_out;
reg   [63:0] inStream_V_data_0_payload_A;
reg   [63:0] inStream_V_data_0_payload_B;
reg    inStream_V_data_0_sel_rd;
reg    inStream_V_data_0_sel_wr;
wire    inStream_V_data_0_sel;
wire    inStream_V_data_0_load_A;
wire    inStream_V_data_0_load_B;
reg   [1:0] inStream_V_data_0_state;
wire    inStream_V_data_0_state_cmp_full;
reg   [7:0] inStream_V_keep_V_0_data_out;
wire    inStream_V_keep_V_0_vld_in;
wire    inStream_V_keep_V_0_vld_out;
wire    inStream_V_keep_V_0_ack_in;
reg    inStream_V_keep_V_0_ack_out;
reg   [7:0] inStream_V_keep_V_0_payload_A;
reg   [7:0] inStream_V_keep_V_0_payload_B;
reg    inStream_V_keep_V_0_sel_rd;
reg    inStream_V_keep_V_0_sel_wr;
wire    inStream_V_keep_V_0_sel;
wire    inStream_V_keep_V_0_load_A;
wire    inStream_V_keep_V_0_load_B;
reg   [1:0] inStream_V_keep_V_0_state;
wire    inStream_V_keep_V_0_state_cmp_full;
reg   [7:0] inStream_V_strb_V_0_data_out;
wire    inStream_V_strb_V_0_vld_in;
wire    inStream_V_strb_V_0_vld_out;
wire    inStream_V_strb_V_0_ack_in;
reg    inStream_V_strb_V_0_ack_out;
reg   [7:0] inStream_V_strb_V_0_payload_A;
reg   [7:0] inStream_V_strb_V_0_payload_B;
reg    inStream_V_strb_V_0_sel_rd;
reg    inStream_V_strb_V_0_sel_wr;
wire    inStream_V_strb_V_0_sel;
wire    inStream_V_strb_V_0_load_A;
wire    inStream_V_strb_V_0_load_B;
reg   [1:0] inStream_V_strb_V_0_state;
wire    inStream_V_strb_V_0_state_cmp_full;
reg   [1:0] inStream_V_user_V_0_data_out;
wire    inStream_V_user_V_0_vld_in;
wire    inStream_V_user_V_0_vld_out;
wire    inStream_V_user_V_0_ack_in;
reg    inStream_V_user_V_0_ack_out;
reg   [1:0] inStream_V_user_V_0_payload_A;
reg   [1:0] inStream_V_user_V_0_payload_B;
reg    inStream_V_user_V_0_sel_rd;
reg    inStream_V_user_V_0_sel_wr;
wire    inStream_V_user_V_0_sel;
wire    inStream_V_user_V_0_load_A;
wire    inStream_V_user_V_0_load_B;
reg   [1:0] inStream_V_user_V_0_state;
wire    inStream_V_user_V_0_state_cmp_full;
reg   [4:0] inStream_V_id_V_0_data_out;
wire    inStream_V_id_V_0_vld_in;
wire    inStream_V_id_V_0_vld_out;
wire    inStream_V_id_V_0_ack_in;
reg    inStream_V_id_V_0_ack_out;
reg   [4:0] inStream_V_id_V_0_payload_A;
reg   [4:0] inStream_V_id_V_0_payload_B;
reg    inStream_V_id_V_0_sel_rd;
reg    inStream_V_id_V_0_sel_wr;
wire    inStream_V_id_V_0_sel;
wire    inStream_V_id_V_0_load_A;
wire    inStream_V_id_V_0_load_B;
reg   [1:0] inStream_V_id_V_0_state;
wire    inStream_V_id_V_0_state_cmp_full;
reg   [5:0] inStream_V_dest_V_0_data_out;
wire    inStream_V_dest_V_0_vld_in;
wire    inStream_V_dest_V_0_vld_out;
wire    inStream_V_dest_V_0_ack_in;
reg    inStream_V_dest_V_0_ack_out;
reg   [5:0] inStream_V_dest_V_0_payload_A;
reg   [5:0] inStream_V_dest_V_0_payload_B;
reg    inStream_V_dest_V_0_sel_rd;
reg    inStream_V_dest_V_0_sel_wr;
wire    inStream_V_dest_V_0_sel;
wire    inStream_V_dest_V_0_load_A;
wire    inStream_V_dest_V_0_load_B;
reg   [1:0] inStream_V_dest_V_0_state;
wire    inStream_V_dest_V_0_state_cmp_full;
reg   [63:0] outStream_V_data_1_data_out;
wire    outStream_V_data_1_vld_in;
wire    outStream_V_data_1_vld_out;
wire    outStream_V_data_1_ack_in;
wire    outStream_V_data_1_ack_out;
reg   [63:0] outStream_V_data_1_payload_A;
reg   [63:0] outStream_V_data_1_payload_B;
reg    outStream_V_data_1_sel_rd;
reg    outStream_V_data_1_sel_wr;
wire    outStream_V_data_1_sel;
wire    outStream_V_data_1_load_A;
wire    outStream_V_data_1_load_B;
reg   [1:0] outStream_V_data_1_state;
wire    outStream_V_data_1_state_cmp_full;
reg   [7:0] outStream_V_keep_V_1_data_out;
wire    outStream_V_keep_V_1_vld_in;
wire    outStream_V_keep_V_1_vld_out;
wire    outStream_V_keep_V_1_ack_in;
wire    outStream_V_keep_V_1_ack_out;
reg   [7:0] outStream_V_keep_V_1_payload_A;
reg   [7:0] outStream_V_keep_V_1_payload_B;
reg    outStream_V_keep_V_1_sel_rd;
reg    outStream_V_keep_V_1_sel_wr;
wire    outStream_V_keep_V_1_sel;
wire    outStream_V_keep_V_1_load_A;
wire    outStream_V_keep_V_1_load_B;
reg   [1:0] outStream_V_keep_V_1_state;
wire    outStream_V_keep_V_1_state_cmp_full;
reg   [7:0] outStream_V_strb_V_1_data_out;
wire    outStream_V_strb_V_1_vld_in;
wire    outStream_V_strb_V_1_vld_out;
wire    outStream_V_strb_V_1_ack_in;
wire    outStream_V_strb_V_1_ack_out;
reg   [7:0] outStream_V_strb_V_1_payload_A;
reg   [7:0] outStream_V_strb_V_1_payload_B;
reg    outStream_V_strb_V_1_sel_rd;
reg    outStream_V_strb_V_1_sel_wr;
wire    outStream_V_strb_V_1_sel;
wire    outStream_V_strb_V_1_load_A;
wire    outStream_V_strb_V_1_load_B;
reg   [1:0] outStream_V_strb_V_1_state;
wire    outStream_V_strb_V_1_state_cmp_full;
reg   [1:0] outStream_V_user_V_1_data_out;
wire    outStream_V_user_V_1_vld_in;
wire    outStream_V_user_V_1_vld_out;
wire    outStream_V_user_V_1_ack_in;
wire    outStream_V_user_V_1_ack_out;
reg   [1:0] outStream_V_user_V_1_payload_A;
reg   [1:0] outStream_V_user_V_1_payload_B;
reg    outStream_V_user_V_1_sel_rd;
reg    outStream_V_user_V_1_sel_wr;
wire    outStream_V_user_V_1_sel;
wire    outStream_V_user_V_1_load_A;
wire    outStream_V_user_V_1_load_B;
reg   [1:0] outStream_V_user_V_1_state;
wire    outStream_V_user_V_1_state_cmp_full;
reg   [0:0] outStream_V_last_V_1_data_out;
wire    outStream_V_last_V_1_vld_in;
wire    outStream_V_last_V_1_vld_out;
wire    outStream_V_last_V_1_ack_in;
wire    outStream_V_last_V_1_ack_out;
reg   [0:0] outStream_V_last_V_1_payload_A;
reg   [0:0] outStream_V_last_V_1_payload_B;
reg    outStream_V_last_V_1_sel_rd;
reg    outStream_V_last_V_1_sel_wr;
wire    outStream_V_last_V_1_sel;
wire    outStream_V_last_V_1_load_A;
wire    outStream_V_last_V_1_load_B;
reg   [1:0] outStream_V_last_V_1_state;
wire    outStream_V_last_V_1_state_cmp_full;
reg   [4:0] outStream_V_id_V_1_data_out;
wire    outStream_V_id_V_1_vld_in;
wire    outStream_V_id_V_1_vld_out;
wire    outStream_V_id_V_1_ack_in;
wire    outStream_V_id_V_1_ack_out;
reg   [4:0] outStream_V_id_V_1_payload_A;
reg   [4:0] outStream_V_id_V_1_payload_B;
reg    outStream_V_id_V_1_sel_rd;
reg    outStream_V_id_V_1_sel_wr;
wire    outStream_V_id_V_1_sel;
wire    outStream_V_id_V_1_load_A;
wire    outStream_V_id_V_1_load_B;
reg   [1:0] outStream_V_id_V_1_state;
wire    outStream_V_id_V_1_state_cmp_full;
reg   [5:0] outStream_V_dest_V_1_data_out;
wire    outStream_V_dest_V_1_vld_in;
wire    outStream_V_dest_V_1_vld_out;
wire    outStream_V_dest_V_1_ack_in;
wire    outStream_V_dest_V_1_ack_out;
reg   [5:0] outStream_V_dest_V_1_payload_A;
reg   [5:0] outStream_V_dest_V_1_payload_B;
reg    outStream_V_dest_V_1_sel_rd;
reg    outStream_V_dest_V_1_sel_wr;
wire    outStream_V_dest_V_1_sel;
wire    outStream_V_dest_V_1_load_A;
wire    outStream_V_dest_V_1_load_B;
reg   [1:0] outStream_V_dest_V_1_state;
wire    outStream_V_dest_V_1_state_cmp_full;
reg    inStream_TDATA_blk_n;
wire    ap_CS_fsm_pp0_stage1;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_pp0_stage1;
reg   [0:0] icmp_ln37_reg_4699;
wire    call_ln104_write_output_fu_942_outStream_TDATA_blk_n;
reg    outStream_TDATA_blk_n;
reg    ap_enable_reg_pp0_iter3;
reg   [0:0] select_ln43_1_reg_4843;
reg   [0:0] select_ln43_1_reg_4843_pp0_iter2_reg;
reg   [19:0] indvar_flatten913_reg_838;
reg   [7:0] out_row_0_reg_849;
reg   [12:0] indvar_flatten517_reg_861;
reg   [1:0] row_stride_0_reg_873;
reg   [11:0] indvar_flatten213_reg_884;
reg   [7:0] out_col_0_reg_896;
reg   [4:0] indvar_flatten_reg_907;
reg   [1:0] col_stride_0_reg_919;
reg   [2:0] input_ch_idx_0_reg_930;
wire   [1:0] add_ln10_fu_970_p2;
wire    ap_CS_fsm_state2;
wire   [10:0] add_ln627_fu_976_p2;
wire   [1:0] add_ln11_fu_988_p2;
wire    ap_CS_fsm_state3;
wire   [10:0] add_ln627_1_fu_994_p2;
wire   [1:0] add_ln12_fu_1006_p2;
wire    ap_CS_fsm_state4;
wire   [10:0] add_ln627_2_fu_1012_p2;
wire   [1:0] add_ln13_fu_1024_p2;
wire    ap_CS_fsm_state5;
wire   [10:0] add_ln627_3_fu_1030_p2;
wire   [0:0] icmp_ln13_fu_1036_p2;
wire   [0:0] icmp_ln93_fu_1050_p2;
reg   [0:0] icmp_ln93_reg_4654;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state6_pp0_stage0_iter0;
wire    ap_block_state8_pp0_stage0_iter1;
wire    ap_block_state10_pp0_stage0_iter2;
wire    ap_block_state12_pp0_stage0_iter3;
wire    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln53_fu_1070_p2;
reg   [0:0] icmp_ln53_reg_4659;
wire   [0:0] icmp_ln79_fu_1076_p2;
reg   [0:0] icmp_ln79_reg_4664;
wire   [8:0] shl_ln1_fu_1082_p3;
reg   [8:0] shl_ln1_reg_4669;
wire   [0:0] icmp_ln93_1_fu_1090_p2;
reg   [0:0] icmp_ln93_1_reg_4674;
wire   [8:0] col_idx_fu_1100_p2;
reg   [8:0] col_idx_reg_4679;
wire  signed [9:0] conv_count_1_fu_1128_p3;
reg  signed [9:0] conv_count_1_reg_4684;
wire   [0:0] and_ln79_1_fu_1148_p2;
reg   [0:0] and_ln79_1_reg_4689;
wire   [8:0] add_ln43_fu_1158_p2;
reg   [8:0] add_ln43_reg_4694;
wire   [0:0] icmp_ln37_fu_1164_p2;
reg   [0:0] icmp_ln37_reg_4699_pp0_iter1_reg;
wire   [19:0] add_ln37_fu_1170_p2;
reg   [19:0] add_ln37_reg_4703;
wire   [7:0] out_row_fu_1176_p2;
reg   [7:0] out_row_reg_4708;
wire   [0:0] icmp_ln39_fu_1182_p2;
reg   [0:0] icmp_ln39_reg_4715;
wire   [1:0] select_ln37_fu_1188_p3;
reg   [1:0] select_ln37_reg_4723;
wire   [0:0] xor_ln37_fu_1212_p2;
reg   [0:0] xor_ln37_reg_4729;
wire   [0:0] icmp_ln45_fu_1218_p2;
reg   [0:0] icmp_ln45_reg_4737;
wire   [0:0] and_ln37_5_fu_1242_p2;
reg   [0:0] and_ln37_5_reg_4742;
wire   [1:0] row_stride_fu_1248_p2;
reg   [1:0] row_stride_reg_4749;
wire   [0:0] or_ln39_fu_1254_p2;
reg   [0:0] or_ln39_reg_4754;
wire   [7:0] select_ln39_fu_1260_p3;
reg   [7:0] select_ln39_reg_4764;
wire   [0:0] icmp_ln53_3_fu_1282_p2;
reg   [0:0] icmp_ln53_3_reg_4769;
wire   [0:0] or_ln39_1_fu_1294_p2;
reg   [0:0] or_ln39_1_reg_4774;
wire   [0:0] and_ln39_3_fu_1300_p2;
reg   [0:0] and_ln39_3_reg_4781;
wire   [7:0] out_col_fu_1306_p2;
reg   [7:0] out_col_reg_4792;
wire   [0:0] or_ln41_1_fu_1318_p2;
reg   [0:0] or_ln41_1_reg_4800;
wire   [1:0] select_ln41_fu_1324_p3;
reg   [1:0] select_ln41_reg_4805;
wire   [0:0] xor_ln41_fu_1332_p2;
reg   [0:0] xor_ln41_reg_4811;
wire   [1:0] col_stride_fu_1338_p2;
reg   [1:0] col_stride_reg_4817;
wire   [7:0] select_ln37_4_fu_1382_p3;
reg   [7:0] select_ln37_4_reg_4823;
reg    ap_block_state7_pp0_stage1_iter0;
wire    ap_block_state9_pp0_stage1_iter1;
wire    ap_block_state11_pp0_stage1_iter2;
reg    ap_block_state13_pp0_stage1_iter3;
reg    ap_block_pp0_stage1_11001;
wire   [1:0] select_ln39_6_fu_1439_p3;
reg   [1:0] select_ln39_6_reg_4828;
wire   [7:0] select_ln41_5_fu_1533_p3;
reg   [7:0] select_ln41_5_reg_4833;
wire   [2:0] select_ln43_fu_1548_p3;
reg   [2:0] select_ln43_reg_4838;
reg   [2:0] select_ln43_reg_4838_pp0_iter1_reg;
wire   [0:0] select_ln43_1_fu_1612_p3;
reg   [0:0] select_ln43_1_reg_4843_pp0_iter1_reg;
wire   [8:0] select_ln43_2_fu_1620_p3;
reg   [8:0] select_ln43_2_reg_4847;
wire   [8:0] select_ln43_4_fu_1671_p3;
reg   [8:0] select_ln43_4_reg_4852;
wire   [1:0] select_ln43_5_fu_1679_p3;
reg   [1:0] select_ln43_5_reg_4857;
reg   [7:0] tmp_keep_V_reg_4862;
reg   [7:0] tmp_keep_V_reg_4862_pp0_iter1_reg;
reg   [7:0] tmp_keep_V_reg_4862_pp0_iter2_reg;
reg   [7:0] tmp_strb_V_reg_4867;
reg   [7:0] tmp_strb_V_reg_4867_pp0_iter1_reg;
reg   [7:0] tmp_strb_V_reg_4867_pp0_iter2_reg;
reg   [1:0] tmp_user_V_reg_4872;
reg   [1:0] tmp_user_V_reg_4872_pp0_iter1_reg;
reg   [1:0] tmp_user_V_reg_4872_pp0_iter2_reg;
reg   [4:0] tmp_id_V_reg_4877;
reg   [4:0] tmp_id_V_reg_4877_pp0_iter1_reg;
reg   [4:0] tmp_id_V_reg_4877_pp0_iter2_reg;
reg   [5:0] tmp_dest_V_reg_4882;
reg   [5:0] tmp_dest_V_reg_4882_pp0_iter1_reg;
reg   [5:0] tmp_dest_V_reg_4882_pp0_iter2_reg;
wire   [15:0] curr_input_data_sub_s_fu_1709_p1;
reg   [15:0] curr_input_data_sub_s_reg_4887;
reg   [15:0] curr_input_data_sub_1_reg_4892;
reg   [15:0] curr_input_data_sub_2_reg_4897;
reg   [15:0] curr_input_data_sub_3_reg_4902;
wire   [11:0] mul_ln203_fu_1747_p2;
reg   [11:0] mul_ln203_reg_4907;
wire   [11:0] add_ln132_fu_1753_p2;
reg   [11:0] add_ln132_reg_4913;
reg   [11:0] add_ln132_reg_4913_pp0_iter1_reg;
wire   [0:0] and_ln93_1_fu_1771_p2;
reg   [0:0] and_ln93_1_reg_4918;
reg   [0:0] and_ln93_1_reg_4918_pp0_iter1_reg;
reg   [0:0] and_ln93_1_reg_4918_pp0_iter2_reg;
wire   [2:0] input_ch_idx_fu_1777_p2;
reg   [2:0] input_ch_idx_reg_4923;
wire   [4:0] select_ln43_6_fu_1789_p3;
reg   [4:0] select_ln43_6_reg_4928;
wire   [11:0] select_ln41_7_fu_1802_p3;
reg   [11:0] select_ln41_7_reg_4933;
wire   [12:0] select_ln39_8_fu_1815_p3;
reg   [12:0] select_ln39_8_reg_4938;
wire  signed [63:0] sext_ln203_fu_1833_p1;
reg  signed [63:0] sext_ln203_reg_4943;
wire   [11:0] add_ln132_1_fu_1841_p2;
reg   [11:0] add_ln132_1_reg_4951;
reg   [10:0] line_buff_group_0_va_5_reg_4956;
reg   [10:0] line_buff_group_1_va_5_reg_4961;
reg   [10:0] line_buff_group_2_va_5_reg_4966;
reg   [10:0] line_buff_group_3_va_5_reg_4971;
reg   [10:0] line_buff_group_0_va_7_reg_4991;
reg   [10:0] line_buff_group_1_va_7_reg_5011;
reg   [10:0] line_buff_group_2_va_7_reg_5031;
reg   [10:0] line_buff_group_3_va_7_reg_5051;
wire   [15:0] line_buff_group_0_va_1_q1;
reg   [15:0] window_group_0_2_va_2_reg_5056;
reg    ap_enable_reg_pp0_iter2;
wire   [1:0] trunc_ln203_fu_1964_p1;
reg   [1:0] trunc_ln203_reg_5064;
wire   [0:0] icmp_ln203_fu_1967_p2;
reg   [0:0] icmp_ln203_reg_5079;
wire   [0:0] icmp_ln203_1_fu_1981_p2;
reg   [0:0] icmp_ln203_1_reg_5105;
wire   [0:0] icmp_ln203_2_fu_1995_p2;
reg   [0:0] icmp_ln203_2_reg_5142;
wire   [15:0] line_buff_group_1_va_1_q1;
reg   [15:0] window_group_1_2_va_2_reg_5190;
wire   [15:0] line_buff_group_2_va_1_q1;
reg   [15:0] window_group_2_2_va_2_reg_5198;
wire   [15:0] line_buff_group_3_va_1_q1;
reg   [15:0] window_group_3_2_va_2_reg_5206;
wire   [15:0] tmp_1_fu_2561_p6;
reg   [15:0] tmp_1_reg_5214;
wire   [15:0] tmp_2_fu_2575_p6;
reg   [15:0] tmp_2_reg_5220;
wire   [15:0] tmp_5_fu_2589_p6;
reg   [15:0] tmp_5_reg_5226;
wire   [15:0] tmp_6_fu_2603_p6;
reg   [15:0] tmp_6_reg_5232;
wire   [15:0] tmp_9_fu_2617_p6;
reg   [15:0] tmp_9_reg_5238;
wire   [15:0] tmp_s_fu_2631_p6;
reg   [15:0] tmp_s_reg_5244;
wire   [15:0] tmp_12_fu_2645_p6;
reg   [15:0] tmp_12_reg_5250;
wire   [15:0] tmp_13_fu_2659_p6;
reg   [15:0] tmp_13_reg_5256;
wire   [15:0] select_ln148_1_fu_3446_p3;
reg   [15:0] select_ln148_1_reg_5262;
wire   [15:0] tmp_4_fu_3454_p6;
reg   [15:0] tmp_4_reg_5268;
wire   [15:0] select_ln148_4_fu_3496_p3;
reg   [15:0] select_ln148_4_reg_5274;
wire   [15:0] tmp_8_fu_3504_p6;
reg   [15:0] tmp_8_reg_5280;
wire   [15:0] select_ln148_7_fu_3546_p3;
reg   [15:0] select_ln148_7_reg_5286;
wire   [15:0] tmp_11_fu_3554_p6;
reg   [15:0] tmp_11_reg_5292;
wire   [15:0] select_ln148_10_fu_3596_p3;
reg   [15:0] select_ln148_10_reg_5298;
wire   [15:0] tmp_15_fu_3604_p6;
reg   [15:0] tmp_15_reg_5304;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state6;
reg    ap_enable_reg_pp0_iter1;
reg    ap_block_pp0_stage1_subdone;
reg   [10:0] line_buff_group_0_va_address0;
reg    line_buff_group_0_va_ce0;
reg    line_buff_group_0_va_we0;
wire   [15:0] line_buff_group_0_va_q0;
wire   [10:0] line_buff_group_0_va_address1;
reg    line_buff_group_0_va_ce1;
wire   [15:0] line_buff_group_0_va_q1;
reg   [10:0] line_buff_group_0_va_1_address0;
reg    line_buff_group_0_va_1_ce0;
reg    line_buff_group_0_va_1_we0;
wire   [15:0] line_buff_group_0_va_1_q0;
reg   [10:0] line_buff_group_0_va_1_address1;
reg    line_buff_group_0_va_1_ce1;
reg   [10:0] line_buff_group_1_va_address0;
reg    line_buff_group_1_va_ce0;
reg    line_buff_group_1_va_we0;
wire   [15:0] line_buff_group_1_va_q0;
wire   [10:0] line_buff_group_1_va_address1;
reg    line_buff_group_1_va_ce1;
wire   [15:0] line_buff_group_1_va_q1;
reg   [10:0] line_buff_group_1_va_1_address0;
reg    line_buff_group_1_va_1_ce0;
reg    line_buff_group_1_va_1_we0;
wire   [15:0] line_buff_group_1_va_1_q0;
reg   [10:0] line_buff_group_1_va_1_address1;
reg    line_buff_group_1_va_1_ce1;
reg   [10:0] line_buff_group_2_va_address0;
reg    line_buff_group_2_va_ce0;
reg    line_buff_group_2_va_we0;
wire   [15:0] line_buff_group_2_va_q0;
wire   [10:0] line_buff_group_2_va_address1;
reg    line_buff_group_2_va_ce1;
wire   [15:0] line_buff_group_2_va_q1;
reg   [10:0] line_buff_group_2_va_1_address0;
reg    line_buff_group_2_va_1_ce0;
reg    line_buff_group_2_va_1_we0;
wire   [15:0] line_buff_group_2_va_1_q0;
reg   [10:0] line_buff_group_2_va_1_address1;
reg    line_buff_group_2_va_1_ce1;
reg   [10:0] line_buff_group_3_va_address0;
reg    line_buff_group_3_va_ce0;
reg    line_buff_group_3_va_we0;
wire   [15:0] line_buff_group_3_va_q0;
wire   [10:0] line_buff_group_3_va_address1;
reg    line_buff_group_3_va_ce1;
wire   [15:0] line_buff_group_3_va_q1;
reg   [10:0] line_buff_group_3_va_1_address0;
reg    line_buff_group_3_va_1_ce0;
reg    line_buff_group_3_va_1_we0;
wire   [15:0] line_buff_group_3_va_1_q0;
reg   [10:0] line_buff_group_3_va_1_address1;
reg    line_buff_group_3_va_1_ce1;
wire    call_ln104_write_output_fu_942_ap_start;
wire    call_ln104_write_output_fu_942_ap_done;
wire    call_ln104_write_output_fu_942_ap_idle;
wire    call_ln104_write_output_fu_942_ap_ready;
wire   [15:0] call_ln104_write_output_fu_942_val_output_3_V;
wire   [63:0] call_ln104_write_output_fu_942_outStream_TDATA;
wire    call_ln104_write_output_fu_942_outStream_TVALID;
wire    call_ln104_write_output_fu_942_outStream_TREADY;
wire   [7:0] call_ln104_write_output_fu_942_outStream_TKEEP;
wire   [7:0] call_ln104_write_output_fu_942_outStream_TSTRB;
wire   [1:0] call_ln104_write_output_fu_942_outStream_TUSER;
wire   [0:0] call_ln104_write_output_fu_942_outStream_TLAST;
wire   [4:0] call_ln104_write_output_fu_942_outStream_TID;
wire   [5:0] call_ln104_write_output_fu_942_outStream_TDEST;
reg    call_ln104_write_output_fu_942_ap_ce;
reg    ap_block_state7_pp0_stage1_iter0_ignore_call313;
wire    ap_block_state9_pp0_stage1_iter1_ignore_call313;
wire    ap_block_state11_pp0_stage1_iter2_ignore_call313;
wire    ap_block_state13_pp0_stage1_iter3_ignore_call313;
reg    ap_block_pp0_stage1_11001_ignoreCallOp745;
reg   [1:0] phi_ln10_reg_750;
wire   [0:0] icmp_ln10_fu_982_p2;
reg   [10:0] phi_mul_reg_761;
reg   [1:0] phi_ln11_reg_772;
wire   [0:0] icmp_ln11_fu_1000_p2;
reg   [10:0] phi_mul928_reg_783;
reg   [1:0] phi_ln12_reg_794;
wire   [0:0] icmp_ln12_fu_1018_p2;
reg   [10:0] phi_mul930_reg_805;
reg   [1:0] phi_ln13_reg_816;
reg   [10:0] phi_mul932_reg_827;
reg   [19:0] ap_phi_mux_indvar_flatten913_phi_fu_842_p4;
wire    ap_block_pp0_stage0;
reg   [7:0] ap_phi_mux_out_row_0_phi_fu_853_p4;
reg   [12:0] ap_phi_mux_indvar_flatten517_phi_fu_865_p4;
reg   [1:0] ap_phi_mux_row_stride_0_phi_fu_877_p4;
reg   [11:0] ap_phi_mux_indvar_flatten213_phi_fu_888_p4;
reg   [7:0] ap_phi_mux_out_col_0_phi_fu_900_p4;
reg   [4:0] ap_phi_mux_indvar_flatten_phi_fu_911_p4;
reg   [1:0] ap_phi_mux_col_stride_0_phi_fu_923_p4;
reg   [2:0] ap_phi_mux_input_ch_idx_0_phi_fu_934_p4;
reg    call_ln104_write_output_fu_942_ap_start_reg;
wire   [15:0] tmp_16_fu_4043_p6;
wire   [15:0] tmp_17_fu_4057_p6;
wire   [15:0] tmp_18_fu_4071_p6;
wire  signed [63:0] sext_ln132_fu_1846_p1;
wire  signed [63:0] sext_ln132_1_fu_1857_p1;
reg   [15:0] window_group_0_3_va_fu_188;
wire   [15:0] window_group_0_3_va_40_fu_2049_p3;
reg   [15:0] window_group_0_3_va_1_fu_192;
wire   [15:0] window_group_0_3_va_49_fu_2121_p3;
reg   [15:0] window_group_0_3_va_2_fu_196;
wire   [15:0] window_group_0_3_va_58_fu_2982_p3;
reg   [15:0] window_group_0_3_va_3_fu_200;
wire   [15:0] window_group_0_3_va_67_fu_3044_p3;
reg   [15:0] window_group_0_3_va_4_fu_204;
wire   [15:0] window_group_0_3_va_39_fu_2041_p3;
reg   [15:0] window_group_0_3_va_5_fu_208;
wire   [15:0] window_group_0_3_va_48_fu_2113_p3;
reg   [15:0] window_group_0_3_va_6_fu_212;
wire   [15:0] window_group_0_3_va_57_fu_2975_p3;
reg   [15:0] window_group_0_3_va_7_fu_216;
wire   [15:0] window_group_0_3_va_66_fu_3037_p3;
reg   [15:0] window_group_0_3_va_8_fu_220;
wire   [15:0] window_group_0_3_va_37_fu_2025_p3;
reg   [15:0] window_group_0_3_va_9_fu_224;
wire   [15:0] window_group_0_3_va_46_fu_2097_p3;
reg   [15:0] window_group_0_3_va_10_fu_228;
wire   [15:0] window_group_0_3_va_55_fu_2962_p3;
reg   [15:0] window_group_0_3_va_11_fu_232;
wire   [15:0] window_group_0_3_va_64_fu_3023_p3;
reg   [15:0] window_group_0_3_va_12_fu_236;
wire   [15:0] window_group_0_3_va_34_fu_2001_p3;
reg   [15:0] window_group_0_3_va_13_fu_240;
wire   [15:0] window_group_0_3_va_43_fu_2073_p3;
reg   [15:0] window_group_0_3_va_14_fu_244;
wire   [15:0] window_group_0_3_va_52_fu_2942_p3;
reg   [15:0] window_group_0_3_va_15_fu_248;
wire   [15:0] window_group_0_3_va_61_fu_3002_p3;
reg   [15:0] window_group_1_3_va_fu_252;
wire   [15:0] window_group_1_3_va_40_fu_2193_p3;
reg   [15:0] window_group_1_3_va_1_fu_256;
wire   [15:0] window_group_1_3_va_49_fu_2265_p3;
reg   [15:0] window_group_1_3_va_2_fu_260;
wire   [15:0] window_group_1_3_va_58_fu_3104_p3;
reg   [15:0] window_group_1_3_va_3_fu_264;
wire   [15:0] window_group_1_3_va_67_fu_3166_p3;
reg   [15:0] window_group_1_3_va_4_fu_268;
wire   [15:0] window_group_1_3_va_39_fu_2185_p3;
reg   [15:0] window_group_1_3_va_5_fu_272;
wire   [15:0] window_group_1_3_va_48_fu_2257_p3;
reg   [15:0] window_group_1_3_va_6_fu_276;
wire   [15:0] window_group_1_3_va_57_fu_3097_p3;
reg   [15:0] window_group_1_3_va_7_fu_280;
wire   [15:0] window_group_1_3_va_66_fu_3159_p3;
reg   [15:0] window_group_1_3_va_8_fu_284;
wire   [15:0] window_group_1_3_va_37_fu_2169_p3;
reg   [15:0] window_group_1_3_va_9_fu_288;
wire   [15:0] window_group_1_3_va_46_fu_2241_p3;
reg   [15:0] window_group_1_3_va_10_fu_292;
wire   [15:0] window_group_1_3_va_55_fu_3084_p3;
reg   [15:0] window_group_1_3_va_11_fu_296;
wire   [15:0] window_group_1_3_va_64_fu_3145_p3;
reg   [15:0] window_group_1_3_va_12_fu_300;
wire   [15:0] window_group_1_3_va_34_fu_2145_p3;
reg   [15:0] window_group_1_3_va_13_fu_304;
wire   [15:0] window_group_1_3_va_43_fu_2217_p3;
reg   [15:0] window_group_1_3_va_14_fu_308;
wire   [15:0] window_group_1_3_va_52_fu_3064_p3;
reg   [15:0] window_group_1_3_va_15_fu_312;
wire   [15:0] window_group_1_3_va_61_fu_3124_p3;
reg   [15:0] window_group_2_3_va_fu_316;
wire   [15:0] window_group_2_3_va_40_fu_2337_p3;
reg   [15:0] window_group_2_3_va_1_fu_320;
wire   [15:0] window_group_2_3_va_49_fu_2409_p3;
reg   [15:0] window_group_2_3_va_2_fu_324;
wire   [15:0] window_group_2_3_va_58_fu_3226_p3;
reg   [15:0] window_group_2_3_va_3_fu_328;
wire   [15:0] window_group_2_3_va_67_fu_3288_p3;
reg   [15:0] window_group_2_3_va_4_fu_332;
wire   [15:0] window_group_2_3_va_39_fu_2329_p3;
reg   [15:0] window_group_2_3_va_5_fu_336;
wire   [15:0] window_group_2_3_va_48_fu_2401_p3;
reg   [15:0] window_group_2_3_va_6_fu_340;
wire   [15:0] window_group_2_3_va_57_fu_3219_p3;
reg   [15:0] window_group_2_3_va_7_fu_344;
wire   [15:0] window_group_2_3_va_66_fu_3281_p3;
reg   [15:0] window_group_2_3_va_8_fu_348;
wire   [15:0] window_group_2_3_va_37_fu_2313_p3;
reg   [15:0] window_group_2_3_va_9_fu_352;
wire   [15:0] window_group_2_3_va_46_fu_2385_p3;
reg   [15:0] window_group_2_3_va_10_fu_356;
wire   [15:0] window_group_2_3_va_55_fu_3206_p3;
reg   [15:0] window_group_2_3_va_11_fu_360;
wire   [15:0] window_group_2_3_va_64_fu_3267_p3;
reg   [15:0] window_group_2_3_va_12_fu_364;
wire   [15:0] window_group_2_3_va_34_fu_2289_p3;
reg   [15:0] window_group_2_3_va_13_fu_368;
wire   [15:0] window_group_2_3_va_43_fu_2361_p3;
reg   [15:0] window_group_2_3_va_14_fu_372;
wire   [15:0] window_group_2_3_va_52_fu_3186_p3;
reg   [15:0] window_group_2_3_va_15_fu_376;
wire   [15:0] window_group_2_3_va_61_fu_3246_p3;
reg   [15:0] window_group_3_3_va_fu_380;
wire   [15:0] window_group_3_3_va_40_fu_2481_p3;
reg   [15:0] window_group_3_3_va_1_fu_384;
wire   [15:0] window_group_3_3_va_49_fu_2553_p3;
reg   [15:0] window_group_3_3_va_2_fu_388;
wire   [15:0] window_group_3_3_va_58_fu_3348_p3;
reg   [15:0] window_group_3_3_va_3_fu_392;
wire   [15:0] window_group_3_3_va_67_fu_3410_p3;
reg   [15:0] window_group_3_3_va_4_fu_396;
wire   [15:0] window_group_3_3_va_39_fu_2473_p3;
reg   [15:0] window_group_3_3_va_5_fu_400;
wire   [15:0] window_group_3_3_va_48_fu_2545_p3;
reg   [15:0] window_group_3_3_va_6_fu_404;
wire   [15:0] window_group_3_3_va_57_fu_3341_p3;
reg   [15:0] window_group_3_3_va_7_fu_408;
wire   [15:0] window_group_3_3_va_66_fu_3403_p3;
reg   [15:0] window_group_3_3_va_8_fu_412;
wire   [15:0] window_group_3_3_va_37_fu_2457_p3;
reg   [15:0] window_group_3_3_va_9_fu_416;
wire   [15:0] window_group_3_3_va_46_fu_2529_p3;
reg   [15:0] window_group_3_3_va_10_fu_420;
wire   [15:0] window_group_3_3_va_55_fu_3328_p3;
reg   [15:0] window_group_3_3_va_11_fu_424;
wire   [15:0] window_group_3_3_va_64_fu_3389_p3;
reg   [15:0] window_group_3_3_va_12_fu_428;
wire   [15:0] window_group_3_3_va_34_fu_2433_p3;
reg   [15:0] window_group_3_3_va_13_fu_432;
wire   [15:0] window_group_3_3_va_43_fu_2505_p3;
reg   [15:0] window_group_3_3_va_14_fu_436;
wire   [15:0] window_group_3_3_va_52_fu_3308_p3;
reg   [15:0] window_group_3_3_va_15_fu_440;
wire   [15:0] window_group_3_3_va_61_fu_3368_p3;
reg   [15:0] val_output_0_3_V_1_fu_444;
wire   [15:0] val_output_0_3_V_21_fu_3879_p3;
reg   [15:0] val_output_0_3_V_6_fu_448;
wire   [15:0] val_output_0_3_V_20_fu_3872_p3;
reg   [15:0] val_output_0_3_V_9_fu_452;
wire   [15:0] val_output_0_3_V_18_fu_3858_p3;
reg   [15:0] val_output_0_3_V_4_fu_456;
wire   [15:0] val_output_0_3_V_15_fu_3837_p3;
reg   [15:0] val_output_1_3_V_1_fu_460;
wire   [15:0] val_output_1_3_V_21_fu_3952_p3;
reg   [15:0] val_output_1_3_V_6_fu_464;
wire   [15:0] val_output_1_3_V_20_fu_3945_p3;
reg   [15:0] val_output_1_3_V_9_fu_468;
wire   [15:0] val_output_1_3_V_18_fu_3931_p3;
reg   [15:0] val_output_1_3_V_4_fu_472;
wire   [15:0] val_output_1_3_V_15_fu_3910_p3;
reg   [15:0] val_output_2_3_V_1_fu_476;
wire   [15:0] val_output_2_3_V_21_fu_4025_p3;
reg   [15:0] val_output_2_3_V_6_fu_480;
wire   [15:0] val_output_2_3_V_20_fu_4018_p3;
reg   [15:0] val_output_2_3_V_9_fu_484;
wire   [15:0] val_output_2_3_V_18_fu_4004_p3;
reg   [15:0] val_output_2_3_V_4_fu_488;
wire   [15:0] val_output_2_3_V_15_fu_3983_p3;
wire   [2:0] zext_ln53_fu_1056_p1;
wire   [2:0] sub_ln53_fu_1060_p2;
wire   [8:0] shl_ln_fu_1042_p3;
wire  signed [8:0] sext_ln53_fu_1066_p1;
wire   [8:0] zext_ln43_fu_1096_p1;
wire   [0:0] icmp_ln53_1_fu_1110_p2;
wire   [9:0] zext_ln50_fu_1106_p1;
wire   [0:0] and_ln53_fu_1116_p2;
wire   [9:0] conv_count_fu_1122_p2;
wire   [0:0] icmp_ln79_1_fu_1136_p2;
wire   [0:0] and_ln79_fu_1142_p2;
wire   [8:0] trunc_ln132_fu_1154_p1;
wire   [8:0] shl_ln49_mid1_fu_1196_p3;
wire   [0:0] icmp_ln43_fu_1224_p2;
wire   [0:0] icmp_ln41_fu_1236_p2;
wire   [2:0] zext_ln53_1_fu_1268_p1;
wire   [2:0] sub_ln53_1_fu_1272_p2;
wire   [8:0] select_ln37_1_fu_1204_p3;
wire  signed [8:0] sext_ln53_1_fu_1278_p1;
wire   [0:0] xor_ln39_fu_1288_p2;
wire   [0:0] and_ln37_4_fu_1230_p2;
wire   [0:0] or_ln41_fu_1312_p2;
wire   [0:0] icmp_ln93_3_fu_1344_p2;
wire   [0:0] icmp_ln53_2_fu_1355_p2;
wire   [0:0] select_ln37_3_fu_1360_p3;
wire   [0:0] icmp_ln79_2_fu_1394_p2;
wire   [0:0] and_ln37_fu_1366_p2;
wire   [0:0] and_ln37_1_fu_1370_p2;
wire   [0:0] and_ln37_2_fu_1374_p2;
wire   [0:0] and_ln37_3_fu_1378_p2;
wire   [8:0] shl_ln50_mid1_fu_1444_p3;
wire   [8:0] select_ln39_3_fu_1406_p3;
wire   [0:0] icmp_ln93_4_fu_1458_p2;
wire   [0:0] and_ln39_fu_1412_p2;
wire   [0:0] select_ln39_1_fu_1388_p3;
wire   [0:0] icmp_ln53_4_fu_1474_p2;
wire   [9:0] zext_ln50_1_fu_1470_p1;
wire   [0:0] and_ln53_1_fu_1479_p2;
wire   [9:0] add_ln54_1_fu_1485_p2;
wire   [0:0] and_ln39_1_fu_1417_p2;
wire   [8:0] select_ln39_4_fu_1422_p3;
wire  signed [9:0] select_ln53_1_fu_1491_p3;
wire   [8:0] trunc_ln132_1_fu_1511_p1;
wire   [8:0] add_ln41_2_fu_1515_p2;
wire   [8:0] select_ln39_5_fu_1428_p3;
wire   [0:0] and_ln39_2_fu_1434_p2;
wire   [0:0] and_ln41_1_fu_1528_p2;
wire   [0:0] or_ln43_fu_1538_p2;
wire   [0:0] or_ln43_1_fu_1543_p2;
wire   [8:0] zext_ln43_1_fu_1556_p1;
wire   [8:0] select_ln41_1_fu_1451_p3;
wire   [8:0] add_ln50_1_fu_1559_p2;
wire   [0:0] icmp_ln53_5_fu_1569_p2;
wire   [9:0] zext_ln50_2_fu_1565_p1;
wire   [0:0] and_ln53_2_fu_1575_p2;
wire   [9:0] add_ln54_2_fu_1581_p2;
wire   [0:0] select_ln39_2_fu_1399_p3;
wire   [0:0] icmp_ln79_3_fu_1595_p2;
wire   [0:0] and_ln79_2_fu_1600_p2;
wire   [0:0] and_ln79_3_fu_1606_p2;
wire   [0:0] and_ln41_fu_1499_p2;
wire   [8:0] select_ln41_3_fu_1504_p3;
wire  signed [9:0] select_ln53_2_fu_1587_p3;
wire  signed [11:0] sext_ln43_2_fu_1636_p1;
wire  signed [11:0] sext_ln43_1_fu_1632_p1;
wire   [11:0] select_ln39_7_fu_1639_p3;
wire  signed [11:0] sext_ln43_fu_1628_p1;
wire   [11:0] select_ln41_6_fu_1646_p3;
wire   [8:0] trunc_ln132_2_fu_1661_p1;
wire   [8:0] add_ln43_3_fu_1665_p2;
wire   [8:0] select_ln41_4_fu_1521_p3;
wire   [2:0] mul_ln203_fu_1747_p1;
wire   [11:0] select_ln43_3_fu_1653_p3;
wire   [0:0] select_ln41_2_fu_1463_p3;
wire   [0:0] icmp_ln93_2_fu_1759_p2;
wire   [0:0] and_ln93_fu_1765_p2;
wire   [0:0] select_ln37_2_fu_1349_p3;
wire   [4:0] add_ln43_1_fu_1783_p2;
wire   [11:0] add_ln41_1_fu_1796_p2;
wire   [12:0] add_ln39_1_fu_1809_p2;
wire   [11:0] zext_ln43_2_fu_1822_p1;
wire   [11:0] add_ln203_fu_1828_p2;
wire   [11:0] zext_ln43_3_fu_1825_p1;
wire   [15:0] window_group_0_3_va_32_fu_1973_p3;
wire   [15:0] window_group_0_3_va_33_fu_1987_p3;
wire   [15:0] window_group_0_3_va_35_fu_2009_p3;
wire   [15:0] window_group_0_3_va_36_fu_2017_p3;
wire   [15:0] window_group_0_3_va_38_fu_2033_p3;
wire   [15:0] window_group_0_3_va_41_fu_2057_p3;
wire   [15:0] window_group_0_3_va_42_fu_2065_p3;
wire   [15:0] window_group_0_3_va_44_fu_2081_p3;
wire   [15:0] window_group_0_3_va_45_fu_2089_p3;
wire   [15:0] window_group_0_3_va_47_fu_2105_p3;
wire   [15:0] window_group_1_3_va_32_fu_2129_p3;
wire   [15:0] window_group_1_3_va_33_fu_2137_p3;
wire   [15:0] window_group_1_3_va_35_fu_2153_p3;
wire   [15:0] window_group_1_3_va_36_fu_2161_p3;
wire   [15:0] window_group_1_3_va_38_fu_2177_p3;
wire   [15:0] window_group_1_3_va_41_fu_2201_p3;
wire   [15:0] window_group_1_3_va_42_fu_2209_p3;
wire   [15:0] window_group_1_3_va_44_fu_2225_p3;
wire   [15:0] window_group_1_3_va_45_fu_2233_p3;
wire   [15:0] window_group_1_3_va_47_fu_2249_p3;
wire   [15:0] window_group_2_3_va_32_fu_2273_p3;
wire   [15:0] window_group_2_3_va_33_fu_2281_p3;
wire   [15:0] window_group_2_3_va_35_fu_2297_p3;
wire   [15:0] window_group_2_3_va_36_fu_2305_p3;
wire   [15:0] window_group_2_3_va_38_fu_2321_p3;
wire   [15:0] window_group_2_3_va_41_fu_2345_p3;
wire   [15:0] window_group_2_3_va_42_fu_2353_p3;
wire   [15:0] window_group_2_3_va_44_fu_2369_p3;
wire   [15:0] window_group_2_3_va_45_fu_2377_p3;
wire   [15:0] window_group_2_3_va_47_fu_2393_p3;
wire   [15:0] window_group_3_3_va_32_fu_2417_p3;
wire   [15:0] window_group_3_3_va_33_fu_2425_p3;
wire   [15:0] window_group_3_3_va_35_fu_2441_p3;
wire   [15:0] window_group_3_3_va_36_fu_2449_p3;
wire   [15:0] window_group_3_3_va_38_fu_2465_p3;
wire   [15:0] window_group_3_3_va_41_fu_2489_p3;
wire   [15:0] window_group_3_3_va_42_fu_2497_p3;
wire   [15:0] window_group_3_3_va_44_fu_2513_p3;
wire   [15:0] window_group_3_3_va_45_fu_2521_p3;
wire   [15:0] window_group_3_3_va_47_fu_2537_p3;
wire   [15:0] tmp_1_fu_2561_p1;
wire   [15:0] tmp_1_fu_2561_p2;
wire   [15:0] tmp_1_fu_2561_p3;
wire   [15:0] tmp_1_fu_2561_p4;
wire   [15:0] tmp_2_fu_2575_p1;
wire   [15:0] tmp_2_fu_2575_p2;
wire   [15:0] tmp_2_fu_2575_p3;
wire   [15:0] tmp_2_fu_2575_p4;
wire   [15:0] tmp_5_fu_2589_p1;
wire   [15:0] tmp_5_fu_2589_p2;
wire   [15:0] tmp_5_fu_2589_p3;
wire   [15:0] tmp_5_fu_2589_p4;
wire   [15:0] tmp_6_fu_2603_p1;
wire   [15:0] tmp_6_fu_2603_p2;
wire   [15:0] tmp_6_fu_2603_p3;
wire   [15:0] tmp_6_fu_2603_p4;
wire   [15:0] tmp_9_fu_2617_p1;
wire   [15:0] tmp_9_fu_2617_p2;
wire   [15:0] tmp_9_fu_2617_p3;
wire   [15:0] tmp_9_fu_2617_p4;
wire   [15:0] tmp_s_fu_2631_p1;
wire   [15:0] tmp_s_fu_2631_p2;
wire   [15:0] tmp_s_fu_2631_p3;
wire   [15:0] tmp_s_fu_2631_p4;
wire   [15:0] tmp_12_fu_2645_p1;
wire   [15:0] tmp_12_fu_2645_p2;
wire   [15:0] tmp_12_fu_2645_p3;
wire   [15:0] tmp_12_fu_2645_p4;
wire   [15:0] tmp_13_fu_2659_p1;
wire   [15:0] tmp_13_fu_2659_p2;
wire   [15:0] tmp_13_fu_2659_p3;
wire   [15:0] tmp_13_fu_2659_p4;
wire   [15:0] window_group_0_3_va_50_fu_2929_p3;
wire   [15:0] window_group_0_3_va_51_fu_2935_p3;
wire   [15:0] window_group_0_3_va_53_fu_2949_p3;
wire   [15:0] window_group_0_3_va_54_fu_2955_p3;
wire   [15:0] window_group_0_3_va_56_fu_2969_p3;
wire   [15:0] window_group_0_3_va_59_fu_2988_p3;
wire   [15:0] window_group_0_3_va_60_fu_2995_p3;
wire   [15:0] window_group_0_3_va_62_fu_3009_p3;
wire   [15:0] window_group_0_3_va_63_fu_3016_p3;
wire   [15:0] window_group_0_3_va_65_fu_3030_p3;
wire   [15:0] window_group_1_3_va_50_fu_3051_p3;
wire   [15:0] window_group_1_3_va_51_fu_3057_p3;
wire   [15:0] window_group_1_3_va_53_fu_3071_p3;
wire   [15:0] window_group_1_3_va_54_fu_3077_p3;
wire   [15:0] window_group_1_3_va_56_fu_3091_p3;
wire   [15:0] window_group_1_3_va_59_fu_3110_p3;
wire   [15:0] window_group_1_3_va_60_fu_3117_p3;
wire   [15:0] window_group_1_3_va_62_fu_3131_p3;
wire   [15:0] window_group_1_3_va_63_fu_3138_p3;
wire   [15:0] window_group_1_3_va_65_fu_3152_p3;
wire   [15:0] window_group_2_3_va_50_fu_3173_p3;
wire   [15:0] window_group_2_3_va_51_fu_3179_p3;
wire   [15:0] window_group_2_3_va_53_fu_3193_p3;
wire   [15:0] window_group_2_3_va_54_fu_3199_p3;
wire   [15:0] window_group_2_3_va_56_fu_3213_p3;
wire   [15:0] window_group_2_3_va_59_fu_3232_p3;
wire   [15:0] window_group_2_3_va_60_fu_3239_p3;
wire   [15:0] window_group_2_3_va_62_fu_3253_p3;
wire   [15:0] window_group_2_3_va_63_fu_3260_p3;
wire   [15:0] window_group_2_3_va_65_fu_3274_p3;
wire   [15:0] window_group_3_3_va_50_fu_3295_p3;
wire   [15:0] window_group_3_3_va_51_fu_3301_p3;
wire   [15:0] window_group_3_3_va_53_fu_3315_p3;
wire   [15:0] window_group_3_3_va_54_fu_3321_p3;
wire   [15:0] window_group_3_3_va_56_fu_3335_p3;
wire   [15:0] window_group_3_3_va_59_fu_3354_p3;
wire   [15:0] window_group_3_3_va_60_fu_3361_p3;
wire   [15:0] window_group_3_3_va_62_fu_3375_p3;
wire   [15:0] window_group_3_3_va_63_fu_3382_p3;
wire   [15:0] window_group_3_3_va_65_fu_3396_p3;
wire   [0:0] icmp_ln1494_fu_3417_p2;
wire   [15:0] tmp_3_fu_3427_p1;
wire   [15:0] tmp_3_fu_3427_p2;
wire   [15:0] tmp_3_fu_3427_p3;
wire   [15:0] tmp_3_fu_3427_p4;
wire   [15:0] tmp_3_fu_3427_p6;
wire   [15:0] select_ln148_fu_3421_p3;
wire   [0:0] icmp_ln1494_1_fu_3440_p2;
wire   [15:0] tmp_4_fu_3454_p1;
wire   [15:0] tmp_4_fu_3454_p2;
wire   [15:0] tmp_4_fu_3454_p3;
wire   [15:0] tmp_4_fu_3454_p4;
wire   [0:0] icmp_ln1494_3_fu_3467_p2;
wire   [15:0] tmp_7_fu_3477_p1;
wire   [15:0] tmp_7_fu_3477_p2;
wire   [15:0] tmp_7_fu_3477_p3;
wire   [15:0] tmp_7_fu_3477_p4;
wire   [15:0] tmp_7_fu_3477_p6;
wire   [15:0] select_ln148_3_fu_3471_p3;
wire   [0:0] icmp_ln1494_4_fu_3490_p2;
wire   [15:0] tmp_8_fu_3504_p1;
wire   [15:0] tmp_8_fu_3504_p2;
wire   [15:0] tmp_8_fu_3504_p3;
wire   [15:0] tmp_8_fu_3504_p4;
wire   [0:0] icmp_ln1494_6_fu_3517_p2;
wire   [15:0] tmp_10_fu_3527_p1;
wire   [15:0] tmp_10_fu_3527_p2;
wire   [15:0] tmp_10_fu_3527_p3;
wire   [15:0] tmp_10_fu_3527_p4;
wire   [15:0] tmp_10_fu_3527_p6;
wire   [15:0] select_ln148_6_fu_3521_p3;
wire   [0:0] icmp_ln1494_7_fu_3540_p2;
wire   [15:0] tmp_11_fu_3554_p1;
wire   [15:0] tmp_11_fu_3554_p2;
wire   [15:0] tmp_11_fu_3554_p3;
wire   [15:0] tmp_11_fu_3554_p4;
wire   [0:0] icmp_ln1494_9_fu_3567_p2;
wire   [15:0] tmp_14_fu_3577_p1;
wire   [15:0] tmp_14_fu_3577_p2;
wire   [15:0] tmp_14_fu_3577_p3;
wire   [15:0] tmp_14_fu_3577_p4;
wire   [15:0] tmp_14_fu_3577_p6;
wire   [15:0] select_ln148_9_fu_3571_p3;
wire   [0:0] icmp_ln1494_10_fu_3590_p2;
wire   [15:0] tmp_15_fu_3604_p1;
wire   [15:0] tmp_15_fu_3604_p2;
wire   [15:0] tmp_15_fu_3604_p3;
wire   [15:0] tmp_15_fu_3604_p4;
wire   [0:0] icmp_ln1494_2_fu_3813_p2;
wire   [15:0] val_output_0_3_V_22_fu_3817_p3;
wire   [15:0] val_output_0_3_V_fu_3823_p3;
wire   [15:0] val_output_0_3_V_14_fu_3830_p3;
wire   [15:0] val_output_0_3_V_16_fu_3844_p3;
wire   [15:0] val_output_0_3_V_17_fu_3851_p3;
wire   [15:0] val_output_0_3_V_19_fu_3865_p3;
wire   [0:0] icmp_ln1494_5_fu_3886_p2;
wire   [15:0] val_output_1_3_V_22_fu_3890_p3;
wire   [15:0] val_output_1_3_V_fu_3896_p3;
wire   [15:0] val_output_1_3_V_14_fu_3903_p3;
wire   [15:0] val_output_1_3_V_16_fu_3917_p3;
wire   [15:0] val_output_1_3_V_17_fu_3924_p3;
wire   [15:0] val_output_1_3_V_19_fu_3938_p3;
wire   [0:0] icmp_ln1494_8_fu_3959_p2;
wire   [15:0] val_output_2_3_V_22_fu_3963_p3;
wire   [15:0] val_output_2_3_V_fu_3969_p3;
wire   [15:0] val_output_2_3_V_14_fu_3976_p3;
wire   [15:0] val_output_2_3_V_16_fu_3990_p3;
wire   [15:0] val_output_2_3_V_17_fu_3997_p3;
wire   [15:0] val_output_2_3_V_19_fu_4011_p3;
wire   [0:0] icmp_ln1494_11_fu_4032_p2;
wire   [15:0] tmp_16_fu_4043_p1;
wire   [15:0] tmp_16_fu_4043_p2;
wire   [15:0] tmp_16_fu_4043_p3;
wire   [15:0] tmp_16_fu_4043_p4;
wire   [15:0] tmp_17_fu_4057_p1;
wire   [15:0] tmp_17_fu_4057_p2;
wire   [15:0] tmp_17_fu_4057_p3;
wire   [15:0] tmp_17_fu_4057_p4;
wire   [15:0] tmp_18_fu_4071_p1;
wire   [15:0] tmp_18_fu_4071_p2;
wire   [15:0] tmp_18_fu_4071_p3;
wire   [15:0] tmp_18_fu_4071_p4;
wire    ap_CS_fsm_state14;
reg    ap_block_state14;
reg   [7:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire   [11:0] mul_ln203_fu_1747_p10;

// power-on initialization
initial begin
#0 ap_CS_fsm = 8'd1;
#0 inStream_V_data_0_sel_rd = 1'b0;
#0 inStream_V_data_0_sel_wr = 1'b0;
#0 inStream_V_data_0_state = 2'd0;
#0 inStream_V_keep_V_0_sel_rd = 1'b0;
#0 inStream_V_keep_V_0_sel_wr = 1'b0;
#0 inStream_V_keep_V_0_state = 2'd0;
#0 inStream_V_strb_V_0_sel_rd = 1'b0;
#0 inStream_V_strb_V_0_sel_wr = 1'b0;
#0 inStream_V_strb_V_0_state = 2'd0;
#0 inStream_V_user_V_0_sel_rd = 1'b0;
#0 inStream_V_user_V_0_sel_wr = 1'b0;
#0 inStream_V_user_V_0_state = 2'd0;
#0 inStream_V_id_V_0_sel_rd = 1'b0;
#0 inStream_V_id_V_0_sel_wr = 1'b0;
#0 inStream_V_id_V_0_state = 2'd0;
#0 inStream_V_dest_V_0_sel_rd = 1'b0;
#0 inStream_V_dest_V_0_sel_wr = 1'b0;
#0 inStream_V_dest_V_0_state = 2'd0;
#0 outStream_V_data_1_sel_rd = 1'b0;
#0 outStream_V_data_1_sel_wr = 1'b0;
#0 outStream_V_data_1_state = 2'd0;
#0 outStream_V_keep_V_1_sel_rd = 1'b0;
#0 outStream_V_keep_V_1_sel_wr = 1'b0;
#0 outStream_V_keep_V_1_state = 2'd0;
#0 outStream_V_strb_V_1_sel_rd = 1'b0;
#0 outStream_V_strb_V_1_sel_wr = 1'b0;
#0 outStream_V_strb_V_1_state = 2'd0;
#0 outStream_V_user_V_1_sel_rd = 1'b0;
#0 outStream_V_user_V_1_sel_wr = 1'b0;
#0 outStream_V_user_V_1_state = 2'd0;
#0 outStream_V_last_V_1_sel_rd = 1'b0;
#0 outStream_V_last_V_1_sel_wr = 1'b0;
#0 outStream_V_last_V_1_state = 2'd0;
#0 outStream_V_id_V_1_sel_rd = 1'b0;
#0 outStream_V_id_V_1_sel_wr = 1'b0;
#0 outStream_V_id_V_1_state = 2'd0;
#0 outStream_V_dest_V_1_sel_rd = 1'b0;
#0 outStream_V_dest_V_1_sel_wr = 1'b0;
#0 outStream_V_dest_V_1_state = 2'd0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 call_ln104_write_output_fu_942_ap_start_reg = 1'b0;
end

yolo_max_pool_top_AXILiteS_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_AXILITES_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_AXILITES_DATA_WIDTH ))
yolo_max_pool_top_AXILiteS_s_axi_U(
    .AWVALID(s_axi_AXILiteS_AWVALID),
    .AWREADY(s_axi_AXILiteS_AWREADY),
    .AWADDR(s_axi_AXILiteS_AWADDR),
    .WVALID(s_axi_AXILiteS_WVALID),
    .WREADY(s_axi_AXILiteS_WREADY),
    .WDATA(s_axi_AXILiteS_WDATA),
    .WSTRB(s_axi_AXILiteS_WSTRB),
    .ARVALID(s_axi_AXILiteS_ARVALID),
    .ARREADY(s_axi_AXILiteS_ARREADY),
    .ARADDR(s_axi_AXILiteS_ARADDR),
    .RVALID(s_axi_AXILiteS_RVALID),
    .RREADY(s_axi_AXILiteS_RREADY),
    .RDATA(s_axi_AXILiteS_RDATA),
    .RRESP(s_axi_AXILiteS_RRESP),
    .BVALID(s_axi_AXILiteS_BVALID),
    .BREADY(s_axi_AXILiteS_BREADY),
    .BRESP(s_axi_AXILiteS_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle)
);

yolo_max_pool_top_line_buff_group_0_va #(
    .DataWidth( 16 ),
    .AddressRange( 1672 ),
    .AddressWidth( 11 ))
line_buff_group_0_va_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(line_buff_group_0_va_address0),
    .ce0(line_buff_group_0_va_ce0),
    .we0(line_buff_group_0_va_we0),
    .d0(line_buff_group_0_va_1_q0),
    .q0(line_buff_group_0_va_q0),
    .address1(line_buff_group_0_va_address1),
    .ce1(line_buff_group_0_va_ce1),
    .q1(line_buff_group_0_va_q1)
);

yolo_max_pool_top_line_buff_group_0_va #(
    .DataWidth( 16 ),
    .AddressRange( 1672 ),
    .AddressWidth( 11 ))
line_buff_group_0_va_1_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(line_buff_group_0_va_1_address0),
    .ce0(line_buff_group_0_va_1_ce0),
    .we0(line_buff_group_0_va_1_we0),
    .d0(curr_input_data_sub_s_reg_4887),
    .q0(line_buff_group_0_va_1_q0),
    .address1(line_buff_group_0_va_1_address1),
    .ce1(line_buff_group_0_va_1_ce1),
    .q1(line_buff_group_0_va_1_q1)
);

yolo_max_pool_top_line_buff_group_0_va #(
    .DataWidth( 16 ),
    .AddressRange( 1672 ),
    .AddressWidth( 11 ))
line_buff_group_1_va_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(line_buff_group_1_va_address0),
    .ce0(line_buff_group_1_va_ce0),
    .we0(line_buff_group_1_va_we0),
    .d0(line_buff_group_1_va_1_q0),
    .q0(line_buff_group_1_va_q0),
    .address1(line_buff_group_1_va_address1),
    .ce1(line_buff_group_1_va_ce1),
    .q1(line_buff_group_1_va_q1)
);

yolo_max_pool_top_line_buff_group_0_va #(
    .DataWidth( 16 ),
    .AddressRange( 1672 ),
    .AddressWidth( 11 ))
line_buff_group_1_va_1_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(line_buff_group_1_va_1_address0),
    .ce0(line_buff_group_1_va_1_ce0),
    .we0(line_buff_group_1_va_1_we0),
    .d0(curr_input_data_sub_1_reg_4892),
    .q0(line_buff_group_1_va_1_q0),
    .address1(line_buff_group_1_va_1_address1),
    .ce1(line_buff_group_1_va_1_ce1),
    .q1(line_buff_group_1_va_1_q1)
);

yolo_max_pool_top_line_buff_group_0_va #(
    .DataWidth( 16 ),
    .AddressRange( 1672 ),
    .AddressWidth( 11 ))
line_buff_group_2_va_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(line_buff_group_2_va_address0),
    .ce0(line_buff_group_2_va_ce0),
    .we0(line_buff_group_2_va_we0),
    .d0(line_buff_group_2_va_1_q0),
    .q0(line_buff_group_2_va_q0),
    .address1(line_buff_group_2_va_address1),
    .ce1(line_buff_group_2_va_ce1),
    .q1(line_buff_group_2_va_q1)
);

yolo_max_pool_top_line_buff_group_0_va #(
    .DataWidth( 16 ),
    .AddressRange( 1672 ),
    .AddressWidth( 11 ))
line_buff_group_2_va_1_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(line_buff_group_2_va_1_address0),
    .ce0(line_buff_group_2_va_1_ce0),
    .we0(line_buff_group_2_va_1_we0),
    .d0(curr_input_data_sub_2_reg_4897),
    .q0(line_buff_group_2_va_1_q0),
    .address1(line_buff_group_2_va_1_address1),
    .ce1(line_buff_group_2_va_1_ce1),
    .q1(line_buff_group_2_va_1_q1)
);

yolo_max_pool_top_line_buff_group_0_va #(
    .DataWidth( 16 ),
    .AddressRange( 1672 ),
    .AddressWidth( 11 ))
line_buff_group_3_va_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(line_buff_group_3_va_address0),
    .ce0(line_buff_group_3_va_ce0),
    .we0(line_buff_group_3_va_we0),
    .d0(line_buff_group_3_va_1_q0),
    .q0(line_buff_group_3_va_q0),
    .address1(line_buff_group_3_va_address1),
    .ce1(line_buff_group_3_va_ce1),
    .q1(line_buff_group_3_va_q1)
);

yolo_max_pool_top_line_buff_group_0_va #(
    .DataWidth( 16 ),
    .AddressRange( 1672 ),
    .AddressWidth( 11 ))
line_buff_group_3_va_1_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(line_buff_group_3_va_1_address0),
    .ce0(line_buff_group_3_va_1_ce0),
    .we0(line_buff_group_3_va_1_we0),
    .d0(curr_input_data_sub_3_reg_4902),
    .q0(line_buff_group_3_va_1_q0),
    .address1(line_buff_group_3_va_1_address1),
    .ce1(line_buff_group_3_va_1_ce1),
    .q1(line_buff_group_3_va_1_q1)
);

write_output call_ln104_write_output_fu_942(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(call_ln104_write_output_fu_942_ap_start),
    .ap_done(call_ln104_write_output_fu_942_ap_done),
    .ap_idle(call_ln104_write_output_fu_942_ap_idle),
    .ap_ready(call_ln104_write_output_fu_942_ap_ready),
    .val_output_0_V(tmp_16_fu_4043_p6),
    .val_output_1_V(tmp_17_fu_4057_p6),
    .val_output_2_V(tmp_18_fu_4071_p6),
    .val_output_3_V(call_ln104_write_output_fu_942_val_output_3_V),
    .curr_input_keep_V(tmp_keep_V_reg_4862_pp0_iter2_reg),
    .curr_input_strb_V(tmp_strb_V_reg_4867_pp0_iter2_reg),
    .curr_input_user_V(tmp_user_V_reg_4872_pp0_iter2_reg),
    .curr_input_id_V(tmp_id_V_reg_4877_pp0_iter2_reg),
    .curr_input_dest_V(tmp_dest_V_reg_4882_pp0_iter2_reg),
    .outStream_TDATA(call_ln104_write_output_fu_942_outStream_TDATA),
    .outStream_TVALID(call_ln104_write_output_fu_942_outStream_TVALID),
    .outStream_TREADY(call_ln104_write_output_fu_942_outStream_TREADY),
    .outStream_TKEEP(call_ln104_write_output_fu_942_outStream_TKEEP),
    .outStream_TSTRB(call_ln104_write_output_fu_942_outStream_TSTRB),
    .outStream_TUSER(call_ln104_write_output_fu_942_outStream_TUSER),
    .outStream_TLAST(call_ln104_write_output_fu_942_outStream_TLAST),
    .outStream_TID(call_ln104_write_output_fu_942_outStream_TID),
    .outStream_TDEST(call_ln104_write_output_fu_942_outStream_TDEST),
    .last_V(and_ln93_1_reg_4918_pp0_iter2_reg),
    .outStream_TDATA_blk_n(call_ln104_write_output_fu_942_outStream_TDATA_blk_n),
    .ap_ce(call_ln104_write_output_fu_942_ap_ce)
);

yolo_max_pool_top_mux_42_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
yolo_max_pool_top_mux_42_16_1_1_U18(
    .din0(tmp_1_fu_2561_p1),
    .din1(tmp_1_fu_2561_p2),
    .din2(tmp_1_fu_2561_p3),
    .din3(tmp_1_fu_2561_p4),
    .din4(trunc_ln203_fu_1964_p1),
    .dout(tmp_1_fu_2561_p6)
);

yolo_max_pool_top_mux_42_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
yolo_max_pool_top_mux_42_16_1_1_U19(
    .din0(tmp_2_fu_2575_p1),
    .din1(tmp_2_fu_2575_p2),
    .din2(tmp_2_fu_2575_p3),
    .din3(tmp_2_fu_2575_p4),
    .din4(trunc_ln203_fu_1964_p1),
    .dout(tmp_2_fu_2575_p6)
);

yolo_max_pool_top_mux_42_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
yolo_max_pool_top_mux_42_16_1_1_U20(
    .din0(tmp_5_fu_2589_p1),
    .din1(tmp_5_fu_2589_p2),
    .din2(tmp_5_fu_2589_p3),
    .din3(tmp_5_fu_2589_p4),
    .din4(trunc_ln203_fu_1964_p1),
    .dout(tmp_5_fu_2589_p6)
);

yolo_max_pool_top_mux_42_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
yolo_max_pool_top_mux_42_16_1_1_U21(
    .din0(tmp_6_fu_2603_p1),
    .din1(tmp_6_fu_2603_p2),
    .din2(tmp_6_fu_2603_p3),
    .din3(tmp_6_fu_2603_p4),
    .din4(trunc_ln203_fu_1964_p1),
    .dout(tmp_6_fu_2603_p6)
);

yolo_max_pool_top_mux_42_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
yolo_max_pool_top_mux_42_16_1_1_U22(
    .din0(tmp_9_fu_2617_p1),
    .din1(tmp_9_fu_2617_p2),
    .din2(tmp_9_fu_2617_p3),
    .din3(tmp_9_fu_2617_p4),
    .din4(trunc_ln203_fu_1964_p1),
    .dout(tmp_9_fu_2617_p6)
);

yolo_max_pool_top_mux_42_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
yolo_max_pool_top_mux_42_16_1_1_U23(
    .din0(tmp_s_fu_2631_p1),
    .din1(tmp_s_fu_2631_p2),
    .din2(tmp_s_fu_2631_p3),
    .din3(tmp_s_fu_2631_p4),
    .din4(trunc_ln203_fu_1964_p1),
    .dout(tmp_s_fu_2631_p6)
);

yolo_max_pool_top_mux_42_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
yolo_max_pool_top_mux_42_16_1_1_U24(
    .din0(tmp_12_fu_2645_p1),
    .din1(tmp_12_fu_2645_p2),
    .din2(tmp_12_fu_2645_p3),
    .din3(tmp_12_fu_2645_p4),
    .din4(trunc_ln203_fu_1964_p1),
    .dout(tmp_12_fu_2645_p6)
);

yolo_max_pool_top_mux_42_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
yolo_max_pool_top_mux_42_16_1_1_U25(
    .din0(tmp_13_fu_2659_p1),
    .din1(tmp_13_fu_2659_p2),
    .din2(tmp_13_fu_2659_p3),
    .din3(tmp_13_fu_2659_p4),
    .din4(trunc_ln203_fu_1964_p1),
    .dout(tmp_13_fu_2659_p6)
);

yolo_max_pool_top_mux_42_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
yolo_max_pool_top_mux_42_16_1_1_U26(
    .din0(tmp_3_fu_3427_p1),
    .din1(tmp_3_fu_3427_p2),
    .din2(tmp_3_fu_3427_p3),
    .din3(tmp_3_fu_3427_p4),
    .din4(trunc_ln203_reg_5064),
    .dout(tmp_3_fu_3427_p6)
);

yolo_max_pool_top_mux_42_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
yolo_max_pool_top_mux_42_16_1_1_U27(
    .din0(tmp_4_fu_3454_p1),
    .din1(tmp_4_fu_3454_p2),
    .din2(tmp_4_fu_3454_p3),
    .din3(tmp_4_fu_3454_p4),
    .din4(trunc_ln203_reg_5064),
    .dout(tmp_4_fu_3454_p6)
);

yolo_max_pool_top_mux_42_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
yolo_max_pool_top_mux_42_16_1_1_U28(
    .din0(tmp_7_fu_3477_p1),
    .din1(tmp_7_fu_3477_p2),
    .din2(tmp_7_fu_3477_p3),
    .din3(tmp_7_fu_3477_p4),
    .din4(trunc_ln203_reg_5064),
    .dout(tmp_7_fu_3477_p6)
);

yolo_max_pool_top_mux_42_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
yolo_max_pool_top_mux_42_16_1_1_U29(
    .din0(tmp_8_fu_3504_p1),
    .din1(tmp_8_fu_3504_p2),
    .din2(tmp_8_fu_3504_p3),
    .din3(tmp_8_fu_3504_p4),
    .din4(trunc_ln203_reg_5064),
    .dout(tmp_8_fu_3504_p6)
);

yolo_max_pool_top_mux_42_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
yolo_max_pool_top_mux_42_16_1_1_U30(
    .din0(tmp_10_fu_3527_p1),
    .din1(tmp_10_fu_3527_p2),
    .din2(tmp_10_fu_3527_p3),
    .din3(tmp_10_fu_3527_p4),
    .din4(trunc_ln203_reg_5064),
    .dout(tmp_10_fu_3527_p6)
);

yolo_max_pool_top_mux_42_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
yolo_max_pool_top_mux_42_16_1_1_U31(
    .din0(tmp_11_fu_3554_p1),
    .din1(tmp_11_fu_3554_p2),
    .din2(tmp_11_fu_3554_p3),
    .din3(tmp_11_fu_3554_p4),
    .din4(trunc_ln203_reg_5064),
    .dout(tmp_11_fu_3554_p6)
);

yolo_max_pool_top_mux_42_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
yolo_max_pool_top_mux_42_16_1_1_U32(
    .din0(tmp_14_fu_3577_p1),
    .din1(tmp_14_fu_3577_p2),
    .din2(tmp_14_fu_3577_p3),
    .din3(tmp_14_fu_3577_p4),
    .din4(trunc_ln203_reg_5064),
    .dout(tmp_14_fu_3577_p6)
);

yolo_max_pool_top_mux_42_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
yolo_max_pool_top_mux_42_16_1_1_U33(
    .din0(tmp_15_fu_3604_p1),
    .din1(tmp_15_fu_3604_p2),
    .din2(tmp_15_fu_3604_p3),
    .din3(tmp_15_fu_3604_p4),
    .din4(trunc_ln203_reg_5064),
    .dout(tmp_15_fu_3604_p6)
);

yolo_max_pool_top_mux_42_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
yolo_max_pool_top_mux_42_16_1_1_U34(
    .din0(tmp_16_fu_4043_p1),
    .din1(tmp_16_fu_4043_p2),
    .din2(tmp_16_fu_4043_p3),
    .din3(tmp_16_fu_4043_p4),
    .din4(trunc_ln203_reg_5064),
    .dout(tmp_16_fu_4043_p6)
);

yolo_max_pool_top_mux_42_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
yolo_max_pool_top_mux_42_16_1_1_U35(
    .din0(tmp_17_fu_4057_p1),
    .din1(tmp_17_fu_4057_p2),
    .din2(tmp_17_fu_4057_p3),
    .din3(tmp_17_fu_4057_p4),
    .din4(trunc_ln203_reg_5064),
    .dout(tmp_17_fu_4057_p6)
);

yolo_max_pool_top_mux_42_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
yolo_max_pool_top_mux_42_16_1_1_U36(
    .din0(tmp_18_fu_4071_p1),
    .din1(tmp_18_fu_4071_p2),
    .din2(tmp_18_fu_4071_p3),
    .din3(tmp_18_fu_4071_p4),
    .din4(trunc_ln203_reg_5064),
    .dout(tmp_18_fu_4071_p6)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state6) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((icmp_ln13_fu_1036_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end else if (((icmp_ln13_fu_1036_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
            ap_enable_reg_pp0_iter3 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        call_ln104_write_output_fu_942_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (select_ln43_1_reg_4843_pp0_iter2_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
            call_ln104_write_output_fu_942_ap_start_reg <= 1'b1;
        end else if ((call_ln104_write_output_fu_942_ap_ready == 1'b1)) begin
            call_ln104_write_output_fu_942_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        inStream_V_data_0_sel_rd <= 1'b0;
    end else begin
        if (((inStream_V_data_0_ack_out == 1'b1) & (inStream_V_data_0_vld_out == 1'b1))) begin
            inStream_V_data_0_sel_rd <= ~inStream_V_data_0_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        inStream_V_data_0_sel_wr <= 1'b0;
    end else begin
        if (((inStream_V_data_0_ack_in == 1'b1) & (inStream_V_data_0_vld_in == 1'b1))) begin
            inStream_V_data_0_sel_wr <= ~inStream_V_data_0_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        inStream_V_data_0_state <= 2'd0;
    end else begin
        if ((((inStream_V_data_0_state == 2'd2) & (inStream_V_data_0_vld_in == 1'b0)) | ((inStream_V_data_0_state == 2'd3) & (inStream_V_data_0_vld_in == 1'b0) & (inStream_V_data_0_ack_out == 1'b1)))) begin
            inStream_V_data_0_state <= 2'd2;
        end else if ((((inStream_V_data_0_state == 2'd1) & (inStream_V_data_0_ack_out == 1'b0)) | ((inStream_V_data_0_state == 2'd3) & (inStream_V_data_0_ack_out == 1'b0) & (inStream_V_data_0_vld_in == 1'b1)))) begin
            inStream_V_data_0_state <= 2'd1;
        end else if (((~((inStream_V_data_0_vld_in == 1'b0) & (inStream_V_data_0_ack_out == 1'b1)) & ~((inStream_V_data_0_ack_out == 1'b0) & (inStream_V_data_0_vld_in == 1'b1)) & (inStream_V_data_0_state == 2'd3)) | ((inStream_V_data_0_state == 2'd1) & (inStream_V_data_0_ack_out == 1'b1)) | ((inStream_V_data_0_state == 2'd2) & (inStream_V_data_0_vld_in == 1'b1)))) begin
            inStream_V_data_0_state <= 2'd3;
        end else begin
            inStream_V_data_0_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        inStream_V_dest_V_0_sel_rd <= 1'b0;
    end else begin
        if (((inStream_V_dest_V_0_ack_out == 1'b1) & (inStream_V_dest_V_0_vld_out == 1'b1))) begin
            inStream_V_dest_V_0_sel_rd <= ~inStream_V_dest_V_0_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        inStream_V_dest_V_0_sel_wr <= 1'b0;
    end else begin
        if (((inStream_V_dest_V_0_ack_in == 1'b1) & (inStream_V_dest_V_0_vld_in == 1'b1))) begin
            inStream_V_dest_V_0_sel_wr <= ~inStream_V_dest_V_0_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        inStream_V_dest_V_0_state <= 2'd0;
    end else begin
        if ((((inStream_V_dest_V_0_state == 2'd2) & (inStream_V_dest_V_0_vld_in == 1'b0)) | ((inStream_V_dest_V_0_state == 2'd3) & (inStream_V_dest_V_0_vld_in == 1'b0) & (inStream_V_dest_V_0_ack_out == 1'b1)))) begin
            inStream_V_dest_V_0_state <= 2'd2;
        end else if ((((inStream_V_dest_V_0_state == 2'd1) & (inStream_V_dest_V_0_ack_out == 1'b0)) | ((inStream_V_dest_V_0_state == 2'd3) & (inStream_V_dest_V_0_ack_out == 1'b0) & (inStream_V_dest_V_0_vld_in == 1'b1)))) begin
            inStream_V_dest_V_0_state <= 2'd1;
        end else if (((~((inStream_V_dest_V_0_vld_in == 1'b0) & (inStream_V_dest_V_0_ack_out == 1'b1)) & ~((inStream_V_dest_V_0_ack_out == 1'b0) & (inStream_V_dest_V_0_vld_in == 1'b1)) & (inStream_V_dest_V_0_state == 2'd3)) | ((inStream_V_dest_V_0_state == 2'd1) & (inStream_V_dest_V_0_ack_out == 1'b1)) | ((inStream_V_dest_V_0_state == 2'd2) & (inStream_V_dest_V_0_vld_in == 1'b1)))) begin
            inStream_V_dest_V_0_state <= 2'd3;
        end else begin
            inStream_V_dest_V_0_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        inStream_V_id_V_0_sel_rd <= 1'b0;
    end else begin
        if (((inStream_V_id_V_0_ack_out == 1'b1) & (inStream_V_id_V_0_vld_out == 1'b1))) begin
            inStream_V_id_V_0_sel_rd <= ~inStream_V_id_V_0_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        inStream_V_id_V_0_sel_wr <= 1'b0;
    end else begin
        if (((inStream_V_id_V_0_ack_in == 1'b1) & (inStream_V_id_V_0_vld_in == 1'b1))) begin
            inStream_V_id_V_0_sel_wr <= ~inStream_V_id_V_0_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        inStream_V_id_V_0_state <= 2'd0;
    end else begin
        if ((((inStream_V_id_V_0_state == 2'd2) & (inStream_V_id_V_0_vld_in == 1'b0)) | ((inStream_V_id_V_0_state == 2'd3) & (inStream_V_id_V_0_vld_in == 1'b0) & (inStream_V_id_V_0_ack_out == 1'b1)))) begin
            inStream_V_id_V_0_state <= 2'd2;
        end else if ((((inStream_V_id_V_0_state == 2'd1) & (inStream_V_id_V_0_ack_out == 1'b0)) | ((inStream_V_id_V_0_state == 2'd3) & (inStream_V_id_V_0_ack_out == 1'b0) & (inStream_V_id_V_0_vld_in == 1'b1)))) begin
            inStream_V_id_V_0_state <= 2'd1;
        end else if (((~((inStream_V_id_V_0_vld_in == 1'b0) & (inStream_V_id_V_0_ack_out == 1'b1)) & ~((inStream_V_id_V_0_ack_out == 1'b0) & (inStream_V_id_V_0_vld_in == 1'b1)) & (inStream_V_id_V_0_state == 2'd3)) | ((inStream_V_id_V_0_state == 2'd1) & (inStream_V_id_V_0_ack_out == 1'b1)) | ((inStream_V_id_V_0_state == 2'd2) & (inStream_V_id_V_0_vld_in == 1'b1)))) begin
            inStream_V_id_V_0_state <= 2'd3;
        end else begin
            inStream_V_id_V_0_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        inStream_V_keep_V_0_sel_rd <= 1'b0;
    end else begin
        if (((inStream_V_keep_V_0_ack_out == 1'b1) & (inStream_V_keep_V_0_vld_out == 1'b1))) begin
            inStream_V_keep_V_0_sel_rd <= ~inStream_V_keep_V_0_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        inStream_V_keep_V_0_sel_wr <= 1'b0;
    end else begin
        if (((inStream_V_keep_V_0_ack_in == 1'b1) & (inStream_V_keep_V_0_vld_in == 1'b1))) begin
            inStream_V_keep_V_0_sel_wr <= ~inStream_V_keep_V_0_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        inStream_V_keep_V_0_state <= 2'd0;
    end else begin
        if ((((inStream_V_keep_V_0_state == 2'd2) & (inStream_V_keep_V_0_vld_in == 1'b0)) | ((inStream_V_keep_V_0_state == 2'd3) & (inStream_V_keep_V_0_vld_in == 1'b0) & (inStream_V_keep_V_0_ack_out == 1'b1)))) begin
            inStream_V_keep_V_0_state <= 2'd2;
        end else if ((((inStream_V_keep_V_0_state == 2'd1) & (inStream_V_keep_V_0_ack_out == 1'b0)) | ((inStream_V_keep_V_0_state == 2'd3) & (inStream_V_keep_V_0_ack_out == 1'b0) & (inStream_V_keep_V_0_vld_in == 1'b1)))) begin
            inStream_V_keep_V_0_state <= 2'd1;
        end else if (((~((inStream_V_keep_V_0_vld_in == 1'b0) & (inStream_V_keep_V_0_ack_out == 1'b1)) & ~((inStream_V_keep_V_0_ack_out == 1'b0) & (inStream_V_keep_V_0_vld_in == 1'b1)) & (inStream_V_keep_V_0_state == 2'd3)) | ((inStream_V_keep_V_0_state == 2'd1) & (inStream_V_keep_V_0_ack_out == 1'b1)) | ((inStream_V_keep_V_0_state == 2'd2) & (inStream_V_keep_V_0_vld_in == 1'b1)))) begin
            inStream_V_keep_V_0_state <= 2'd3;
        end else begin
            inStream_V_keep_V_0_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        inStream_V_strb_V_0_sel_rd <= 1'b0;
    end else begin
        if (((inStream_V_strb_V_0_ack_out == 1'b1) & (inStream_V_strb_V_0_vld_out == 1'b1))) begin
            inStream_V_strb_V_0_sel_rd <= ~inStream_V_strb_V_0_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        inStream_V_strb_V_0_sel_wr <= 1'b0;
    end else begin
        if (((inStream_V_strb_V_0_ack_in == 1'b1) & (inStream_V_strb_V_0_vld_in == 1'b1))) begin
            inStream_V_strb_V_0_sel_wr <= ~inStream_V_strb_V_0_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        inStream_V_strb_V_0_state <= 2'd0;
    end else begin
        if ((((inStream_V_strb_V_0_state == 2'd2) & (inStream_V_strb_V_0_vld_in == 1'b0)) | ((inStream_V_strb_V_0_state == 2'd3) & (inStream_V_strb_V_0_vld_in == 1'b0) & (inStream_V_strb_V_0_ack_out == 1'b1)))) begin
            inStream_V_strb_V_0_state <= 2'd2;
        end else if ((((inStream_V_strb_V_0_state == 2'd1) & (inStream_V_strb_V_0_ack_out == 1'b0)) | ((inStream_V_strb_V_0_state == 2'd3) & (inStream_V_strb_V_0_ack_out == 1'b0) & (inStream_V_strb_V_0_vld_in == 1'b1)))) begin
            inStream_V_strb_V_0_state <= 2'd1;
        end else if (((~((inStream_V_strb_V_0_vld_in == 1'b0) & (inStream_V_strb_V_0_ack_out == 1'b1)) & ~((inStream_V_strb_V_0_ack_out == 1'b0) & (inStream_V_strb_V_0_vld_in == 1'b1)) & (inStream_V_strb_V_0_state == 2'd3)) | ((inStream_V_strb_V_0_state == 2'd1) & (inStream_V_strb_V_0_ack_out == 1'b1)) | ((inStream_V_strb_V_0_state == 2'd2) & (inStream_V_strb_V_0_vld_in == 1'b1)))) begin
            inStream_V_strb_V_0_state <= 2'd3;
        end else begin
            inStream_V_strb_V_0_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        inStream_V_user_V_0_sel_rd <= 1'b0;
    end else begin
        if (((inStream_V_user_V_0_ack_out == 1'b1) & (inStream_V_user_V_0_vld_out == 1'b1))) begin
            inStream_V_user_V_0_sel_rd <= ~inStream_V_user_V_0_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        inStream_V_user_V_0_sel_wr <= 1'b0;
    end else begin
        if (((inStream_V_user_V_0_ack_in == 1'b1) & (inStream_V_user_V_0_vld_in == 1'b1))) begin
            inStream_V_user_V_0_sel_wr <= ~inStream_V_user_V_0_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        inStream_V_user_V_0_state <= 2'd0;
    end else begin
        if ((((inStream_V_user_V_0_state == 2'd2) & (inStream_V_user_V_0_vld_in == 1'b0)) | ((inStream_V_user_V_0_state == 2'd3) & (inStream_V_user_V_0_vld_in == 1'b0) & (inStream_V_user_V_0_ack_out == 1'b1)))) begin
            inStream_V_user_V_0_state <= 2'd2;
        end else if ((((inStream_V_user_V_0_state == 2'd1) & (inStream_V_user_V_0_ack_out == 1'b0)) | ((inStream_V_user_V_0_state == 2'd3) & (inStream_V_user_V_0_ack_out == 1'b0) & (inStream_V_user_V_0_vld_in == 1'b1)))) begin
            inStream_V_user_V_0_state <= 2'd1;
        end else if (((~((inStream_V_user_V_0_vld_in == 1'b0) & (inStream_V_user_V_0_ack_out == 1'b1)) & ~((inStream_V_user_V_0_ack_out == 1'b0) & (inStream_V_user_V_0_vld_in == 1'b1)) & (inStream_V_user_V_0_state == 2'd3)) | ((inStream_V_user_V_0_state == 2'd1) & (inStream_V_user_V_0_ack_out == 1'b1)) | ((inStream_V_user_V_0_state == 2'd2) & (inStream_V_user_V_0_vld_in == 1'b1)))) begin
            inStream_V_user_V_0_state <= 2'd3;
        end else begin
            inStream_V_user_V_0_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        outStream_V_data_1_sel_rd <= 1'b0;
    end else begin
        if (((outStream_V_data_1_ack_out == 1'b1) & (outStream_V_data_1_vld_out == 1'b1))) begin
            outStream_V_data_1_sel_rd <= ~outStream_V_data_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        outStream_V_data_1_sel_wr <= 1'b0;
    end else begin
        if (((outStream_V_data_1_ack_in == 1'b1) & (outStream_V_data_1_vld_in == 1'b1))) begin
            outStream_V_data_1_sel_wr <= ~outStream_V_data_1_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        outStream_V_data_1_state <= 2'd0;
    end else begin
        if ((((outStream_V_data_1_state == 2'd2) & (outStream_V_data_1_vld_in == 1'b0)) | ((outStream_V_data_1_state == 2'd3) & (outStream_V_data_1_vld_in == 1'b0) & (outStream_V_data_1_ack_out == 1'b1)))) begin
            outStream_V_data_1_state <= 2'd2;
        end else if ((((outStream_V_data_1_state == 2'd1) & (outStream_TREADY == 1'b0)) | ((outStream_V_data_1_state == 2'd3) & (outStream_TREADY == 1'b0) & (outStream_V_data_1_vld_in == 1'b1)))) begin
            outStream_V_data_1_state <= 2'd1;
        end else if (((~((outStream_V_data_1_vld_in == 1'b0) & (outStream_V_data_1_ack_out == 1'b1)) & ~((outStream_TREADY == 1'b0) & (outStream_V_data_1_vld_in == 1'b1)) & (outStream_V_data_1_state == 2'd3)) | ((outStream_V_data_1_state == 2'd1) & (outStream_V_data_1_ack_out == 1'b1)) | ((outStream_V_data_1_state == 2'd2) & (outStream_V_data_1_vld_in == 1'b1)))) begin
            outStream_V_data_1_state <= 2'd3;
        end else begin
            outStream_V_data_1_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        outStream_V_dest_V_1_sel_rd <= 1'b0;
    end else begin
        if (((outStream_V_dest_V_1_ack_out == 1'b1) & (outStream_V_dest_V_1_vld_out == 1'b1))) begin
            outStream_V_dest_V_1_sel_rd <= ~outStream_V_dest_V_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        outStream_V_dest_V_1_sel_wr <= 1'b0;
    end else begin
        if (((outStream_V_dest_V_1_ack_in == 1'b1) & (outStream_V_dest_V_1_vld_in == 1'b1))) begin
            outStream_V_dest_V_1_sel_wr <= ~outStream_V_dest_V_1_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        outStream_V_dest_V_1_state <= 2'd0;
    end else begin
        if ((((outStream_V_dest_V_1_state == 2'd2) & (outStream_V_dest_V_1_vld_in == 1'b0)) | ((outStream_V_dest_V_1_state == 2'd3) & (outStream_V_dest_V_1_vld_in == 1'b0) & (outStream_V_dest_V_1_ack_out == 1'b1)))) begin
            outStream_V_dest_V_1_state <= 2'd2;
        end else if ((((outStream_V_dest_V_1_state == 2'd1) & (outStream_TREADY == 1'b0)) | ((outStream_V_dest_V_1_state == 2'd3) & (outStream_TREADY == 1'b0) & (outStream_V_dest_V_1_vld_in == 1'b1)))) begin
            outStream_V_dest_V_1_state <= 2'd1;
        end else if (((~((outStream_V_dest_V_1_vld_in == 1'b0) & (outStream_V_dest_V_1_ack_out == 1'b1)) & ~((outStream_TREADY == 1'b0) & (outStream_V_dest_V_1_vld_in == 1'b1)) & (outStream_V_dest_V_1_state == 2'd3)) | ((outStream_V_dest_V_1_state == 2'd1) & (outStream_V_dest_V_1_ack_out == 1'b1)) | ((outStream_V_dest_V_1_state == 2'd2) & (outStream_V_dest_V_1_vld_in == 1'b1)))) begin
            outStream_V_dest_V_1_state <= 2'd3;
        end else begin
            outStream_V_dest_V_1_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        outStream_V_id_V_1_sel_rd <= 1'b0;
    end else begin
        if (((outStream_V_id_V_1_ack_out == 1'b1) & (outStream_V_id_V_1_vld_out == 1'b1))) begin
            outStream_V_id_V_1_sel_rd <= ~outStream_V_id_V_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        outStream_V_id_V_1_sel_wr <= 1'b0;
    end else begin
        if (((outStream_V_id_V_1_ack_in == 1'b1) & (outStream_V_id_V_1_vld_in == 1'b1))) begin
            outStream_V_id_V_1_sel_wr <= ~outStream_V_id_V_1_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        outStream_V_id_V_1_state <= 2'd0;
    end else begin
        if ((((outStream_V_id_V_1_state == 2'd2) & (outStream_V_id_V_1_vld_in == 1'b0)) | ((outStream_V_id_V_1_state == 2'd3) & (outStream_V_id_V_1_vld_in == 1'b0) & (outStream_V_id_V_1_ack_out == 1'b1)))) begin
            outStream_V_id_V_1_state <= 2'd2;
        end else if ((((outStream_V_id_V_1_state == 2'd1) & (outStream_TREADY == 1'b0)) | ((outStream_V_id_V_1_state == 2'd3) & (outStream_TREADY == 1'b0) & (outStream_V_id_V_1_vld_in == 1'b1)))) begin
            outStream_V_id_V_1_state <= 2'd1;
        end else if (((~((outStream_V_id_V_1_vld_in == 1'b0) & (outStream_V_id_V_1_ack_out == 1'b1)) & ~((outStream_TREADY == 1'b0) & (outStream_V_id_V_1_vld_in == 1'b1)) & (outStream_V_id_V_1_state == 2'd3)) | ((outStream_V_id_V_1_state == 2'd1) & (outStream_V_id_V_1_ack_out == 1'b1)) | ((outStream_V_id_V_1_state == 2'd2) & (outStream_V_id_V_1_vld_in == 1'b1)))) begin
            outStream_V_id_V_1_state <= 2'd3;
        end else begin
            outStream_V_id_V_1_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        outStream_V_keep_V_1_sel_rd <= 1'b0;
    end else begin
        if (((outStream_V_keep_V_1_ack_out == 1'b1) & (outStream_V_keep_V_1_vld_out == 1'b1))) begin
            outStream_V_keep_V_1_sel_rd <= ~outStream_V_keep_V_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        outStream_V_keep_V_1_sel_wr <= 1'b0;
    end else begin
        if (((outStream_V_keep_V_1_ack_in == 1'b1) & (outStream_V_keep_V_1_vld_in == 1'b1))) begin
            outStream_V_keep_V_1_sel_wr <= ~outStream_V_keep_V_1_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        outStream_V_keep_V_1_state <= 2'd0;
    end else begin
        if ((((outStream_V_keep_V_1_state == 2'd2) & (outStream_V_keep_V_1_vld_in == 1'b0)) | ((outStream_V_keep_V_1_state == 2'd3) & (outStream_V_keep_V_1_vld_in == 1'b0) & (outStream_V_keep_V_1_ack_out == 1'b1)))) begin
            outStream_V_keep_V_1_state <= 2'd2;
        end else if ((((outStream_V_keep_V_1_state == 2'd1) & (outStream_TREADY == 1'b0)) | ((outStream_V_keep_V_1_state == 2'd3) & (outStream_TREADY == 1'b0) & (outStream_V_keep_V_1_vld_in == 1'b1)))) begin
            outStream_V_keep_V_1_state <= 2'd1;
        end else if (((~((outStream_V_keep_V_1_vld_in == 1'b0) & (outStream_V_keep_V_1_ack_out == 1'b1)) & ~((outStream_TREADY == 1'b0) & (outStream_V_keep_V_1_vld_in == 1'b1)) & (outStream_V_keep_V_1_state == 2'd3)) | ((outStream_V_keep_V_1_state == 2'd1) & (outStream_V_keep_V_1_ack_out == 1'b1)) | ((outStream_V_keep_V_1_state == 2'd2) & (outStream_V_keep_V_1_vld_in == 1'b1)))) begin
            outStream_V_keep_V_1_state <= 2'd3;
        end else begin
            outStream_V_keep_V_1_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        outStream_V_last_V_1_sel_rd <= 1'b0;
    end else begin
        if (((outStream_V_last_V_1_ack_out == 1'b1) & (outStream_V_last_V_1_vld_out == 1'b1))) begin
            outStream_V_last_V_1_sel_rd <= ~outStream_V_last_V_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        outStream_V_last_V_1_sel_wr <= 1'b0;
    end else begin
        if (((outStream_V_last_V_1_ack_in == 1'b1) & (outStream_V_last_V_1_vld_in == 1'b1))) begin
            outStream_V_last_V_1_sel_wr <= ~outStream_V_last_V_1_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        outStream_V_last_V_1_state <= 2'd0;
    end else begin
        if ((((outStream_V_last_V_1_state == 2'd2) & (outStream_V_last_V_1_vld_in == 1'b0)) | ((outStream_V_last_V_1_state == 2'd3) & (outStream_V_last_V_1_vld_in == 1'b0) & (outStream_V_last_V_1_ack_out == 1'b1)))) begin
            outStream_V_last_V_1_state <= 2'd2;
        end else if ((((outStream_V_last_V_1_state == 2'd1) & (outStream_TREADY == 1'b0)) | ((outStream_V_last_V_1_state == 2'd3) & (outStream_TREADY == 1'b0) & (outStream_V_last_V_1_vld_in == 1'b1)))) begin
            outStream_V_last_V_1_state <= 2'd1;
        end else if (((~((outStream_V_last_V_1_vld_in == 1'b0) & (outStream_V_last_V_1_ack_out == 1'b1)) & ~((outStream_TREADY == 1'b0) & (outStream_V_last_V_1_vld_in == 1'b1)) & (outStream_V_last_V_1_state == 2'd3)) | ((outStream_V_last_V_1_state == 2'd1) & (outStream_V_last_V_1_ack_out == 1'b1)) | ((outStream_V_last_V_1_state == 2'd2) & (outStream_V_last_V_1_vld_in == 1'b1)))) begin
            outStream_V_last_V_1_state <= 2'd3;
        end else begin
            outStream_V_last_V_1_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        outStream_V_strb_V_1_sel_rd <= 1'b0;
    end else begin
        if (((outStream_V_strb_V_1_ack_out == 1'b1) & (outStream_V_strb_V_1_vld_out == 1'b1))) begin
            outStream_V_strb_V_1_sel_rd <= ~outStream_V_strb_V_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        outStream_V_strb_V_1_sel_wr <= 1'b0;
    end else begin
        if (((outStream_V_strb_V_1_ack_in == 1'b1) & (outStream_V_strb_V_1_vld_in == 1'b1))) begin
            outStream_V_strb_V_1_sel_wr <= ~outStream_V_strb_V_1_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        outStream_V_strb_V_1_state <= 2'd0;
    end else begin
        if ((((outStream_V_strb_V_1_state == 2'd2) & (outStream_V_strb_V_1_vld_in == 1'b0)) | ((outStream_V_strb_V_1_state == 2'd3) & (outStream_V_strb_V_1_vld_in == 1'b0) & (outStream_V_strb_V_1_ack_out == 1'b1)))) begin
            outStream_V_strb_V_1_state <= 2'd2;
        end else if ((((outStream_V_strb_V_1_state == 2'd1) & (outStream_TREADY == 1'b0)) | ((outStream_V_strb_V_1_state == 2'd3) & (outStream_TREADY == 1'b0) & (outStream_V_strb_V_1_vld_in == 1'b1)))) begin
            outStream_V_strb_V_1_state <= 2'd1;
        end else if (((~((outStream_V_strb_V_1_vld_in == 1'b0) & (outStream_V_strb_V_1_ack_out == 1'b1)) & ~((outStream_TREADY == 1'b0) & (outStream_V_strb_V_1_vld_in == 1'b1)) & (outStream_V_strb_V_1_state == 2'd3)) | ((outStream_V_strb_V_1_state == 2'd1) & (outStream_V_strb_V_1_ack_out == 1'b1)) | ((outStream_V_strb_V_1_state == 2'd2) & (outStream_V_strb_V_1_vld_in == 1'b1)))) begin
            outStream_V_strb_V_1_state <= 2'd3;
        end else begin
            outStream_V_strb_V_1_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        outStream_V_user_V_1_sel_rd <= 1'b0;
    end else begin
        if (((outStream_V_user_V_1_ack_out == 1'b1) & (outStream_V_user_V_1_vld_out == 1'b1))) begin
            outStream_V_user_V_1_sel_rd <= ~outStream_V_user_V_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        outStream_V_user_V_1_sel_wr <= 1'b0;
    end else begin
        if (((outStream_V_user_V_1_ack_in == 1'b1) & (outStream_V_user_V_1_vld_in == 1'b1))) begin
            outStream_V_user_V_1_sel_wr <= ~outStream_V_user_V_1_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        outStream_V_user_V_1_state <= 2'd0;
    end else begin
        if ((((outStream_V_user_V_1_state == 2'd2) & (outStream_V_user_V_1_vld_in == 1'b0)) | ((outStream_V_user_V_1_state == 2'd3) & (outStream_V_user_V_1_vld_in == 1'b0) & (outStream_V_user_V_1_ack_out == 1'b1)))) begin
            outStream_V_user_V_1_state <= 2'd2;
        end else if ((((outStream_V_user_V_1_state == 2'd1) & (outStream_TREADY == 1'b0)) | ((outStream_V_user_V_1_state == 2'd3) & (outStream_TREADY == 1'b0) & (outStream_V_user_V_1_vld_in == 1'b1)))) begin
            outStream_V_user_V_1_state <= 2'd1;
        end else if (((~((outStream_V_user_V_1_vld_in == 1'b0) & (outStream_V_user_V_1_ack_out == 1'b1)) & ~((outStream_TREADY == 1'b0) & (outStream_V_user_V_1_vld_in == 1'b1)) & (outStream_V_user_V_1_state == 2'd3)) | ((outStream_V_user_V_1_state == 2'd1) & (outStream_V_user_V_1_ack_out == 1'b1)) | ((outStream_V_user_V_1_state == 2'd2) & (outStream_V_user_V_1_vld_in == 1'b1)))) begin
            outStream_V_user_V_1_state <= 2'd3;
        end else begin
            outStream_V_user_V_1_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln13_fu_1036_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
        col_stride_0_reg_919 <= 2'd0;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln37_reg_4699 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        col_stride_0_reg_919 <= select_ln43_5_reg_4857;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln13_fu_1036_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
        indvar_flatten213_reg_884 <= 12'd0;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln37_reg_4699 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        indvar_flatten213_reg_884 <= select_ln41_7_reg_4933;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln13_fu_1036_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
        indvar_flatten517_reg_861 <= 13'd0;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln37_reg_4699 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        indvar_flatten517_reg_861 <= select_ln39_8_reg_4938;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln13_fu_1036_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
        indvar_flatten913_reg_838 <= 20'd0;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln37_reg_4699 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        indvar_flatten913_reg_838 <= add_ln37_reg_4703;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln13_fu_1036_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
        indvar_flatten_reg_907 <= 5'd0;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln37_reg_4699 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        indvar_flatten_reg_907 <= select_ln43_6_reg_4928;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln13_fu_1036_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
        input_ch_idx_0_reg_930 <= 3'd0;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln37_reg_4699 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        input_ch_idx_0_reg_930 <= input_ch_idx_reg_4923;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln13_fu_1036_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
        out_col_0_reg_896 <= 8'd0;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln37_reg_4699 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        out_col_0_reg_896 <= select_ln41_5_reg_4833;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln13_fu_1036_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
        out_row_0_reg_849 <= 8'd0;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln37_reg_4699 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        out_row_0_reg_849 <= select_ln37_4_reg_4823;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln10_fu_982_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        phi_ln10_reg_750 <= add_ln10_fu_970_p2;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        phi_ln10_reg_750 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln10_fu_982_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        phi_ln11_reg_772 <= 2'd0;
    end else if (((icmp_ln11_fu_1000_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        phi_ln11_reg_772 <= add_ln11_fu_988_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln11_fu_1000_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        phi_ln12_reg_794 <= 2'd0;
    end else if (((icmp_ln12_fu_1018_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        phi_ln12_reg_794 <= add_ln12_fu_1006_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln12_fu_1018_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        phi_ln13_reg_816 <= 2'd0;
    end else if (((icmp_ln13_fu_1036_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        phi_ln13_reg_816 <= add_ln13_fu_1024_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln10_fu_982_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        phi_mul928_reg_783 <= 11'd0;
    end else if (((icmp_ln11_fu_1000_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        phi_mul928_reg_783 <= add_ln627_1_fu_994_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln11_fu_1000_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        phi_mul930_reg_805 <= 11'd0;
    end else if (((icmp_ln12_fu_1018_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        phi_mul930_reg_805 <= add_ln627_2_fu_1012_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln12_fu_1018_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        phi_mul932_reg_827 <= 11'd0;
    end else if (((icmp_ln13_fu_1036_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        phi_mul932_reg_827 <= add_ln627_3_fu_1030_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln10_fu_982_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        phi_mul_reg_761 <= add_ln627_fu_976_p2;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        phi_mul_reg_761 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln13_fu_1036_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
        row_stride_0_reg_873 <= 2'd0;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln37_reg_4699 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        row_stride_0_reg_873 <= select_ln39_6_reg_4828;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln37_reg_4699 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln132_1_reg_4951 <= add_ln132_1_fu_1841_p2;
        line_buff_group_0_va_5_reg_4956 <= sext_ln203_fu_1833_p1;
        line_buff_group_1_va_5_reg_4961 <= sext_ln203_fu_1833_p1;
        line_buff_group_2_va_5_reg_4966 <= sext_ln203_fu_1833_p1;
        line_buff_group_3_va_5_reg_4971 <= sext_ln203_fu_1833_p1;
        sext_ln203_reg_4943 <= sext_ln203_fu_1833_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln37_reg_4699 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        add_ln132_reg_4913 <= add_ln132_fu_1753_p2;
        curr_input_data_sub_1_reg_4892 <= {{inStream_V_data_0_data_out[31:16]}};
        curr_input_data_sub_2_reg_4897 <= {{inStream_V_data_0_data_out[47:32]}};
        curr_input_data_sub_3_reg_4902 <= {{inStream_V_data_0_data_out[63:48]}};
        curr_input_data_sub_s_reg_4887 <= curr_input_data_sub_s_fu_1709_p1;
        mul_ln203_reg_4907 <= mul_ln203_fu_1747_p2;
        select_ln43_1_reg_4843 <= select_ln43_1_fu_1612_p3;
        select_ln43_2_reg_4847 <= select_ln43_2_fu_1620_p3;
        select_ln43_4_reg_4852 <= select_ln43_4_fu_1671_p3;
        select_ln43_reg_4838 <= select_ln43_fu_1548_p3;
        tmp_dest_V_reg_4882 <= inStream_V_dest_V_0_data_out;
        tmp_id_V_reg_4877 <= inStream_V_id_V_0_data_out;
        tmp_keep_V_reg_4862 <= inStream_V_keep_V_0_data_out;
        tmp_strb_V_reg_4867 <= inStream_V_strb_V_0_data_out;
        tmp_user_V_reg_4872 <= inStream_V_user_V_0_data_out;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        add_ln132_reg_4913_pp0_iter1_reg <= add_ln132_reg_4913;
        and_ln93_1_reg_4918_pp0_iter1_reg <= and_ln93_1_reg_4918;
        and_ln93_1_reg_4918_pp0_iter2_reg <= and_ln93_1_reg_4918_pp0_iter1_reg;
        select_ln43_1_reg_4843_pp0_iter1_reg <= select_ln43_1_reg_4843;
        select_ln43_1_reg_4843_pp0_iter2_reg <= select_ln43_1_reg_4843_pp0_iter1_reg;
        select_ln43_reg_4838_pp0_iter1_reg <= select_ln43_reg_4838;
        tmp_dest_V_reg_4882_pp0_iter1_reg <= tmp_dest_V_reg_4882;
        tmp_dest_V_reg_4882_pp0_iter2_reg <= tmp_dest_V_reg_4882_pp0_iter1_reg;
        tmp_id_V_reg_4877_pp0_iter1_reg <= tmp_id_V_reg_4877;
        tmp_id_V_reg_4877_pp0_iter2_reg <= tmp_id_V_reg_4877_pp0_iter1_reg;
        tmp_keep_V_reg_4862_pp0_iter1_reg <= tmp_keep_V_reg_4862;
        tmp_keep_V_reg_4862_pp0_iter2_reg <= tmp_keep_V_reg_4862_pp0_iter1_reg;
        tmp_strb_V_reg_4867_pp0_iter1_reg <= tmp_strb_V_reg_4867;
        tmp_strb_V_reg_4867_pp0_iter2_reg <= tmp_strb_V_reg_4867_pp0_iter1_reg;
        tmp_user_V_reg_4872_pp0_iter1_reg <= tmp_user_V_reg_4872;
        tmp_user_V_reg_4872_pp0_iter2_reg <= tmp_user_V_reg_4872_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        add_ln37_reg_4703 <= add_ln37_fu_1170_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln43_reg_4694 <= add_ln43_fu_1158_p2;
        and_ln79_1_reg_4689 <= and_ln79_1_fu_1148_p2;
        col_idx_reg_4679 <= col_idx_fu_1100_p2;
        conv_count_1_reg_4684 <= conv_count_1_fu_1128_p3;
        icmp_ln37_reg_4699 <= icmp_ln37_fu_1164_p2;
        icmp_ln37_reg_4699_pp0_iter1_reg <= icmp_ln37_reg_4699;
        icmp_ln53_reg_4659 <= icmp_ln53_fu_1070_p2;
        icmp_ln79_reg_4664 <= icmp_ln79_fu_1076_p2;
        icmp_ln93_1_reg_4674 <= icmp_ln93_1_fu_1090_p2;
        icmp_ln93_reg_4654 <= icmp_ln93_fu_1050_p2;
        shl_ln1_reg_4669[8 : 1] <= shl_ln1_fu_1082_p3[8 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln37_fu_1164_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        and_ln37_5_reg_4742 <= and_ln37_5_fu_1242_p2;
        and_ln39_3_reg_4781 <= and_ln39_3_fu_1300_p2;
        col_stride_reg_4817 <= col_stride_fu_1338_p2;
        icmp_ln39_reg_4715 <= icmp_ln39_fu_1182_p2;
        icmp_ln45_reg_4737 <= icmp_ln45_fu_1218_p2;
        icmp_ln53_3_reg_4769 <= icmp_ln53_3_fu_1282_p2;
        or_ln39_1_reg_4774 <= or_ln39_1_fu_1294_p2;
        or_ln39_reg_4754 <= or_ln39_fu_1254_p2;
        or_ln41_1_reg_4800 <= or_ln41_1_fu_1318_p2;
        out_col_reg_4792 <= out_col_fu_1306_p2;
        out_row_reg_4708 <= out_row_fu_1176_p2;
        row_stride_reg_4749 <= row_stride_fu_1248_p2;
        select_ln37_reg_4723 <= select_ln37_fu_1188_p3;
        select_ln39_reg_4764 <= select_ln39_fu_1260_p3;
        select_ln41_reg_4805 <= select_ln41_fu_1324_p3;
        xor_ln37_reg_4729 <= xor_ln37_fu_1212_p2;
        xor_ln41_reg_4811 <= xor_ln41_fu_1332_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln43_1_fu_1612_p3 == 1'd1) & (icmp_ln37_reg_4699 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        and_ln93_1_reg_4918 <= and_ln93_1_fu_1771_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln43_1_reg_4843_pp0_iter1_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        icmp_ln203_1_reg_5105 <= icmp_ln203_1_fu_1981_p2;
        icmp_ln203_2_reg_5142 <= icmp_ln203_2_fu_1995_p2;
        icmp_ln203_reg_5079 <= icmp_ln203_fu_1967_p2;
        tmp_12_reg_5250 <= tmp_12_fu_2645_p6;
        tmp_13_reg_5256 <= tmp_13_fu_2659_p6;
        tmp_1_reg_5214 <= tmp_1_fu_2561_p6;
        tmp_2_reg_5220 <= tmp_2_fu_2575_p6;
        tmp_5_reg_5226 <= tmp_5_fu_2589_p6;
        tmp_6_reg_5232 <= tmp_6_fu_2603_p6;
        tmp_9_reg_5238 <= tmp_9_fu_2617_p6;
        tmp_s_reg_5244 <= tmp_s_fu_2631_p6;
        trunc_ln203_reg_5064 <= trunc_ln203_fu_1964_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((inStream_V_data_0_load_A == 1'b1)) begin
        inStream_V_data_0_payload_A <= inStream_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((inStream_V_data_0_load_B == 1'b1)) begin
        inStream_V_data_0_payload_B <= inStream_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((inStream_V_dest_V_0_load_A == 1'b1)) begin
        inStream_V_dest_V_0_payload_A <= inStream_TDEST;
    end
end

always @ (posedge ap_clk) begin
    if ((inStream_V_dest_V_0_load_B == 1'b1)) begin
        inStream_V_dest_V_0_payload_B <= inStream_TDEST;
    end
end

always @ (posedge ap_clk) begin
    if ((inStream_V_id_V_0_load_A == 1'b1)) begin
        inStream_V_id_V_0_payload_A <= inStream_TID;
    end
end

always @ (posedge ap_clk) begin
    if ((inStream_V_id_V_0_load_B == 1'b1)) begin
        inStream_V_id_V_0_payload_B <= inStream_TID;
    end
end

always @ (posedge ap_clk) begin
    if ((inStream_V_keep_V_0_load_A == 1'b1)) begin
        inStream_V_keep_V_0_payload_A <= inStream_TKEEP;
    end
end

always @ (posedge ap_clk) begin
    if ((inStream_V_keep_V_0_load_B == 1'b1)) begin
        inStream_V_keep_V_0_payload_B <= inStream_TKEEP;
    end
end

always @ (posedge ap_clk) begin
    if ((inStream_V_strb_V_0_load_A == 1'b1)) begin
        inStream_V_strb_V_0_payload_A <= inStream_TSTRB;
    end
end

always @ (posedge ap_clk) begin
    if ((inStream_V_strb_V_0_load_B == 1'b1)) begin
        inStream_V_strb_V_0_payload_B <= inStream_TSTRB;
    end
end

always @ (posedge ap_clk) begin
    if ((inStream_V_user_V_0_load_A == 1'b1)) begin
        inStream_V_user_V_0_payload_A <= inStream_TUSER;
    end
end

always @ (posedge ap_clk) begin
    if ((inStream_V_user_V_0_load_B == 1'b1)) begin
        inStream_V_user_V_0_payload_B <= inStream_TUSER;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln37_reg_4699 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        input_ch_idx_reg_4923 <= input_ch_idx_fu_1777_p2;
        select_ln37_4_reg_4823 <= select_ln37_4_fu_1382_p3;
        select_ln39_6_reg_4828 <= select_ln39_6_fu_1439_p3;
        select_ln39_8_reg_4938 <= select_ln39_8_fu_1815_p3;
        select_ln41_5_reg_4833 <= select_ln41_5_fu_1533_p3;
        select_ln41_7_reg_4933 <= select_ln41_7_fu_1802_p3;
        select_ln43_5_reg_4857 <= select_ln43_5_fu_1679_p3;
        select_ln43_6_reg_4928 <= select_ln43_6_fu_1789_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln37_reg_4699_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        line_buff_group_0_va_7_reg_4991 <= sext_ln132_1_fu_1857_p1;
        line_buff_group_1_va_7_reg_5011 <= sext_ln132_1_fu_1857_p1;
        line_buff_group_2_va_7_reg_5031 <= sext_ln132_1_fu_1857_p1;
        line_buff_group_3_va_7_reg_5051 <= sext_ln132_1_fu_1857_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((outStream_V_data_1_load_A == 1'b1)) begin
        outStream_V_data_1_payload_A <= call_ln104_write_output_fu_942_outStream_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((outStream_V_data_1_load_B == 1'b1)) begin
        outStream_V_data_1_payload_B <= call_ln104_write_output_fu_942_outStream_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((outStream_V_dest_V_1_load_A == 1'b1)) begin
        outStream_V_dest_V_1_payload_A <= call_ln104_write_output_fu_942_outStream_TDEST;
    end
end

always @ (posedge ap_clk) begin
    if ((outStream_V_dest_V_1_load_B == 1'b1)) begin
        outStream_V_dest_V_1_payload_B <= call_ln104_write_output_fu_942_outStream_TDEST;
    end
end

always @ (posedge ap_clk) begin
    if ((outStream_V_id_V_1_load_A == 1'b1)) begin
        outStream_V_id_V_1_payload_A <= call_ln104_write_output_fu_942_outStream_TID;
    end
end

always @ (posedge ap_clk) begin
    if ((outStream_V_id_V_1_load_B == 1'b1)) begin
        outStream_V_id_V_1_payload_B <= call_ln104_write_output_fu_942_outStream_TID;
    end
end

always @ (posedge ap_clk) begin
    if ((outStream_V_keep_V_1_load_A == 1'b1)) begin
        outStream_V_keep_V_1_payload_A <= call_ln104_write_output_fu_942_outStream_TKEEP;
    end
end

always @ (posedge ap_clk) begin
    if ((outStream_V_keep_V_1_load_B == 1'b1)) begin
        outStream_V_keep_V_1_payload_B <= call_ln104_write_output_fu_942_outStream_TKEEP;
    end
end

always @ (posedge ap_clk) begin
    if ((outStream_V_last_V_1_load_A == 1'b1)) begin
        outStream_V_last_V_1_payload_A <= call_ln104_write_output_fu_942_outStream_TLAST;
    end
end

always @ (posedge ap_clk) begin
    if ((outStream_V_last_V_1_load_B == 1'b1)) begin
        outStream_V_last_V_1_payload_B <= call_ln104_write_output_fu_942_outStream_TLAST;
    end
end

always @ (posedge ap_clk) begin
    if ((outStream_V_strb_V_1_load_A == 1'b1)) begin
        outStream_V_strb_V_1_payload_A <= call_ln104_write_output_fu_942_outStream_TSTRB;
    end
end

always @ (posedge ap_clk) begin
    if ((outStream_V_strb_V_1_load_B == 1'b1)) begin
        outStream_V_strb_V_1_payload_B <= call_ln104_write_output_fu_942_outStream_TSTRB;
    end
end

always @ (posedge ap_clk) begin
    if ((outStream_V_user_V_1_load_A == 1'b1)) begin
        outStream_V_user_V_1_payload_A <= call_ln104_write_output_fu_942_outStream_TUSER;
    end
end

always @ (posedge ap_clk) begin
    if ((outStream_V_user_V_1_load_B == 1'b1)) begin
        outStream_V_user_V_1_payload_B <= call_ln104_write_output_fu_942_outStream_TUSER;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (select_ln43_1_reg_4843_pp0_iter2_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        select_ln148_10_reg_5298 <= select_ln148_10_fu_3596_p3;
        select_ln148_1_reg_5262 <= select_ln148_1_fu_3446_p3;
        select_ln148_4_reg_5274 <= select_ln148_4_fu_3496_p3;
        select_ln148_7_reg_5286 <= select_ln148_7_fu_3546_p3;
        tmp_11_reg_5292 <= tmp_11_fu_3554_p6;
        tmp_15_reg_5304 <= tmp_15_fu_3604_p6;
        tmp_4_reg_5268 <= tmp_4_fu_3454_p6;
        tmp_8_reg_5280 <= tmp_8_fu_3504_p6;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln43_1_reg_4843_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        val_output_0_3_V_1_fu_444 <= val_output_0_3_V_21_fu_3879_p3;
        val_output_0_3_V_4_fu_456 <= val_output_0_3_V_15_fu_3837_p3;
        val_output_0_3_V_6_fu_448 <= val_output_0_3_V_20_fu_3872_p3;
        val_output_0_3_V_9_fu_452 <= val_output_0_3_V_18_fu_3858_p3;
        val_output_1_3_V_1_fu_460 <= val_output_1_3_V_21_fu_3952_p3;
        val_output_1_3_V_4_fu_472 <= val_output_1_3_V_15_fu_3910_p3;
        val_output_1_3_V_6_fu_464 <= val_output_1_3_V_20_fu_3945_p3;
        val_output_1_3_V_9_fu_468 <= val_output_1_3_V_18_fu_3931_p3;
        val_output_2_3_V_1_fu_476 <= val_output_2_3_V_21_fu_4025_p3;
        val_output_2_3_V_4_fu_488 <= val_output_2_3_V_15_fu_3983_p3;
        val_output_2_3_V_6_fu_480 <= val_output_2_3_V_20_fu_4018_p3;
        val_output_2_3_V_9_fu_484 <= val_output_2_3_V_18_fu_4004_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln43_1_reg_4843_pp0_iter1_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        window_group_0_2_va_2_reg_5056 <= line_buff_group_0_va_1_q1;
        window_group_0_3_va_12_fu_236 <= window_group_0_3_va_34_fu_2001_p3;
        window_group_0_3_va_13_fu_240 <= window_group_0_3_va_43_fu_2073_p3;
        window_group_0_3_va_1_fu_192 <= window_group_0_3_va_49_fu_2121_p3;
        window_group_0_3_va_4_fu_204 <= window_group_0_3_va_39_fu_2041_p3;
        window_group_0_3_va_5_fu_208 <= window_group_0_3_va_48_fu_2113_p3;
        window_group_0_3_va_8_fu_220 <= window_group_0_3_va_37_fu_2025_p3;
        window_group_0_3_va_9_fu_224 <= window_group_0_3_va_46_fu_2097_p3;
        window_group_0_3_va_fu_188 <= window_group_0_3_va_40_fu_2049_p3;
        window_group_1_2_va_2_reg_5190 <= line_buff_group_1_va_1_q1;
        window_group_1_3_va_12_fu_300 <= window_group_1_3_va_34_fu_2145_p3;
        window_group_1_3_va_13_fu_304 <= window_group_1_3_va_43_fu_2217_p3;
        window_group_1_3_va_1_fu_256 <= window_group_1_3_va_49_fu_2265_p3;
        window_group_1_3_va_4_fu_268 <= window_group_1_3_va_39_fu_2185_p3;
        window_group_1_3_va_5_fu_272 <= window_group_1_3_va_48_fu_2257_p3;
        window_group_1_3_va_8_fu_284 <= window_group_1_3_va_37_fu_2169_p3;
        window_group_1_3_va_9_fu_288 <= window_group_1_3_va_46_fu_2241_p3;
        window_group_1_3_va_fu_252 <= window_group_1_3_va_40_fu_2193_p3;
        window_group_2_2_va_2_reg_5198 <= line_buff_group_2_va_1_q1;
        window_group_2_3_va_12_fu_364 <= window_group_2_3_va_34_fu_2289_p3;
        window_group_2_3_va_13_fu_368 <= window_group_2_3_va_43_fu_2361_p3;
        window_group_2_3_va_1_fu_320 <= window_group_2_3_va_49_fu_2409_p3;
        window_group_2_3_va_4_fu_332 <= window_group_2_3_va_39_fu_2329_p3;
        window_group_2_3_va_5_fu_336 <= window_group_2_3_va_48_fu_2401_p3;
        window_group_2_3_va_8_fu_348 <= window_group_2_3_va_37_fu_2313_p3;
        window_group_2_3_va_9_fu_352 <= window_group_2_3_va_46_fu_2385_p3;
        window_group_2_3_va_fu_316 <= window_group_2_3_va_40_fu_2337_p3;
        window_group_3_2_va_2_reg_5206 <= line_buff_group_3_va_1_q1;
        window_group_3_3_va_12_fu_428 <= window_group_3_3_va_34_fu_2433_p3;
        window_group_3_3_va_13_fu_432 <= window_group_3_3_va_43_fu_2505_p3;
        window_group_3_3_va_1_fu_384 <= window_group_3_3_va_49_fu_2553_p3;
        window_group_3_3_va_4_fu_396 <= window_group_3_3_va_39_fu_2473_p3;
        window_group_3_3_va_5_fu_400 <= window_group_3_3_va_48_fu_2545_p3;
        window_group_3_3_va_8_fu_412 <= window_group_3_3_va_37_fu_2457_p3;
        window_group_3_3_va_9_fu_416 <= window_group_3_3_va_46_fu_2529_p3;
        window_group_3_3_va_fu_380 <= window_group_3_3_va_40_fu_2481_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (select_ln43_1_reg_4843_pp0_iter2_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        window_group_0_3_va_10_fu_228 <= window_group_0_3_va_55_fu_2962_p3;
        window_group_0_3_va_11_fu_232 <= window_group_0_3_va_64_fu_3023_p3;
        window_group_0_3_va_14_fu_244 <= window_group_0_3_va_52_fu_2942_p3;
        window_group_0_3_va_15_fu_248 <= window_group_0_3_va_61_fu_3002_p3;
        window_group_0_3_va_2_fu_196 <= window_group_0_3_va_58_fu_2982_p3;
        window_group_0_3_va_3_fu_200 <= window_group_0_3_va_67_fu_3044_p3;
        window_group_0_3_va_6_fu_212 <= window_group_0_3_va_57_fu_2975_p3;
        window_group_0_3_va_7_fu_216 <= window_group_0_3_va_66_fu_3037_p3;
        window_group_1_3_va_10_fu_292 <= window_group_1_3_va_55_fu_3084_p3;
        window_group_1_3_va_11_fu_296 <= window_group_1_3_va_64_fu_3145_p3;
        window_group_1_3_va_14_fu_308 <= window_group_1_3_va_52_fu_3064_p3;
        window_group_1_3_va_15_fu_312 <= window_group_1_3_va_61_fu_3124_p3;
        window_group_1_3_va_2_fu_260 <= window_group_1_3_va_58_fu_3104_p3;
        window_group_1_3_va_3_fu_264 <= window_group_1_3_va_67_fu_3166_p3;
        window_group_1_3_va_6_fu_276 <= window_group_1_3_va_57_fu_3097_p3;
        window_group_1_3_va_7_fu_280 <= window_group_1_3_va_66_fu_3159_p3;
        window_group_2_3_va_10_fu_356 <= window_group_2_3_va_55_fu_3206_p3;
        window_group_2_3_va_11_fu_360 <= window_group_2_3_va_64_fu_3267_p3;
        window_group_2_3_va_14_fu_372 <= window_group_2_3_va_52_fu_3186_p3;
        window_group_2_3_va_15_fu_376 <= window_group_2_3_va_61_fu_3246_p3;
        window_group_2_3_va_2_fu_324 <= window_group_2_3_va_58_fu_3226_p3;
        window_group_2_3_va_3_fu_328 <= window_group_2_3_va_67_fu_3288_p3;
        window_group_2_3_va_6_fu_340 <= window_group_2_3_va_57_fu_3219_p3;
        window_group_2_3_va_7_fu_344 <= window_group_2_3_va_66_fu_3281_p3;
        window_group_3_3_va_10_fu_420 <= window_group_3_3_va_55_fu_3328_p3;
        window_group_3_3_va_11_fu_424 <= window_group_3_3_va_64_fu_3389_p3;
        window_group_3_3_va_14_fu_436 <= window_group_3_3_va_52_fu_3308_p3;
        window_group_3_3_va_15_fu_440 <= window_group_3_3_va_61_fu_3368_p3;
        window_group_3_3_va_2_fu_388 <= window_group_3_3_va_58_fu_3348_p3;
        window_group_3_3_va_3_fu_392 <= window_group_3_3_va_67_fu_3410_p3;
        window_group_3_3_va_6_fu_404 <= window_group_3_3_va_57_fu_3341_p3;
        window_group_3_3_va_7_fu_408 <= window_group_3_3_va_66_fu_3403_p3;
    end
end

always @ (*) begin
    if ((icmp_ln37_fu_1164_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state6 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state6 = 1'b0;
    end
end

always @ (*) begin
    if ((~((outStream_V_dest_V_1_state == 2'd1) | (outStream_V_id_V_1_state == 2'd1) | (outStream_V_last_V_1_state == 2'd1) | (outStream_V_user_V_1_state == 2'd1) | (outStream_V_strb_V_1_state == 2'd1) | (outStream_V_keep_V_1_state == 2'd1) | (outStream_V_data_1_state == 2'd1) | ((outStream_V_dest_V_1_state == 2'd3) & (outStream_TREADY == 1'b0)) | ((outStream_V_id_V_1_state == 2'd3) & (outStream_TREADY == 1'b0)) | ((outStream_V_last_V_1_state == 2'd3) & (outStream_TREADY == 1'b0)) | ((outStream_V_user_V_1_state == 2'd3) & (outStream_TREADY == 1'b0)) | ((outStream_V_strb_V_1_state == 2'd3) & (outStream_TREADY == 1'b0)) | ((outStream_V_keep_V_1_state == 2'd3) & (outStream_TREADY == 1'b0)) | ((outStream_V_data_1_state == 2'd3) & (outStream_TREADY == 1'b0))) & (1'b1 == ap_CS_fsm_state14))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln37_reg_4699 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_col_stride_0_phi_fu_923_p4 = select_ln43_5_reg_4857;
    end else begin
        ap_phi_mux_col_stride_0_phi_fu_923_p4 = col_stride_0_reg_919;
    end
end

always @ (*) begin
    if (((icmp_ln37_reg_4699 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_indvar_flatten213_phi_fu_888_p4 = select_ln41_7_reg_4933;
    end else begin
        ap_phi_mux_indvar_flatten213_phi_fu_888_p4 = indvar_flatten213_reg_884;
    end
end

always @ (*) begin
    if (((icmp_ln37_reg_4699 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_indvar_flatten517_phi_fu_865_p4 = select_ln39_8_reg_4938;
    end else begin
        ap_phi_mux_indvar_flatten517_phi_fu_865_p4 = indvar_flatten517_reg_861;
    end
end

always @ (*) begin
    if (((icmp_ln37_reg_4699 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_indvar_flatten913_phi_fu_842_p4 = add_ln37_reg_4703;
    end else begin
        ap_phi_mux_indvar_flatten913_phi_fu_842_p4 = indvar_flatten913_reg_838;
    end
end

always @ (*) begin
    if (((icmp_ln37_reg_4699 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_indvar_flatten_phi_fu_911_p4 = select_ln43_6_reg_4928;
    end else begin
        ap_phi_mux_indvar_flatten_phi_fu_911_p4 = indvar_flatten_reg_907;
    end
end

always @ (*) begin
    if (((icmp_ln37_reg_4699 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_input_ch_idx_0_phi_fu_934_p4 = input_ch_idx_reg_4923;
    end else begin
        ap_phi_mux_input_ch_idx_0_phi_fu_934_p4 = input_ch_idx_0_reg_930;
    end
end

always @ (*) begin
    if (((icmp_ln37_reg_4699 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_out_col_0_phi_fu_900_p4 = select_ln41_5_reg_4833;
    end else begin
        ap_phi_mux_out_col_0_phi_fu_900_p4 = out_col_0_reg_896;
    end
end

always @ (*) begin
    if (((icmp_ln37_reg_4699 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_out_row_0_phi_fu_853_p4 = select_ln37_4_reg_4823;
    end else begin
        ap_phi_mux_out_row_0_phi_fu_853_p4 = out_row_0_reg_849;
    end
end

always @ (*) begin
    if (((icmp_ln37_reg_4699 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_row_stride_0_phi_fu_877_p4 = select_ln39_6_reg_4828;
    end else begin
        ap_phi_mux_row_stride_0_phi_fu_877_p4 = row_stride_0_reg_873;
    end
end

always @ (*) begin
    if ((~((outStream_V_dest_V_1_state == 2'd1) | (outStream_V_id_V_1_state == 2'd1) | (outStream_V_last_V_1_state == 2'd1) | (outStream_V_user_V_1_state == 2'd1) | (outStream_V_strb_V_1_state == 2'd1) | (outStream_V_keep_V_1_state == 2'd1) | (outStream_V_data_1_state == 2'd1) | ((outStream_V_dest_V_1_state == 2'd3) & (outStream_TREADY == 1'b0)) | ((outStream_V_id_V_1_state == 2'd3) & (outStream_TREADY == 1'b0)) | ((outStream_V_last_V_1_state == 2'd3) & (outStream_TREADY == 1'b0)) | ((outStream_V_user_V_1_state == 2'd3) & (outStream_TREADY == 1'b0)) | ((outStream_V_strb_V_1_state == 2'd3) & (outStream_TREADY == 1'b0)) | ((outStream_V_keep_V_1_state == 2'd3) & (outStream_TREADY == 1'b0)) | ((outStream_V_data_1_state == 2'd3) & (outStream_TREADY == 1'b0))) & (1'b1 == ap_CS_fsm_state14))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001_ignoreCallOp745))) begin
        call_ln104_write_output_fu_942_ap_ce = 1'b1;
    end else begin
        call_ln104_write_output_fu_942_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (icmp_ln37_reg_4699 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        inStream_TDATA_blk_n = inStream_V_data_0_state[1'd0];
    end else begin
        inStream_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln37_reg_4699 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        inStream_V_data_0_ack_out = 1'b1;
    end else begin
        inStream_V_data_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if ((inStream_V_data_0_sel == 1'b1)) begin
        inStream_V_data_0_data_out = inStream_V_data_0_payload_B;
    end else begin
        inStream_V_data_0_data_out = inStream_V_data_0_payload_A;
    end
end

always @ (*) begin
    if (((icmp_ln37_reg_4699 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        inStream_V_dest_V_0_ack_out = 1'b1;
    end else begin
        inStream_V_dest_V_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if ((inStream_V_dest_V_0_sel == 1'b1)) begin
        inStream_V_dest_V_0_data_out = inStream_V_dest_V_0_payload_B;
    end else begin
        inStream_V_dest_V_0_data_out = inStream_V_dest_V_0_payload_A;
    end
end

always @ (*) begin
    if (((icmp_ln37_reg_4699 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        inStream_V_id_V_0_ack_out = 1'b1;
    end else begin
        inStream_V_id_V_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if ((inStream_V_id_V_0_sel == 1'b1)) begin
        inStream_V_id_V_0_data_out = inStream_V_id_V_0_payload_B;
    end else begin
        inStream_V_id_V_0_data_out = inStream_V_id_V_0_payload_A;
    end
end

always @ (*) begin
    if (((icmp_ln37_reg_4699 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        inStream_V_keep_V_0_ack_out = 1'b1;
    end else begin
        inStream_V_keep_V_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if ((inStream_V_keep_V_0_sel == 1'b1)) begin
        inStream_V_keep_V_0_data_out = inStream_V_keep_V_0_payload_B;
    end else begin
        inStream_V_keep_V_0_data_out = inStream_V_keep_V_0_payload_A;
    end
end

always @ (*) begin
    if (((icmp_ln37_reg_4699 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        inStream_V_strb_V_0_ack_out = 1'b1;
    end else begin
        inStream_V_strb_V_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if ((inStream_V_strb_V_0_sel == 1'b1)) begin
        inStream_V_strb_V_0_data_out = inStream_V_strb_V_0_payload_B;
    end else begin
        inStream_V_strb_V_0_data_out = inStream_V_strb_V_0_payload_A;
    end
end

always @ (*) begin
    if (((icmp_ln37_reg_4699 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        inStream_V_user_V_0_ack_out = 1'b1;
    end else begin
        inStream_V_user_V_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if ((inStream_V_user_V_0_sel == 1'b1)) begin
        inStream_V_user_V_0_data_out = inStream_V_user_V_0_payload_B;
    end else begin
        inStream_V_user_V_0_data_out = inStream_V_user_V_0_payload_A;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            line_buff_group_0_va_1_address0 = line_buff_group_0_va_5_reg_4956;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
            line_buff_group_0_va_1_address0 = sext_ln203_fu_1833_p1;
        end else begin
            line_buff_group_0_va_1_address0 = 'bx;
        end
    end else begin
        line_buff_group_0_va_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            line_buff_group_0_va_1_address1 = line_buff_group_0_va_7_reg_4991;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
            line_buff_group_0_va_1_address1 = sext_ln132_fu_1846_p1;
        end else begin
            line_buff_group_0_va_1_address1 = 'bx;
        end
    end else begin
        line_buff_group_0_va_1_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        line_buff_group_0_va_1_ce0 = 1'b1;
    end else begin
        line_buff_group_0_va_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        line_buff_group_0_va_1_ce1 = 1'b1;
    end else begin
        line_buff_group_0_va_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln37_reg_4699_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        line_buff_group_0_va_1_we0 = 1'b1;
    end else begin
        line_buff_group_0_va_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        line_buff_group_0_va_address0 = sext_ln132_fu_1846_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        line_buff_group_0_va_address0 = sext_ln203_reg_4943;
    end else begin
        line_buff_group_0_va_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        line_buff_group_0_va_ce0 = 1'b1;
    end else begin
        line_buff_group_0_va_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        line_buff_group_0_va_ce1 = 1'b1;
    end else begin
        line_buff_group_0_va_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln37_reg_4699_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        line_buff_group_0_va_we0 = 1'b1;
    end else begin
        line_buff_group_0_va_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            line_buff_group_1_va_1_address0 = line_buff_group_1_va_5_reg_4961;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
            line_buff_group_1_va_1_address0 = sext_ln203_fu_1833_p1;
        end else begin
            line_buff_group_1_va_1_address0 = 'bx;
        end
    end else begin
        line_buff_group_1_va_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            line_buff_group_1_va_1_address1 = line_buff_group_1_va_7_reg_5011;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
            line_buff_group_1_va_1_address1 = sext_ln132_fu_1846_p1;
        end else begin
            line_buff_group_1_va_1_address1 = 'bx;
        end
    end else begin
        line_buff_group_1_va_1_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        line_buff_group_1_va_1_ce0 = 1'b1;
    end else begin
        line_buff_group_1_va_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        line_buff_group_1_va_1_ce1 = 1'b1;
    end else begin
        line_buff_group_1_va_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln37_reg_4699_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        line_buff_group_1_va_1_we0 = 1'b1;
    end else begin
        line_buff_group_1_va_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        line_buff_group_1_va_address0 = sext_ln132_fu_1846_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        line_buff_group_1_va_address0 = sext_ln203_reg_4943;
    end else begin
        line_buff_group_1_va_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        line_buff_group_1_va_ce0 = 1'b1;
    end else begin
        line_buff_group_1_va_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        line_buff_group_1_va_ce1 = 1'b1;
    end else begin
        line_buff_group_1_va_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln37_reg_4699_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        line_buff_group_1_va_we0 = 1'b1;
    end else begin
        line_buff_group_1_va_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            line_buff_group_2_va_1_address0 = line_buff_group_2_va_5_reg_4966;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
            line_buff_group_2_va_1_address0 = sext_ln203_fu_1833_p1;
        end else begin
            line_buff_group_2_va_1_address0 = 'bx;
        end
    end else begin
        line_buff_group_2_va_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            line_buff_group_2_va_1_address1 = line_buff_group_2_va_7_reg_5031;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
            line_buff_group_2_va_1_address1 = sext_ln132_fu_1846_p1;
        end else begin
            line_buff_group_2_va_1_address1 = 'bx;
        end
    end else begin
        line_buff_group_2_va_1_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        line_buff_group_2_va_1_ce0 = 1'b1;
    end else begin
        line_buff_group_2_va_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        line_buff_group_2_va_1_ce1 = 1'b1;
    end else begin
        line_buff_group_2_va_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln37_reg_4699_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        line_buff_group_2_va_1_we0 = 1'b1;
    end else begin
        line_buff_group_2_va_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        line_buff_group_2_va_address0 = sext_ln132_fu_1846_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        line_buff_group_2_va_address0 = sext_ln203_reg_4943;
    end else begin
        line_buff_group_2_va_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        line_buff_group_2_va_ce0 = 1'b1;
    end else begin
        line_buff_group_2_va_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        line_buff_group_2_va_ce1 = 1'b1;
    end else begin
        line_buff_group_2_va_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln37_reg_4699_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        line_buff_group_2_va_we0 = 1'b1;
    end else begin
        line_buff_group_2_va_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            line_buff_group_3_va_1_address0 = line_buff_group_3_va_5_reg_4971;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
            line_buff_group_3_va_1_address0 = sext_ln203_fu_1833_p1;
        end else begin
            line_buff_group_3_va_1_address0 = 'bx;
        end
    end else begin
        line_buff_group_3_va_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            line_buff_group_3_va_1_address1 = line_buff_group_3_va_7_reg_5051;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
            line_buff_group_3_va_1_address1 = sext_ln132_fu_1846_p1;
        end else begin
            line_buff_group_3_va_1_address1 = 'bx;
        end
    end else begin
        line_buff_group_3_va_1_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        line_buff_group_3_va_1_ce0 = 1'b1;
    end else begin
        line_buff_group_3_va_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        line_buff_group_3_va_1_ce1 = 1'b1;
    end else begin
        line_buff_group_3_va_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln37_reg_4699_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        line_buff_group_3_va_1_we0 = 1'b1;
    end else begin
        line_buff_group_3_va_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        line_buff_group_3_va_address0 = sext_ln132_fu_1846_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        line_buff_group_3_va_address0 = sext_ln203_reg_4943;
    end else begin
        line_buff_group_3_va_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        line_buff_group_3_va_ce0 = 1'b1;
    end else begin
        line_buff_group_3_va_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        line_buff_group_3_va_ce1 = 1'b1;
    end else begin
        line_buff_group_3_va_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln37_reg_4699_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        line_buff_group_3_va_we0 = 1'b1;
    end else begin
        line_buff_group_3_va_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (select_ln43_1_reg_4843_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        outStream_TDATA_blk_n = call_ln104_write_output_fu_942_outStream_TDATA_blk_n;
    end else begin
        outStream_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((outStream_V_data_1_sel == 1'b1)) begin
        outStream_V_data_1_data_out = outStream_V_data_1_payload_B;
    end else begin
        outStream_V_data_1_data_out = outStream_V_data_1_payload_A;
    end
end

always @ (*) begin
    if ((outStream_V_dest_V_1_sel == 1'b1)) begin
        outStream_V_dest_V_1_data_out = outStream_V_dest_V_1_payload_B;
    end else begin
        outStream_V_dest_V_1_data_out = outStream_V_dest_V_1_payload_A;
    end
end

always @ (*) begin
    if ((outStream_V_id_V_1_sel == 1'b1)) begin
        outStream_V_id_V_1_data_out = outStream_V_id_V_1_payload_B;
    end else begin
        outStream_V_id_V_1_data_out = outStream_V_id_V_1_payload_A;
    end
end

always @ (*) begin
    if ((outStream_V_keep_V_1_sel == 1'b1)) begin
        outStream_V_keep_V_1_data_out = outStream_V_keep_V_1_payload_B;
    end else begin
        outStream_V_keep_V_1_data_out = outStream_V_keep_V_1_payload_A;
    end
end

always @ (*) begin
    if ((outStream_V_last_V_1_sel == 1'b1)) begin
        outStream_V_last_V_1_data_out = outStream_V_last_V_1_payload_B;
    end else begin
        outStream_V_last_V_1_data_out = outStream_V_last_V_1_payload_A;
    end
end

always @ (*) begin
    if ((outStream_V_strb_V_1_sel == 1'b1)) begin
        outStream_V_strb_V_1_data_out = outStream_V_strb_V_1_payload_B;
    end else begin
        outStream_V_strb_V_1_data_out = outStream_V_strb_V_1_payload_A;
    end
end

always @ (*) begin
    if ((outStream_V_user_V_1_sel == 1'b1)) begin
        outStream_V_user_V_1_data_out = outStream_V_user_V_1_payload_B;
    end else begin
        outStream_V_user_V_1_data_out = outStream_V_user_V_1_payload_A;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln10_fu_982_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((icmp_ln11_fu_1000_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((icmp_ln12_fu_1018_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            if (((icmp_ln13_fu_1036_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((icmp_ln37_fu_1164_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if (((icmp_ln37_fu_1164_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((~((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter2 == 1'b0)) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter2 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_state14 : begin
            if ((~((outStream_V_dest_V_1_state == 2'd1) | (outStream_V_id_V_1_state == 2'd1) | (outStream_V_last_V_1_state == 2'd1) | (outStream_V_user_V_1_state == 2'd1) | (outStream_V_strb_V_1_state == 2'd1) | (outStream_V_keep_V_1_state == 2'd1) | (outStream_V_data_1_state == 2'd1) | ((outStream_V_dest_V_1_state == 2'd3) & (outStream_TREADY == 1'b0)) | ((outStream_V_id_V_1_state == 2'd3) & (outStream_TREADY == 1'b0)) | ((outStream_V_last_V_1_state == 2'd3) & (outStream_TREADY == 1'b0)) | ((outStream_V_user_V_1_state == 2'd3) & (outStream_TREADY == 1'b0)) | ((outStream_V_strb_V_1_state == 2'd3) & (outStream_TREADY == 1'b0)) | ((outStream_V_keep_V_1_state == 2'd3) & (outStream_TREADY == 1'b0)) | ((outStream_V_data_1_state == 2'd3) & (outStream_TREADY == 1'b0))) & (1'b1 == ap_CS_fsm_state14))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln10_fu_970_p2 = (phi_ln10_reg_750 + 2'd1);

assign add_ln11_fu_988_p2 = (phi_ln11_reg_772 + 2'd1);

assign add_ln12_fu_1006_p2 = (phi_ln12_reg_794 + 2'd1);

assign add_ln132_1_fu_1841_p2 = (mul_ln203_reg_4907 + zext_ln43_3_fu_1825_p1);

assign add_ln132_fu_1753_p2 = (mul_ln203_fu_1747_p2 + select_ln43_3_fu_1653_p3);

assign add_ln13_fu_1024_p2 = (phi_ln13_reg_816 + 2'd1);

assign add_ln203_fu_1828_p2 = (mul_ln203_reg_4907 + zext_ln43_2_fu_1822_p1);

assign add_ln37_fu_1170_p2 = (20'd1 + ap_phi_mux_indvar_flatten913_phi_fu_842_p4);

assign add_ln39_1_fu_1809_p2 = (indvar_flatten517_reg_861 + 13'd1);

assign add_ln41_1_fu_1796_p2 = (indvar_flatten213_reg_884 + 12'd1);

assign add_ln41_2_fu_1515_p2 = (9'd1 + trunc_ln132_1_fu_1511_p1);

assign add_ln43_1_fu_1783_p2 = (indvar_flatten_reg_907 + 5'd1);

assign add_ln43_3_fu_1665_p2 = (9'd1 + trunc_ln132_2_fu_1661_p1);

assign add_ln43_fu_1158_p2 = (9'd1 + trunc_ln132_fu_1154_p1);

assign add_ln50_1_fu_1559_p2 = (zext_ln43_1_fu_1556_p1 + select_ln41_1_fu_1451_p3);

assign add_ln54_1_fu_1485_p2 = ($signed(10'd1023) + $signed(zext_ln50_1_fu_1470_p1));

assign add_ln54_2_fu_1581_p2 = ($signed(10'd1023) + $signed(zext_ln50_2_fu_1565_p1));

assign add_ln627_1_fu_994_p2 = (phi_mul928_reg_783 + 11'd418);

assign add_ln627_2_fu_1012_p2 = (phi_mul930_reg_805 + 11'd418);

assign add_ln627_3_fu_1030_p2 = (phi_mul932_reg_827 + 11'd418);

assign add_ln627_fu_976_p2 = (phi_mul_reg_761 + 11'd418);

assign and_ln37_1_fu_1370_p2 = (xor_ln37_reg_4729 & icmp_ln93_1_reg_4674);

assign and_ln37_2_fu_1374_p2 = (xor_ln37_reg_4729 & and_ln79_1_reg_4689);

assign and_ln37_3_fu_1378_p2 = (xor_ln37_reg_4729 & icmp_ln45_reg_4737);

assign and_ln37_4_fu_1230_p2 = (xor_ln37_fu_1212_p2 & icmp_ln43_fu_1224_p2);

assign and_ln37_5_fu_1242_p2 = (xor_ln37_fu_1212_p2 & icmp_ln41_fu_1236_p2);

assign and_ln37_fu_1366_p2 = (xor_ln37_reg_4729 & icmp_ln79_reg_4664);

assign and_ln39_1_fu_1417_p2 = (or_ln39_1_reg_4774 & and_ln37_2_fu_1374_p2);

assign and_ln39_2_fu_1434_p2 = (or_ln39_1_reg_4774 & and_ln37_3_fu_1378_p2);

assign and_ln39_3_fu_1300_p2 = (or_ln39_1_fu_1294_p2 & and_ln37_4_fu_1230_p2);

assign and_ln39_fu_1412_p2 = (or_ln39_1_reg_4774 & and_ln37_1_fu_1370_p2);

assign and_ln41_1_fu_1528_p2 = (xor_ln41_reg_4811 & and_ln39_2_fu_1434_p2);

assign and_ln41_fu_1499_p2 = (xor_ln41_reg_4811 & and_ln39_1_fu_1417_p2);

assign and_ln53_1_fu_1479_p2 = (select_ln39_1_fu_1388_p3 & icmp_ln53_4_fu_1474_p2);

assign and_ln53_2_fu_1575_p2 = (select_ln39_1_fu_1388_p3 & icmp_ln53_5_fu_1569_p2);

assign and_ln53_fu_1116_p2 = (icmp_ln53_fu_1070_p2 & icmp_ln53_1_fu_1110_p2);

assign and_ln79_1_fu_1148_p2 = (and_ln79_fu_1142_p2 & and_ln53_fu_1116_p2);

assign and_ln79_2_fu_1600_p2 = (select_ln39_2_fu_1399_p3 & icmp_ln79_3_fu_1595_p2);

assign and_ln79_3_fu_1606_p2 = (and_ln79_2_fu_1600_p2 & and_ln53_2_fu_1575_p2);

assign and_ln79_fu_1142_p2 = (icmp_ln79_fu_1076_p2 & icmp_ln79_1_fu_1136_p2);

assign and_ln93_1_fu_1771_p2 = (select_ln37_2_fu_1349_p3 & and_ln93_fu_1765_p2);

assign and_ln93_fu_1765_p2 = (select_ln41_2_fu_1463_p3 & icmp_ln93_2_fu_1759_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage1_11001 = (((select_ln43_1_reg_4843_pp0_iter2_reg == 1'd1) & (call_ln104_write_output_fu_942_outStream_TDATA_blk_n == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b1)) | ((icmp_ln37_reg_4699 == 1'd0) & (inStream_V_data_0_vld_out == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage1_11001_ignoreCallOp745 = ((icmp_ln37_reg_4699 == 1'd0) & (inStream_V_data_0_vld_out == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage1_subdone = (((select_ln43_1_reg_4843_pp0_iter2_reg == 1'd1) & (call_ln104_write_output_fu_942_outStream_TDATA_blk_n == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b1)) | ((icmp_ln37_reg_4699 == 1'd0) & (inStream_V_data_0_vld_out == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)));
end

assign ap_block_state10_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage1_iter2_ignore_call313 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state13_pp0_stage1_iter3 = ((select_ln43_1_reg_4843_pp0_iter2_reg == 1'd1) & (call_ln104_write_output_fu_942_outStream_TDATA_blk_n == 1'b0));
end

assign ap_block_state13_pp0_stage1_iter3_ignore_call313 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state14 = ((outStream_V_dest_V_1_state == 2'd1) | (outStream_V_id_V_1_state == 2'd1) | (outStream_V_last_V_1_state == 2'd1) | (outStream_V_user_V_1_state == 2'd1) | (outStream_V_strb_V_1_state == 2'd1) | (outStream_V_keep_V_1_state == 2'd1) | (outStream_V_data_1_state == 2'd1) | ((outStream_V_dest_V_1_state == 2'd3) & (outStream_TREADY == 1'b0)) | ((outStream_V_id_V_1_state == 2'd3) & (outStream_TREADY == 1'b0)) | ((outStream_V_last_V_1_state == 2'd3) & (outStream_TREADY == 1'b0)) | ((outStream_V_user_V_1_state == 2'd3) & (outStream_TREADY == 1'b0)) | ((outStream_V_strb_V_1_state == 2'd3) & (outStream_TREADY == 1'b0)) | ((outStream_V_keep_V_1_state == 2'd3) & (outStream_TREADY == 1'b0)) | ((outStream_V_data_1_state == 2'd3) & (outStream_TREADY == 1'b0)));
end

assign ap_block_state6_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state7_pp0_stage1_iter0 = ((icmp_ln37_reg_4699 == 1'd0) & (inStream_V_data_0_vld_out == 1'b0));
end

always @ (*) begin
    ap_block_state7_pp0_stage1_iter0_ignore_call313 = ((icmp_ln37_reg_4699 == 1'd0) & (inStream_V_data_0_vld_out == 1'b0));
end

assign ap_block_state8_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage1_iter1_ignore_call313 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign call_ln104_write_output_fu_942_ap_start = call_ln104_write_output_fu_942_ap_start_reg;

assign call_ln104_write_output_fu_942_outStream_TREADY = ((outStream_V_dest_V_1_ack_in & ap_CS_fsm_pp0_stage1) | (outStream_V_id_V_1_ack_in & ap_CS_fsm_pp0_stage1) | (outStream_V_last_V_1_ack_in & ap_CS_fsm_pp0_stage1) | (outStream_V_user_V_1_ack_in & ap_CS_fsm_pp0_stage1) | (outStream_V_strb_V_1_ack_in & ap_CS_fsm_pp0_stage1) | (outStream_V_keep_V_1_ack_in & ap_CS_fsm_pp0_stage1) | (outStream_V_data_1_ack_in & ap_CS_fsm_pp0_stage1));

assign call_ln104_write_output_fu_942_val_output_3_V = ((icmp_ln1494_11_fu_4032_p2[0:0] === 1'b1) ? tmp_15_reg_5304 : select_ln148_10_reg_5298);

assign col_idx_fu_1100_p2 = (zext_ln43_fu_1096_p1 + shl_ln1_fu_1082_p3);

assign col_stride_fu_1338_p2 = (2'd1 + select_ln41_fu_1324_p3);

assign conv_count_1_fu_1128_p3 = ((and_ln53_fu_1116_p2[0:0] === 1'b1) ? conv_count_fu_1122_p2 : 10'd0);

assign conv_count_fu_1122_p2 = ($signed(10'd1023) + $signed(zext_ln50_fu_1106_p1));

assign curr_input_data_sub_s_fu_1709_p1 = inStream_V_data_0_data_out[15:0];

assign icmp_ln10_fu_982_p2 = ((phi_ln10_reg_750 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln11_fu_1000_p2 = ((phi_ln11_reg_772 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln12_fu_1018_p2 = ((phi_ln12_reg_794 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln13_fu_1036_p2 = ((phi_ln13_reg_816 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln1494_10_fu_3590_p2 = (($signed(tmp_14_fu_3577_p6) > $signed(select_ln148_9_fu_3571_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1494_11_fu_4032_p2 = (($signed(tmp_15_reg_5304) > $signed(select_ln148_10_reg_5298)) ? 1'b1 : 1'b0);

assign icmp_ln1494_1_fu_3440_p2 = (($signed(tmp_3_fu_3427_p6) > $signed(select_ln148_fu_3421_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1494_2_fu_3813_p2 = (($signed(tmp_4_reg_5268) > $signed(select_ln148_1_reg_5262)) ? 1'b1 : 1'b0);

assign icmp_ln1494_3_fu_3467_p2 = (($signed(tmp_6_reg_5232) > $signed(tmp_5_reg_5226)) ? 1'b1 : 1'b0);

assign icmp_ln1494_4_fu_3490_p2 = (($signed(tmp_7_fu_3477_p6) > $signed(select_ln148_3_fu_3471_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1494_5_fu_3886_p2 = (($signed(tmp_8_reg_5280) > $signed(select_ln148_4_reg_5274)) ? 1'b1 : 1'b0);

assign icmp_ln1494_6_fu_3517_p2 = (($signed(tmp_s_reg_5244) > $signed(tmp_9_reg_5238)) ? 1'b1 : 1'b0);

assign icmp_ln1494_7_fu_3540_p2 = (($signed(tmp_10_fu_3527_p6) > $signed(select_ln148_6_fu_3521_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1494_8_fu_3959_p2 = (($signed(tmp_11_reg_5292) > $signed(select_ln148_7_reg_5286)) ? 1'b1 : 1'b0);

assign icmp_ln1494_9_fu_3567_p2 = (($signed(tmp_13_reg_5256) > $signed(tmp_12_reg_5250)) ? 1'b1 : 1'b0);

assign icmp_ln1494_fu_3417_p2 = (($signed(tmp_2_reg_5220) > $signed(tmp_1_reg_5214)) ? 1'b1 : 1'b0);

assign icmp_ln203_1_fu_1981_p2 = ((trunc_ln203_fu_1964_p1 == 2'd1) ? 1'b1 : 1'b0);

assign icmp_ln203_2_fu_1995_p2 = ((trunc_ln203_fu_1964_p1 == 2'd0) ? 1'b1 : 1'b0);

assign icmp_ln203_fu_1967_p2 = ((trunc_ln203_fu_1964_p1 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln37_fu_1164_p2 = ((ap_phi_mux_indvar_flatten913_phi_fu_842_p4 == 20'd692224) ? 1'b1 : 1'b0);

assign icmp_ln39_fu_1182_p2 = ((ap_phi_mux_indvar_flatten517_phi_fu_865_p4 == 13'd3328) ? 1'b1 : 1'b0);

assign icmp_ln41_fu_1236_p2 = ((ap_phi_mux_indvar_flatten213_phi_fu_888_p4 == 12'd1664) ? 1'b1 : 1'b0);

assign icmp_ln43_fu_1224_p2 = ((ap_phi_mux_indvar_flatten_phi_fu_911_p4 == 5'd8) ? 1'b1 : 1'b0);

assign icmp_ln45_fu_1218_p2 = ((ap_phi_mux_input_ch_idx_0_phi_fu_934_p4 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln53_1_fu_1110_p2 = ((col_idx_fu_1100_p2 != 9'd0) ? 1'b1 : 1'b0);

assign icmp_ln53_2_fu_1355_p2 = ((out_row_reg_4708 != 8'd0) ? 1'b1 : 1'b0);

assign icmp_ln53_3_fu_1282_p2 = ((select_ln37_1_fu_1204_p3 != sext_ln53_1_fu_1278_p1) ? 1'b1 : 1'b0);

assign icmp_ln53_4_fu_1474_p2 = ((out_col_reg_4792 != 8'd0) ? 1'b1 : 1'b0);

assign icmp_ln53_5_fu_1569_p2 = ((add_ln50_1_fu_1559_p2 != 9'd0) ? 1'b1 : 1'b0);

assign icmp_ln53_fu_1070_p2 = ((shl_ln_fu_1042_p3 != sext_ln53_fu_1066_p1) ? 1'b1 : 1'b0);

assign icmp_ln79_1_fu_1136_p2 = ((ap_phi_mux_col_stride_0_phi_fu_923_p4 == 2'd1) ? 1'b1 : 1'b0);

assign icmp_ln79_2_fu_1394_p2 = ((select_ln37_reg_4723 == 2'd0) ? 1'b1 : 1'b0);

assign icmp_ln79_3_fu_1595_p2 = ((select_ln41_reg_4805 == 2'd0) ? 1'b1 : 1'b0);

assign icmp_ln79_fu_1076_p2 = ((ap_phi_mux_row_stride_0_phi_fu_877_p4 == 2'd1) ? 1'b1 : 1'b0);

assign icmp_ln93_1_fu_1090_p2 = ((ap_phi_mux_out_col_0_phi_fu_900_p4 == 8'd207) ? 1'b1 : 1'b0);

assign icmp_ln93_2_fu_1759_p2 = ((select_ln43_fu_1548_p3 == 3'd3) ? 1'b1 : 1'b0);

assign icmp_ln93_3_fu_1344_p2 = ((out_row_reg_4708 == 8'd207) ? 1'b1 : 1'b0);

assign icmp_ln93_4_fu_1458_p2 = ((out_col_reg_4792 == 8'd207) ? 1'b1 : 1'b0);

assign icmp_ln93_fu_1050_p2 = ((ap_phi_mux_out_row_0_phi_fu_853_p4 == 8'd207) ? 1'b1 : 1'b0);

assign inStream_TREADY = inStream_V_dest_V_0_state[1'd1];

assign inStream_V_data_0_ack_in = inStream_V_data_0_state[1'd1];

assign inStream_V_data_0_load_A = (inStream_V_data_0_state_cmp_full & ~inStream_V_data_0_sel_wr);

assign inStream_V_data_0_load_B = (inStream_V_data_0_state_cmp_full & inStream_V_data_0_sel_wr);

assign inStream_V_data_0_sel = inStream_V_data_0_sel_rd;

assign inStream_V_data_0_state_cmp_full = ((inStream_V_data_0_state != 2'd1) ? 1'b1 : 1'b0);

assign inStream_V_data_0_vld_in = inStream_TVALID;

assign inStream_V_data_0_vld_out = inStream_V_data_0_state[1'd0];

assign inStream_V_dest_V_0_ack_in = inStream_V_dest_V_0_state[1'd1];

assign inStream_V_dest_V_0_load_A = (inStream_V_dest_V_0_state_cmp_full & ~inStream_V_dest_V_0_sel_wr);

assign inStream_V_dest_V_0_load_B = (inStream_V_dest_V_0_state_cmp_full & inStream_V_dest_V_0_sel_wr);

assign inStream_V_dest_V_0_sel = inStream_V_dest_V_0_sel_rd;

assign inStream_V_dest_V_0_state_cmp_full = ((inStream_V_dest_V_0_state != 2'd1) ? 1'b1 : 1'b0);

assign inStream_V_dest_V_0_vld_in = inStream_TVALID;

assign inStream_V_dest_V_0_vld_out = inStream_V_dest_V_0_state[1'd0];

assign inStream_V_id_V_0_ack_in = inStream_V_id_V_0_state[1'd1];

assign inStream_V_id_V_0_load_A = (inStream_V_id_V_0_state_cmp_full & ~inStream_V_id_V_0_sel_wr);

assign inStream_V_id_V_0_load_B = (inStream_V_id_V_0_state_cmp_full & inStream_V_id_V_0_sel_wr);

assign inStream_V_id_V_0_sel = inStream_V_id_V_0_sel_rd;

assign inStream_V_id_V_0_state_cmp_full = ((inStream_V_id_V_0_state != 2'd1) ? 1'b1 : 1'b0);

assign inStream_V_id_V_0_vld_in = inStream_TVALID;

assign inStream_V_id_V_0_vld_out = inStream_V_id_V_0_state[1'd0];

assign inStream_V_keep_V_0_ack_in = inStream_V_keep_V_0_state[1'd1];

assign inStream_V_keep_V_0_load_A = (inStream_V_keep_V_0_state_cmp_full & ~inStream_V_keep_V_0_sel_wr);

assign inStream_V_keep_V_0_load_B = (inStream_V_keep_V_0_state_cmp_full & inStream_V_keep_V_0_sel_wr);

assign inStream_V_keep_V_0_sel = inStream_V_keep_V_0_sel_rd;

assign inStream_V_keep_V_0_state_cmp_full = ((inStream_V_keep_V_0_state != 2'd1) ? 1'b1 : 1'b0);

assign inStream_V_keep_V_0_vld_in = inStream_TVALID;

assign inStream_V_keep_V_0_vld_out = inStream_V_keep_V_0_state[1'd0];

assign inStream_V_strb_V_0_ack_in = inStream_V_strb_V_0_state[1'd1];

assign inStream_V_strb_V_0_load_A = (inStream_V_strb_V_0_state_cmp_full & ~inStream_V_strb_V_0_sel_wr);

assign inStream_V_strb_V_0_load_B = (inStream_V_strb_V_0_state_cmp_full & inStream_V_strb_V_0_sel_wr);

assign inStream_V_strb_V_0_sel = inStream_V_strb_V_0_sel_rd;

assign inStream_V_strb_V_0_state_cmp_full = ((inStream_V_strb_V_0_state != 2'd1) ? 1'b1 : 1'b0);

assign inStream_V_strb_V_0_vld_in = inStream_TVALID;

assign inStream_V_strb_V_0_vld_out = inStream_V_strb_V_0_state[1'd0];

assign inStream_V_user_V_0_ack_in = inStream_V_user_V_0_state[1'd1];

assign inStream_V_user_V_0_load_A = (inStream_V_user_V_0_state_cmp_full & ~inStream_V_user_V_0_sel_wr);

assign inStream_V_user_V_0_load_B = (inStream_V_user_V_0_state_cmp_full & inStream_V_user_V_0_sel_wr);

assign inStream_V_user_V_0_sel = inStream_V_user_V_0_sel_rd;

assign inStream_V_user_V_0_state_cmp_full = ((inStream_V_user_V_0_state != 2'd1) ? 1'b1 : 1'b0);

assign inStream_V_user_V_0_vld_in = inStream_TVALID;

assign inStream_V_user_V_0_vld_out = inStream_V_user_V_0_state[1'd0];

assign input_ch_idx_fu_1777_p2 = (select_ln43_fu_1548_p3 + 3'd1);

assign line_buff_group_0_va_address1 = sext_ln132_1_fu_1857_p1;

assign line_buff_group_1_va_address1 = sext_ln132_1_fu_1857_p1;

assign line_buff_group_2_va_address1 = sext_ln132_1_fu_1857_p1;

assign line_buff_group_3_va_address1 = sext_ln132_1_fu_1857_p1;

assign mul_ln203_fu_1747_p1 = mul_ln203_fu_1747_p10;

assign mul_ln203_fu_1747_p10 = select_ln43_fu_1548_p3;

assign mul_ln203_fu_1747_p2 = (12'd418 * mul_ln203_fu_1747_p1);

assign or_ln39_1_fu_1294_p2 = (xor_ln39_fu_1288_p2 | icmp_ln39_fu_1182_p2);

assign or_ln39_fu_1254_p2 = (icmp_ln39_fu_1182_p2 | and_ln37_5_fu_1242_p2);

assign or_ln41_1_fu_1318_p2 = (or_ln41_fu_1312_p2 | icmp_ln39_fu_1182_p2);

assign or_ln41_fu_1312_p2 = (and_ln39_3_fu_1300_p2 | and_ln37_5_fu_1242_p2);

assign or_ln43_1_fu_1543_p2 = (or_ln43_fu_1538_p2 | or_ln39_reg_4754);

assign or_ln43_fu_1538_p2 = (and_ln41_1_fu_1528_p2 | and_ln39_3_reg_4781);

assign outStream_TDATA = outStream_V_data_1_data_out;

assign outStream_TDEST = outStream_V_dest_V_1_data_out;

assign outStream_TID = outStream_V_id_V_1_data_out;

assign outStream_TKEEP = outStream_V_keep_V_1_data_out;

assign outStream_TLAST = outStream_V_last_V_1_data_out;

assign outStream_TSTRB = outStream_V_strb_V_1_data_out;

assign outStream_TUSER = outStream_V_user_V_1_data_out;

assign outStream_TVALID = outStream_V_dest_V_1_state[1'd0];

assign outStream_V_data_1_ack_in = outStream_V_data_1_state[1'd1];

assign outStream_V_data_1_ack_out = outStream_TREADY;

assign outStream_V_data_1_load_A = (outStream_V_data_1_state_cmp_full & ~outStream_V_data_1_sel_wr);

assign outStream_V_data_1_load_B = (outStream_V_data_1_state_cmp_full & outStream_V_data_1_sel_wr);

assign outStream_V_data_1_sel = outStream_V_data_1_sel_rd;

assign outStream_V_data_1_state_cmp_full = ((outStream_V_data_1_state != 2'd1) ? 1'b1 : 1'b0);

assign outStream_V_data_1_vld_in = call_ln104_write_output_fu_942_outStream_TVALID;

assign outStream_V_data_1_vld_out = outStream_V_data_1_state[1'd0];

assign outStream_V_dest_V_1_ack_in = outStream_V_dest_V_1_state[1'd1];

assign outStream_V_dest_V_1_ack_out = outStream_TREADY;

assign outStream_V_dest_V_1_load_A = (outStream_V_dest_V_1_state_cmp_full & ~outStream_V_dest_V_1_sel_wr);

assign outStream_V_dest_V_1_load_B = (outStream_V_dest_V_1_state_cmp_full & outStream_V_dest_V_1_sel_wr);

assign outStream_V_dest_V_1_sel = outStream_V_dest_V_1_sel_rd;

assign outStream_V_dest_V_1_state_cmp_full = ((outStream_V_dest_V_1_state != 2'd1) ? 1'b1 : 1'b0);

assign outStream_V_dest_V_1_vld_in = call_ln104_write_output_fu_942_outStream_TVALID;

assign outStream_V_dest_V_1_vld_out = outStream_V_dest_V_1_state[1'd0];

assign outStream_V_id_V_1_ack_in = outStream_V_id_V_1_state[1'd1];

assign outStream_V_id_V_1_ack_out = outStream_TREADY;

assign outStream_V_id_V_1_load_A = (outStream_V_id_V_1_state_cmp_full & ~outStream_V_id_V_1_sel_wr);

assign outStream_V_id_V_1_load_B = (outStream_V_id_V_1_state_cmp_full & outStream_V_id_V_1_sel_wr);

assign outStream_V_id_V_1_sel = outStream_V_id_V_1_sel_rd;

assign outStream_V_id_V_1_state_cmp_full = ((outStream_V_id_V_1_state != 2'd1) ? 1'b1 : 1'b0);

assign outStream_V_id_V_1_vld_in = call_ln104_write_output_fu_942_outStream_TVALID;

assign outStream_V_id_V_1_vld_out = outStream_V_id_V_1_state[1'd0];

assign outStream_V_keep_V_1_ack_in = outStream_V_keep_V_1_state[1'd1];

assign outStream_V_keep_V_1_ack_out = outStream_TREADY;

assign outStream_V_keep_V_1_load_A = (outStream_V_keep_V_1_state_cmp_full & ~outStream_V_keep_V_1_sel_wr);

assign outStream_V_keep_V_1_load_B = (outStream_V_keep_V_1_state_cmp_full & outStream_V_keep_V_1_sel_wr);

assign outStream_V_keep_V_1_sel = outStream_V_keep_V_1_sel_rd;

assign outStream_V_keep_V_1_state_cmp_full = ((outStream_V_keep_V_1_state != 2'd1) ? 1'b1 : 1'b0);

assign outStream_V_keep_V_1_vld_in = call_ln104_write_output_fu_942_outStream_TVALID;

assign outStream_V_keep_V_1_vld_out = outStream_V_keep_V_1_state[1'd0];

assign outStream_V_last_V_1_ack_in = outStream_V_last_V_1_state[1'd1];

assign outStream_V_last_V_1_ack_out = outStream_TREADY;

assign outStream_V_last_V_1_load_A = (outStream_V_last_V_1_state_cmp_full & ~outStream_V_last_V_1_sel_wr);

assign outStream_V_last_V_1_load_B = (outStream_V_last_V_1_state_cmp_full & outStream_V_last_V_1_sel_wr);

assign outStream_V_last_V_1_sel = outStream_V_last_V_1_sel_rd;

assign outStream_V_last_V_1_state_cmp_full = ((outStream_V_last_V_1_state != 2'd1) ? 1'b1 : 1'b0);

assign outStream_V_last_V_1_vld_in = call_ln104_write_output_fu_942_outStream_TVALID;

assign outStream_V_last_V_1_vld_out = outStream_V_last_V_1_state[1'd0];

assign outStream_V_strb_V_1_ack_in = outStream_V_strb_V_1_state[1'd1];

assign outStream_V_strb_V_1_ack_out = outStream_TREADY;

assign outStream_V_strb_V_1_load_A = (outStream_V_strb_V_1_state_cmp_full & ~outStream_V_strb_V_1_sel_wr);

assign outStream_V_strb_V_1_load_B = (outStream_V_strb_V_1_state_cmp_full & outStream_V_strb_V_1_sel_wr);

assign outStream_V_strb_V_1_sel = outStream_V_strb_V_1_sel_rd;

assign outStream_V_strb_V_1_state_cmp_full = ((outStream_V_strb_V_1_state != 2'd1) ? 1'b1 : 1'b0);

assign outStream_V_strb_V_1_vld_in = call_ln104_write_output_fu_942_outStream_TVALID;

assign outStream_V_strb_V_1_vld_out = outStream_V_strb_V_1_state[1'd0];

assign outStream_V_user_V_1_ack_in = outStream_V_user_V_1_state[1'd1];

assign outStream_V_user_V_1_ack_out = outStream_TREADY;

assign outStream_V_user_V_1_load_A = (outStream_V_user_V_1_state_cmp_full & ~outStream_V_user_V_1_sel_wr);

assign outStream_V_user_V_1_load_B = (outStream_V_user_V_1_state_cmp_full & outStream_V_user_V_1_sel_wr);

assign outStream_V_user_V_1_sel = outStream_V_user_V_1_sel_rd;

assign outStream_V_user_V_1_state_cmp_full = ((outStream_V_user_V_1_state != 2'd1) ? 1'b1 : 1'b0);

assign outStream_V_user_V_1_vld_in = call_ln104_write_output_fu_942_outStream_TVALID;

assign outStream_V_user_V_1_vld_out = outStream_V_user_V_1_state[1'd0];

assign out_col_fu_1306_p2 = (8'd1 + select_ln39_fu_1260_p3);

assign out_row_fu_1176_p2 = (8'd1 + ap_phi_mux_out_row_0_phi_fu_853_p4);

assign row_stride_fu_1248_p2 = (2'd1 + select_ln37_fu_1188_p3);

assign select_ln148_10_fu_3596_p3 = ((icmp_ln1494_10_fu_3590_p2[0:0] === 1'b1) ? tmp_14_fu_3577_p6 : select_ln148_9_fu_3571_p3);

assign select_ln148_1_fu_3446_p3 = ((icmp_ln1494_1_fu_3440_p2[0:0] === 1'b1) ? tmp_3_fu_3427_p6 : select_ln148_fu_3421_p3);

assign select_ln148_3_fu_3471_p3 = ((icmp_ln1494_3_fu_3467_p2[0:0] === 1'b1) ? tmp_6_reg_5232 : tmp_5_reg_5226);

assign select_ln148_4_fu_3496_p3 = ((icmp_ln1494_4_fu_3490_p2[0:0] === 1'b1) ? tmp_7_fu_3477_p6 : select_ln148_3_fu_3471_p3);

assign select_ln148_6_fu_3521_p3 = ((icmp_ln1494_6_fu_3517_p2[0:0] === 1'b1) ? tmp_s_reg_5244 : tmp_9_reg_5238);

assign select_ln148_7_fu_3546_p3 = ((icmp_ln1494_7_fu_3540_p2[0:0] === 1'b1) ? tmp_10_fu_3527_p6 : select_ln148_6_fu_3521_p3);

assign select_ln148_9_fu_3571_p3 = ((icmp_ln1494_9_fu_3567_p2[0:0] === 1'b1) ? tmp_13_reg_5256 : tmp_12_reg_5250);

assign select_ln148_fu_3421_p3 = ((icmp_ln1494_fu_3417_p2[0:0] === 1'b1) ? tmp_2_reg_5220 : tmp_1_reg_5214);

assign select_ln37_1_fu_1204_p3 = ((icmp_ln39_fu_1182_p2[0:0] === 1'b1) ? shl_ln49_mid1_fu_1196_p3 : shl_ln_fu_1042_p3);

assign select_ln37_2_fu_1349_p3 = ((icmp_ln39_reg_4715[0:0] === 1'b1) ? icmp_ln93_3_fu_1344_p2 : icmp_ln93_reg_4654);

assign select_ln37_3_fu_1360_p3 = ((icmp_ln39_reg_4715[0:0] === 1'b1) ? icmp_ln53_2_fu_1355_p2 : icmp_ln53_reg_4659);

assign select_ln37_4_fu_1382_p3 = ((icmp_ln39_reg_4715[0:0] === 1'b1) ? out_row_reg_4708 : out_row_0_reg_849);

assign select_ln37_fu_1188_p3 = ((icmp_ln39_fu_1182_p2[0:0] === 1'b1) ? 2'd0 : ap_phi_mux_row_stride_0_phi_fu_877_p4);

assign select_ln39_1_fu_1388_p3 = ((and_ln37_5_reg_4742[0:0] === 1'b1) ? icmp_ln53_3_reg_4769 : select_ln37_3_fu_1360_p3);

assign select_ln39_2_fu_1399_p3 = ((and_ln37_5_reg_4742[0:0] === 1'b1) ? icmp_ln79_2_fu_1394_p2 : and_ln37_fu_1366_p2);

assign select_ln39_3_fu_1406_p3 = ((or_ln39_reg_4754[0:0] === 1'b1) ? 9'd0 : shl_ln1_reg_4669);

assign select_ln39_4_fu_1422_p3 = ((or_ln39_reg_4754[0:0] === 1'b1) ? 9'd0 : col_idx_reg_4679);

assign select_ln39_5_fu_1428_p3 = ((or_ln39_reg_4754[0:0] === 1'b1) ? 9'd1 : add_ln43_reg_4694);

assign select_ln39_6_fu_1439_p3 = ((and_ln37_5_reg_4742[0:0] === 1'b1) ? row_stride_reg_4749 : select_ln37_reg_4723);

assign select_ln39_7_fu_1639_p3 = ((or_ln39_reg_4754[0:0] === 1'b1) ? 12'd0 : sext_ln43_2_fu_1636_p1);

assign select_ln39_8_fu_1815_p3 = ((icmp_ln39_reg_4715[0:0] === 1'b1) ? 13'd1 : add_ln39_1_fu_1809_p2);

assign select_ln39_fu_1260_p3 = ((or_ln39_fu_1254_p2[0:0] === 1'b1) ? 8'd0 : ap_phi_mux_out_col_0_phi_fu_900_p4);

assign select_ln41_1_fu_1451_p3 = ((and_ln39_3_reg_4781[0:0] === 1'b1) ? shl_ln50_mid1_fu_1444_p3 : select_ln39_3_fu_1406_p3);

assign select_ln41_2_fu_1463_p3 = ((and_ln39_3_reg_4781[0:0] === 1'b1) ? icmp_ln93_4_fu_1458_p2 : and_ln39_fu_1412_p2);

assign select_ln41_3_fu_1504_p3 = ((and_ln39_3_reg_4781[0:0] === 1'b1) ? shl_ln50_mid1_fu_1444_p3 : select_ln39_4_fu_1422_p3);

assign select_ln41_4_fu_1521_p3 = ((and_ln39_3_reg_4781[0:0] === 1'b1) ? add_ln41_2_fu_1515_p2 : select_ln39_5_fu_1428_p3);

assign select_ln41_5_fu_1533_p3 = ((and_ln39_3_reg_4781[0:0] === 1'b1) ? out_col_reg_4792 : select_ln39_reg_4764);

assign select_ln41_6_fu_1646_p3 = ((and_ln39_3_reg_4781[0:0] === 1'b1) ? sext_ln43_1_fu_1632_p1 : select_ln39_7_fu_1639_p3);

assign select_ln41_7_fu_1802_p3 = ((or_ln39_reg_4754[0:0] === 1'b1) ? 12'd1 : add_ln41_1_fu_1796_p2);

assign select_ln41_fu_1324_p3 = ((or_ln41_1_fu_1318_p2[0:0] === 1'b1) ? 2'd0 : ap_phi_mux_col_stride_0_phi_fu_923_p4);

assign select_ln43_1_fu_1612_p3 = ((and_ln41_1_fu_1528_p2[0:0] === 1'b1) ? and_ln79_3_fu_1606_p2 : and_ln41_fu_1499_p2);

assign select_ln43_2_fu_1620_p3 = ((and_ln41_1_fu_1528_p2[0:0] === 1'b1) ? add_ln50_1_fu_1559_p2 : select_ln41_3_fu_1504_p3);

assign select_ln43_3_fu_1653_p3 = ((and_ln41_1_fu_1528_p2[0:0] === 1'b1) ? sext_ln43_fu_1628_p1 : select_ln41_6_fu_1646_p3);

assign select_ln43_4_fu_1671_p3 = ((and_ln41_1_fu_1528_p2[0:0] === 1'b1) ? add_ln43_3_fu_1665_p2 : select_ln41_4_fu_1521_p3);

assign select_ln43_5_fu_1679_p3 = ((and_ln41_1_fu_1528_p2[0:0] === 1'b1) ? col_stride_reg_4817 : select_ln41_reg_4805);

assign select_ln43_6_fu_1789_p3 = ((or_ln41_1_reg_4800[0:0] === 1'b1) ? 5'd1 : add_ln43_1_fu_1783_p2);

assign select_ln43_fu_1548_p3 = ((or_ln43_1_fu_1543_p2[0:0] === 1'b1) ? 3'd0 : input_ch_idx_0_reg_930);

assign select_ln53_1_fu_1491_p3 = ((and_ln53_1_fu_1479_p2[0:0] === 1'b1) ? add_ln54_1_fu_1485_p2 : 10'd0);

assign select_ln53_2_fu_1587_p3 = ((and_ln53_2_fu_1575_p2[0:0] === 1'b1) ? add_ln54_2_fu_1581_p2 : 10'd0);

assign sext_ln132_1_fu_1857_p1 = $signed(add_ln132_1_reg_4951);

assign sext_ln132_fu_1846_p1 = $signed(add_ln132_reg_4913_pp0_iter1_reg);

assign sext_ln203_fu_1833_p1 = $signed(add_ln203_fu_1828_p2);

assign sext_ln43_1_fu_1632_p1 = select_ln53_1_fu_1491_p3;

assign sext_ln43_2_fu_1636_p1 = conv_count_1_reg_4684;

assign sext_ln43_fu_1628_p1 = select_ln53_2_fu_1587_p3;

assign sext_ln53_1_fu_1278_p1 = $signed(sub_ln53_1_fu_1272_p2);

assign sext_ln53_fu_1066_p1 = $signed(sub_ln53_fu_1060_p2);

assign shl_ln1_fu_1082_p3 = {{ap_phi_mux_out_col_0_phi_fu_900_p4}, {1'd0}};

assign shl_ln49_mid1_fu_1196_p3 = {{out_row_fu_1176_p2}, {1'd0}};

assign shl_ln50_mid1_fu_1444_p3 = {{out_col_reg_4792}, {1'd0}};

assign shl_ln_fu_1042_p3 = {{ap_phi_mux_out_row_0_phi_fu_853_p4}, {1'd0}};

assign sub_ln53_1_fu_1272_p2 = (3'd0 - zext_ln53_1_fu_1268_p1);

assign sub_ln53_fu_1060_p2 = (3'd0 - zext_ln53_fu_1056_p1);

assign tmp_10_fu_3527_p1 = ((icmp_ln203_2_reg_5142[0:0] === 1'b1) ? window_group_2_2_va_2_reg_5198 : window_group_2_3_va_2_fu_324);

assign tmp_10_fu_3527_p2 = ((icmp_ln203_2_reg_5142[0:0] === 1'b1) ? window_group_2_3_va_6_fu_340 : window_group_2_3_va_56_fu_3213_p3);

assign tmp_10_fu_3527_p3 = ((icmp_ln203_2_reg_5142[0:0] === 1'b1) ? window_group_2_3_va_10_fu_356 : window_group_2_3_va_54_fu_3199_p3);

assign tmp_10_fu_3527_p4 = ((icmp_ln203_2_reg_5142[0:0] === 1'b1) ? window_group_2_3_va_14_fu_372 : window_group_2_3_va_51_fu_3179_p3);

assign tmp_11_fu_3554_p1 = ((icmp_ln203_2_reg_5142[0:0] === 1'b1) ? line_buff_group_2_va_1_q1 : window_group_2_3_va_3_fu_328);

assign tmp_11_fu_3554_p2 = ((icmp_ln203_2_reg_5142[0:0] === 1'b1) ? window_group_2_3_va_7_fu_344 : window_group_2_3_va_65_fu_3274_p3);

assign tmp_11_fu_3554_p3 = ((icmp_ln203_2_reg_5142[0:0] === 1'b1) ? window_group_2_3_va_11_fu_360 : window_group_2_3_va_63_fu_3260_p3);

assign tmp_11_fu_3554_p4 = ((icmp_ln203_2_reg_5142[0:0] === 1'b1) ? window_group_2_3_va_15_fu_376 : window_group_2_3_va_60_fu_3239_p3);

assign tmp_12_fu_2645_p1 = ((icmp_ln203_2_fu_1995_p2[0:0] === 1'b1) ? line_buff_group_3_va_q0 : window_group_3_3_va_fu_380);

assign tmp_12_fu_2645_p2 = ((icmp_ln203_2_fu_1995_p2[0:0] === 1'b1) ? window_group_3_3_va_4_fu_396 : window_group_3_3_va_38_fu_2465_p3);

assign tmp_12_fu_2645_p3 = ((icmp_ln203_2_fu_1995_p2[0:0] === 1'b1) ? window_group_3_3_va_8_fu_412 : window_group_3_3_va_36_fu_2449_p3);

assign tmp_12_fu_2645_p4 = ((icmp_ln203_2_fu_1995_p2[0:0] === 1'b1) ? window_group_3_3_va_12_fu_428 : window_group_3_3_va_33_fu_2425_p3);

assign tmp_13_fu_2659_p1 = ((icmp_ln203_2_fu_1995_p2[0:0] === 1'b1) ? line_buff_group_3_va_q1 : window_group_3_3_va_1_fu_384);

assign tmp_13_fu_2659_p2 = ((icmp_ln203_2_fu_1995_p2[0:0] === 1'b1) ? window_group_3_3_va_5_fu_400 : window_group_3_3_va_47_fu_2537_p3);

assign tmp_13_fu_2659_p3 = ((icmp_ln203_2_fu_1995_p2[0:0] === 1'b1) ? window_group_3_3_va_9_fu_416 : window_group_3_3_va_45_fu_2521_p3);

assign tmp_13_fu_2659_p4 = ((icmp_ln203_2_fu_1995_p2[0:0] === 1'b1) ? window_group_3_3_va_13_fu_432 : window_group_3_3_va_42_fu_2497_p3);

assign tmp_14_fu_3577_p1 = ((icmp_ln203_2_reg_5142[0:0] === 1'b1) ? window_group_3_2_va_2_reg_5206 : window_group_3_3_va_2_fu_388);

assign tmp_14_fu_3577_p2 = ((icmp_ln203_2_reg_5142[0:0] === 1'b1) ? window_group_3_3_va_6_fu_404 : window_group_3_3_va_56_fu_3335_p3);

assign tmp_14_fu_3577_p3 = ((icmp_ln203_2_reg_5142[0:0] === 1'b1) ? window_group_3_3_va_10_fu_420 : window_group_3_3_va_54_fu_3321_p3);

assign tmp_14_fu_3577_p4 = ((icmp_ln203_2_reg_5142[0:0] === 1'b1) ? window_group_3_3_va_14_fu_436 : window_group_3_3_va_51_fu_3301_p3);

assign tmp_15_fu_3604_p1 = ((icmp_ln203_2_reg_5142[0:0] === 1'b1) ? line_buff_group_3_va_1_q1 : window_group_3_3_va_3_fu_392);

assign tmp_15_fu_3604_p2 = ((icmp_ln203_2_reg_5142[0:0] === 1'b1) ? window_group_3_3_va_7_fu_408 : window_group_3_3_va_65_fu_3396_p3);

assign tmp_15_fu_3604_p3 = ((icmp_ln203_2_reg_5142[0:0] === 1'b1) ? window_group_3_3_va_11_fu_424 : window_group_3_3_va_63_fu_3382_p3);

assign tmp_15_fu_3604_p4 = ((icmp_ln203_2_reg_5142[0:0] === 1'b1) ? window_group_3_3_va_15_fu_440 : window_group_3_3_va_60_fu_3361_p3);

assign tmp_16_fu_4043_p1 = ((icmp_ln203_2_reg_5142[0:0] === 1'b1) ? val_output_0_3_V_22_fu_3817_p3 : val_output_0_3_V_1_fu_444);

assign tmp_16_fu_4043_p2 = ((icmp_ln203_2_reg_5142[0:0] === 1'b1) ? val_output_0_3_V_6_fu_448 : val_output_0_3_V_19_fu_3865_p3);

assign tmp_16_fu_4043_p3 = ((icmp_ln203_2_reg_5142[0:0] === 1'b1) ? val_output_0_3_V_9_fu_452 : val_output_0_3_V_17_fu_3851_p3);

assign tmp_16_fu_4043_p4 = ((icmp_ln203_2_reg_5142[0:0] === 1'b1) ? val_output_0_3_V_4_fu_456 : val_output_0_3_V_14_fu_3830_p3);

assign tmp_17_fu_4057_p1 = ((icmp_ln203_2_reg_5142[0:0] === 1'b1) ? val_output_1_3_V_22_fu_3890_p3 : val_output_1_3_V_1_fu_460);

assign tmp_17_fu_4057_p2 = ((icmp_ln203_2_reg_5142[0:0] === 1'b1) ? val_output_1_3_V_6_fu_464 : val_output_1_3_V_19_fu_3938_p3);

assign tmp_17_fu_4057_p3 = ((icmp_ln203_2_reg_5142[0:0] === 1'b1) ? val_output_1_3_V_9_fu_468 : val_output_1_3_V_17_fu_3924_p3);

assign tmp_17_fu_4057_p4 = ((icmp_ln203_2_reg_5142[0:0] === 1'b1) ? val_output_1_3_V_4_fu_472 : val_output_1_3_V_14_fu_3903_p3);

assign tmp_18_fu_4071_p1 = ((icmp_ln203_2_reg_5142[0:0] === 1'b1) ? val_output_2_3_V_22_fu_3963_p3 : val_output_2_3_V_1_fu_476);

assign tmp_18_fu_4071_p2 = ((icmp_ln203_2_reg_5142[0:0] === 1'b1) ? val_output_2_3_V_6_fu_480 : val_output_2_3_V_19_fu_4011_p3);

assign tmp_18_fu_4071_p3 = ((icmp_ln203_2_reg_5142[0:0] === 1'b1) ? val_output_2_3_V_9_fu_484 : val_output_2_3_V_17_fu_3997_p3);

assign tmp_18_fu_4071_p4 = ((icmp_ln203_2_reg_5142[0:0] === 1'b1) ? val_output_2_3_V_4_fu_488 : val_output_2_3_V_14_fu_3976_p3);

assign tmp_1_fu_2561_p1 = ((icmp_ln203_2_fu_1995_p2[0:0] === 1'b1) ? line_buff_group_0_va_q0 : window_group_0_3_va_fu_188);

assign tmp_1_fu_2561_p2 = ((icmp_ln203_2_fu_1995_p2[0:0] === 1'b1) ? window_group_0_3_va_4_fu_204 : window_group_0_3_va_38_fu_2033_p3);

assign tmp_1_fu_2561_p3 = ((icmp_ln203_2_fu_1995_p2[0:0] === 1'b1) ? window_group_0_3_va_8_fu_220 : window_group_0_3_va_36_fu_2017_p3);

assign tmp_1_fu_2561_p4 = ((icmp_ln203_2_fu_1995_p2[0:0] === 1'b1) ? window_group_0_3_va_12_fu_236 : window_group_0_3_va_33_fu_1987_p3);

assign tmp_2_fu_2575_p1 = ((icmp_ln203_2_fu_1995_p2[0:0] === 1'b1) ? line_buff_group_0_va_q1 : window_group_0_3_va_1_fu_192);

assign tmp_2_fu_2575_p2 = ((icmp_ln203_2_fu_1995_p2[0:0] === 1'b1) ? window_group_0_3_va_5_fu_208 : window_group_0_3_va_47_fu_2105_p3);

assign tmp_2_fu_2575_p3 = ((icmp_ln203_2_fu_1995_p2[0:0] === 1'b1) ? window_group_0_3_va_9_fu_224 : window_group_0_3_va_45_fu_2089_p3);

assign tmp_2_fu_2575_p4 = ((icmp_ln203_2_fu_1995_p2[0:0] === 1'b1) ? window_group_0_3_va_13_fu_240 : window_group_0_3_va_42_fu_2065_p3);

assign tmp_3_fu_3427_p1 = ((icmp_ln203_2_reg_5142[0:0] === 1'b1) ? window_group_0_2_va_2_reg_5056 : window_group_0_3_va_2_fu_196);

assign tmp_3_fu_3427_p2 = ((icmp_ln203_2_reg_5142[0:0] === 1'b1) ? window_group_0_3_va_6_fu_212 : window_group_0_3_va_56_fu_2969_p3);

assign tmp_3_fu_3427_p3 = ((icmp_ln203_2_reg_5142[0:0] === 1'b1) ? window_group_0_3_va_10_fu_228 : window_group_0_3_va_54_fu_2955_p3);

assign tmp_3_fu_3427_p4 = ((icmp_ln203_2_reg_5142[0:0] === 1'b1) ? window_group_0_3_va_14_fu_244 : window_group_0_3_va_51_fu_2935_p3);

assign tmp_4_fu_3454_p1 = ((icmp_ln203_2_reg_5142[0:0] === 1'b1) ? line_buff_group_0_va_1_q1 : window_group_0_3_va_3_fu_200);

assign tmp_4_fu_3454_p2 = ((icmp_ln203_2_reg_5142[0:0] === 1'b1) ? window_group_0_3_va_7_fu_216 : window_group_0_3_va_65_fu_3030_p3);

assign tmp_4_fu_3454_p3 = ((icmp_ln203_2_reg_5142[0:0] === 1'b1) ? window_group_0_3_va_11_fu_232 : window_group_0_3_va_63_fu_3016_p3);

assign tmp_4_fu_3454_p4 = ((icmp_ln203_2_reg_5142[0:0] === 1'b1) ? window_group_0_3_va_15_fu_248 : window_group_0_3_va_60_fu_2995_p3);

assign tmp_5_fu_2589_p1 = ((icmp_ln203_2_fu_1995_p2[0:0] === 1'b1) ? line_buff_group_1_va_q0 : window_group_1_3_va_fu_252);

assign tmp_5_fu_2589_p2 = ((icmp_ln203_2_fu_1995_p2[0:0] === 1'b1) ? window_group_1_3_va_4_fu_268 : window_group_1_3_va_38_fu_2177_p3);

assign tmp_5_fu_2589_p3 = ((icmp_ln203_2_fu_1995_p2[0:0] === 1'b1) ? window_group_1_3_va_8_fu_284 : window_group_1_3_va_36_fu_2161_p3);

assign tmp_5_fu_2589_p4 = ((icmp_ln203_2_fu_1995_p2[0:0] === 1'b1) ? window_group_1_3_va_12_fu_300 : window_group_1_3_va_33_fu_2137_p3);

assign tmp_6_fu_2603_p1 = ((icmp_ln203_2_fu_1995_p2[0:0] === 1'b1) ? line_buff_group_1_va_q1 : window_group_1_3_va_1_fu_256);

assign tmp_6_fu_2603_p2 = ((icmp_ln203_2_fu_1995_p2[0:0] === 1'b1) ? window_group_1_3_va_5_fu_272 : window_group_1_3_va_47_fu_2249_p3);

assign tmp_6_fu_2603_p3 = ((icmp_ln203_2_fu_1995_p2[0:0] === 1'b1) ? window_group_1_3_va_9_fu_288 : window_group_1_3_va_45_fu_2233_p3);

assign tmp_6_fu_2603_p4 = ((icmp_ln203_2_fu_1995_p2[0:0] === 1'b1) ? window_group_1_3_va_13_fu_304 : window_group_1_3_va_42_fu_2209_p3);

assign tmp_7_fu_3477_p1 = ((icmp_ln203_2_reg_5142[0:0] === 1'b1) ? window_group_1_2_va_2_reg_5190 : window_group_1_3_va_2_fu_260);

assign tmp_7_fu_3477_p2 = ((icmp_ln203_2_reg_5142[0:0] === 1'b1) ? window_group_1_3_va_6_fu_276 : window_group_1_3_va_56_fu_3091_p3);

assign tmp_7_fu_3477_p3 = ((icmp_ln203_2_reg_5142[0:0] === 1'b1) ? window_group_1_3_va_10_fu_292 : window_group_1_3_va_54_fu_3077_p3);

assign tmp_7_fu_3477_p4 = ((icmp_ln203_2_reg_5142[0:0] === 1'b1) ? window_group_1_3_va_14_fu_308 : window_group_1_3_va_51_fu_3057_p3);

assign tmp_8_fu_3504_p1 = ((icmp_ln203_2_reg_5142[0:0] === 1'b1) ? line_buff_group_1_va_1_q1 : window_group_1_3_va_3_fu_264);

assign tmp_8_fu_3504_p2 = ((icmp_ln203_2_reg_5142[0:0] === 1'b1) ? window_group_1_3_va_7_fu_280 : window_group_1_3_va_65_fu_3152_p3);

assign tmp_8_fu_3504_p3 = ((icmp_ln203_2_reg_5142[0:0] === 1'b1) ? window_group_1_3_va_11_fu_296 : window_group_1_3_va_63_fu_3138_p3);

assign tmp_8_fu_3504_p4 = ((icmp_ln203_2_reg_5142[0:0] === 1'b1) ? window_group_1_3_va_15_fu_312 : window_group_1_3_va_60_fu_3117_p3);

assign tmp_9_fu_2617_p1 = ((icmp_ln203_2_fu_1995_p2[0:0] === 1'b1) ? line_buff_group_2_va_q0 : window_group_2_3_va_fu_316);

assign tmp_9_fu_2617_p2 = ((icmp_ln203_2_fu_1995_p2[0:0] === 1'b1) ? window_group_2_3_va_4_fu_332 : window_group_2_3_va_38_fu_2321_p3);

assign tmp_9_fu_2617_p3 = ((icmp_ln203_2_fu_1995_p2[0:0] === 1'b1) ? window_group_2_3_va_8_fu_348 : window_group_2_3_va_36_fu_2305_p3);

assign tmp_9_fu_2617_p4 = ((icmp_ln203_2_fu_1995_p2[0:0] === 1'b1) ? window_group_2_3_va_12_fu_364 : window_group_2_3_va_33_fu_2281_p3);

assign tmp_s_fu_2631_p1 = ((icmp_ln203_2_fu_1995_p2[0:0] === 1'b1) ? line_buff_group_2_va_q1 : window_group_2_3_va_1_fu_320);

assign tmp_s_fu_2631_p2 = ((icmp_ln203_2_fu_1995_p2[0:0] === 1'b1) ? window_group_2_3_va_5_fu_336 : window_group_2_3_va_47_fu_2393_p3);

assign tmp_s_fu_2631_p3 = ((icmp_ln203_2_fu_1995_p2[0:0] === 1'b1) ? window_group_2_3_va_9_fu_352 : window_group_2_3_va_45_fu_2377_p3);

assign tmp_s_fu_2631_p4 = ((icmp_ln203_2_fu_1995_p2[0:0] === 1'b1) ? window_group_2_3_va_13_fu_368 : window_group_2_3_va_42_fu_2353_p3);

assign trunc_ln132_1_fu_1511_p1 = select_ln53_1_fu_1491_p3[8:0];

assign trunc_ln132_2_fu_1661_p1 = select_ln53_2_fu_1587_p3[8:0];

assign trunc_ln132_fu_1154_p1 = conv_count_1_fu_1128_p3[8:0];

assign trunc_ln203_fu_1964_p1 = select_ln43_reg_4838_pp0_iter1_reg[1:0];

assign val_output_0_3_V_14_fu_3830_p3 = ((icmp_ln203_1_reg_5105[0:0] === 1'b1) ? val_output_0_3_V_4_fu_456 : val_output_0_3_V_fu_3823_p3);

assign val_output_0_3_V_15_fu_3837_p3 = ((icmp_ln203_2_reg_5142[0:0] === 1'b1) ? val_output_0_3_V_4_fu_456 : val_output_0_3_V_14_fu_3830_p3);

assign val_output_0_3_V_16_fu_3844_p3 = ((icmp_ln203_reg_5079[0:0] === 1'b1) ? val_output_0_3_V_22_fu_3817_p3 : val_output_0_3_V_9_fu_452);

assign val_output_0_3_V_17_fu_3851_p3 = ((icmp_ln203_1_reg_5105[0:0] === 1'b1) ? val_output_0_3_V_9_fu_452 : val_output_0_3_V_16_fu_3844_p3);

assign val_output_0_3_V_18_fu_3858_p3 = ((icmp_ln203_2_reg_5142[0:0] === 1'b1) ? val_output_0_3_V_9_fu_452 : val_output_0_3_V_17_fu_3851_p3);

assign val_output_0_3_V_19_fu_3865_p3 = ((icmp_ln203_1_reg_5105[0:0] === 1'b1) ? val_output_0_3_V_22_fu_3817_p3 : val_output_0_3_V_6_fu_448);

assign val_output_0_3_V_20_fu_3872_p3 = ((icmp_ln203_2_reg_5142[0:0] === 1'b1) ? val_output_0_3_V_6_fu_448 : val_output_0_3_V_19_fu_3865_p3);

assign val_output_0_3_V_21_fu_3879_p3 = ((icmp_ln203_2_reg_5142[0:0] === 1'b1) ? val_output_0_3_V_22_fu_3817_p3 : val_output_0_3_V_1_fu_444);

assign val_output_0_3_V_22_fu_3817_p3 = ((icmp_ln1494_2_fu_3813_p2[0:0] === 1'b1) ? tmp_4_reg_5268 : select_ln148_1_reg_5262);

assign val_output_0_3_V_fu_3823_p3 = ((icmp_ln203_reg_5079[0:0] === 1'b1) ? val_output_0_3_V_4_fu_456 : val_output_0_3_V_22_fu_3817_p3);

assign val_output_1_3_V_14_fu_3903_p3 = ((icmp_ln203_1_reg_5105[0:0] === 1'b1) ? val_output_1_3_V_4_fu_472 : val_output_1_3_V_fu_3896_p3);

assign val_output_1_3_V_15_fu_3910_p3 = ((icmp_ln203_2_reg_5142[0:0] === 1'b1) ? val_output_1_3_V_4_fu_472 : val_output_1_3_V_14_fu_3903_p3);

assign val_output_1_3_V_16_fu_3917_p3 = ((icmp_ln203_reg_5079[0:0] === 1'b1) ? val_output_1_3_V_22_fu_3890_p3 : val_output_1_3_V_9_fu_468);

assign val_output_1_3_V_17_fu_3924_p3 = ((icmp_ln203_1_reg_5105[0:0] === 1'b1) ? val_output_1_3_V_9_fu_468 : val_output_1_3_V_16_fu_3917_p3);

assign val_output_1_3_V_18_fu_3931_p3 = ((icmp_ln203_2_reg_5142[0:0] === 1'b1) ? val_output_1_3_V_9_fu_468 : val_output_1_3_V_17_fu_3924_p3);

assign val_output_1_3_V_19_fu_3938_p3 = ((icmp_ln203_1_reg_5105[0:0] === 1'b1) ? val_output_1_3_V_22_fu_3890_p3 : val_output_1_3_V_6_fu_464);

assign val_output_1_3_V_20_fu_3945_p3 = ((icmp_ln203_2_reg_5142[0:0] === 1'b1) ? val_output_1_3_V_6_fu_464 : val_output_1_3_V_19_fu_3938_p3);

assign val_output_1_3_V_21_fu_3952_p3 = ((icmp_ln203_2_reg_5142[0:0] === 1'b1) ? val_output_1_3_V_22_fu_3890_p3 : val_output_1_3_V_1_fu_460);

assign val_output_1_3_V_22_fu_3890_p3 = ((icmp_ln1494_5_fu_3886_p2[0:0] === 1'b1) ? tmp_8_reg_5280 : select_ln148_4_reg_5274);

assign val_output_1_3_V_fu_3896_p3 = ((icmp_ln203_reg_5079[0:0] === 1'b1) ? val_output_1_3_V_4_fu_472 : val_output_1_3_V_22_fu_3890_p3);

assign val_output_2_3_V_14_fu_3976_p3 = ((icmp_ln203_1_reg_5105[0:0] === 1'b1) ? val_output_2_3_V_4_fu_488 : val_output_2_3_V_fu_3969_p3);

assign val_output_2_3_V_15_fu_3983_p3 = ((icmp_ln203_2_reg_5142[0:0] === 1'b1) ? val_output_2_3_V_4_fu_488 : val_output_2_3_V_14_fu_3976_p3);

assign val_output_2_3_V_16_fu_3990_p3 = ((icmp_ln203_reg_5079[0:0] === 1'b1) ? val_output_2_3_V_22_fu_3963_p3 : val_output_2_3_V_9_fu_484);

assign val_output_2_3_V_17_fu_3997_p3 = ((icmp_ln203_1_reg_5105[0:0] === 1'b1) ? val_output_2_3_V_9_fu_484 : val_output_2_3_V_16_fu_3990_p3);

assign val_output_2_3_V_18_fu_4004_p3 = ((icmp_ln203_2_reg_5142[0:0] === 1'b1) ? val_output_2_3_V_9_fu_484 : val_output_2_3_V_17_fu_3997_p3);

assign val_output_2_3_V_19_fu_4011_p3 = ((icmp_ln203_1_reg_5105[0:0] === 1'b1) ? val_output_2_3_V_22_fu_3963_p3 : val_output_2_3_V_6_fu_480);

assign val_output_2_3_V_20_fu_4018_p3 = ((icmp_ln203_2_reg_5142[0:0] === 1'b1) ? val_output_2_3_V_6_fu_480 : val_output_2_3_V_19_fu_4011_p3);

assign val_output_2_3_V_21_fu_4025_p3 = ((icmp_ln203_2_reg_5142[0:0] === 1'b1) ? val_output_2_3_V_22_fu_3963_p3 : val_output_2_3_V_1_fu_476);

assign val_output_2_3_V_22_fu_3963_p3 = ((icmp_ln1494_8_fu_3959_p2[0:0] === 1'b1) ? tmp_11_reg_5292 : select_ln148_7_reg_5286);

assign val_output_2_3_V_fu_3969_p3 = ((icmp_ln203_reg_5079[0:0] === 1'b1) ? val_output_2_3_V_4_fu_488 : val_output_2_3_V_22_fu_3963_p3);

assign window_group_0_3_va_32_fu_1973_p3 = ((icmp_ln203_fu_1967_p2[0:0] === 1'b1) ? window_group_0_3_va_12_fu_236 : line_buff_group_0_va_q0);

assign window_group_0_3_va_33_fu_1987_p3 = ((icmp_ln203_1_fu_1981_p2[0:0] === 1'b1) ? window_group_0_3_va_12_fu_236 : window_group_0_3_va_32_fu_1973_p3);

assign window_group_0_3_va_34_fu_2001_p3 = ((icmp_ln203_2_fu_1995_p2[0:0] === 1'b1) ? window_group_0_3_va_12_fu_236 : window_group_0_3_va_33_fu_1987_p3);

assign window_group_0_3_va_35_fu_2009_p3 = ((icmp_ln203_fu_1967_p2[0:0] === 1'b1) ? line_buff_group_0_va_q0 : window_group_0_3_va_8_fu_220);

assign window_group_0_3_va_36_fu_2017_p3 = ((icmp_ln203_1_fu_1981_p2[0:0] === 1'b1) ? window_group_0_3_va_8_fu_220 : window_group_0_3_va_35_fu_2009_p3);

assign window_group_0_3_va_37_fu_2025_p3 = ((icmp_ln203_2_fu_1995_p2[0:0] === 1'b1) ? window_group_0_3_va_8_fu_220 : window_group_0_3_va_36_fu_2017_p3);

assign window_group_0_3_va_38_fu_2033_p3 = ((icmp_ln203_1_fu_1981_p2[0:0] === 1'b1) ? line_buff_group_0_va_q0 : window_group_0_3_va_4_fu_204);

assign window_group_0_3_va_39_fu_2041_p3 = ((icmp_ln203_2_fu_1995_p2[0:0] === 1'b1) ? window_group_0_3_va_4_fu_204 : window_group_0_3_va_38_fu_2033_p3);

assign window_group_0_3_va_40_fu_2049_p3 = ((icmp_ln203_2_fu_1995_p2[0:0] === 1'b1) ? line_buff_group_0_va_q0 : window_group_0_3_va_fu_188);

assign window_group_0_3_va_41_fu_2057_p3 = ((icmp_ln203_fu_1967_p2[0:0] === 1'b1) ? window_group_0_3_va_13_fu_240 : line_buff_group_0_va_q1);

assign window_group_0_3_va_42_fu_2065_p3 = ((icmp_ln203_1_fu_1981_p2[0:0] === 1'b1) ? window_group_0_3_va_13_fu_240 : window_group_0_3_va_41_fu_2057_p3);

assign window_group_0_3_va_43_fu_2073_p3 = ((icmp_ln203_2_fu_1995_p2[0:0] === 1'b1) ? window_group_0_3_va_13_fu_240 : window_group_0_3_va_42_fu_2065_p3);

assign window_group_0_3_va_44_fu_2081_p3 = ((icmp_ln203_fu_1967_p2[0:0] === 1'b1) ? line_buff_group_0_va_q1 : window_group_0_3_va_9_fu_224);

assign window_group_0_3_va_45_fu_2089_p3 = ((icmp_ln203_1_fu_1981_p2[0:0] === 1'b1) ? window_group_0_3_va_9_fu_224 : window_group_0_3_va_44_fu_2081_p3);

assign window_group_0_3_va_46_fu_2097_p3 = ((icmp_ln203_2_fu_1995_p2[0:0] === 1'b1) ? window_group_0_3_va_9_fu_224 : window_group_0_3_va_45_fu_2089_p3);

assign window_group_0_3_va_47_fu_2105_p3 = ((icmp_ln203_1_fu_1981_p2[0:0] === 1'b1) ? line_buff_group_0_va_q1 : window_group_0_3_va_5_fu_208);

assign window_group_0_3_va_48_fu_2113_p3 = ((icmp_ln203_2_fu_1995_p2[0:0] === 1'b1) ? window_group_0_3_va_5_fu_208 : window_group_0_3_va_47_fu_2105_p3);

assign window_group_0_3_va_49_fu_2121_p3 = ((icmp_ln203_2_fu_1995_p2[0:0] === 1'b1) ? line_buff_group_0_va_q1 : window_group_0_3_va_1_fu_192);

assign window_group_0_3_va_50_fu_2929_p3 = ((icmp_ln203_reg_5079[0:0] === 1'b1) ? window_group_0_3_va_14_fu_244 : window_group_0_2_va_2_reg_5056);

assign window_group_0_3_va_51_fu_2935_p3 = ((icmp_ln203_1_reg_5105[0:0] === 1'b1) ? window_group_0_3_va_14_fu_244 : window_group_0_3_va_50_fu_2929_p3);

assign window_group_0_3_va_52_fu_2942_p3 = ((icmp_ln203_2_reg_5142[0:0] === 1'b1) ? window_group_0_3_va_14_fu_244 : window_group_0_3_va_51_fu_2935_p3);

assign window_group_0_3_va_53_fu_2949_p3 = ((icmp_ln203_reg_5079[0:0] === 1'b1) ? window_group_0_2_va_2_reg_5056 : window_group_0_3_va_10_fu_228);

assign window_group_0_3_va_54_fu_2955_p3 = ((icmp_ln203_1_reg_5105[0:0] === 1'b1) ? window_group_0_3_va_10_fu_228 : window_group_0_3_va_53_fu_2949_p3);

assign window_group_0_3_va_55_fu_2962_p3 = ((icmp_ln203_2_reg_5142[0:0] === 1'b1) ? window_group_0_3_va_10_fu_228 : window_group_0_3_va_54_fu_2955_p3);

assign window_group_0_3_va_56_fu_2969_p3 = ((icmp_ln203_1_reg_5105[0:0] === 1'b1) ? window_group_0_2_va_2_reg_5056 : window_group_0_3_va_6_fu_212);

assign window_group_0_3_va_57_fu_2975_p3 = ((icmp_ln203_2_reg_5142[0:0] === 1'b1) ? window_group_0_3_va_6_fu_212 : window_group_0_3_va_56_fu_2969_p3);

assign window_group_0_3_va_58_fu_2982_p3 = ((icmp_ln203_2_reg_5142[0:0] === 1'b1) ? window_group_0_2_va_2_reg_5056 : window_group_0_3_va_2_fu_196);

assign window_group_0_3_va_59_fu_2988_p3 = ((icmp_ln203_reg_5079[0:0] === 1'b1) ? window_group_0_3_va_15_fu_248 : line_buff_group_0_va_1_q1);

assign window_group_0_3_va_60_fu_2995_p3 = ((icmp_ln203_1_reg_5105[0:0] === 1'b1) ? window_group_0_3_va_15_fu_248 : window_group_0_3_va_59_fu_2988_p3);

assign window_group_0_3_va_61_fu_3002_p3 = ((icmp_ln203_2_reg_5142[0:0] === 1'b1) ? window_group_0_3_va_15_fu_248 : window_group_0_3_va_60_fu_2995_p3);

assign window_group_0_3_va_62_fu_3009_p3 = ((icmp_ln203_reg_5079[0:0] === 1'b1) ? line_buff_group_0_va_1_q1 : window_group_0_3_va_11_fu_232);

assign window_group_0_3_va_63_fu_3016_p3 = ((icmp_ln203_1_reg_5105[0:0] === 1'b1) ? window_group_0_3_va_11_fu_232 : window_group_0_3_va_62_fu_3009_p3);

assign window_group_0_3_va_64_fu_3023_p3 = ((icmp_ln203_2_reg_5142[0:0] === 1'b1) ? window_group_0_3_va_11_fu_232 : window_group_0_3_va_63_fu_3016_p3);

assign window_group_0_3_va_65_fu_3030_p3 = ((icmp_ln203_1_reg_5105[0:0] === 1'b1) ? line_buff_group_0_va_1_q1 : window_group_0_3_va_7_fu_216);

assign window_group_0_3_va_66_fu_3037_p3 = ((icmp_ln203_2_reg_5142[0:0] === 1'b1) ? window_group_0_3_va_7_fu_216 : window_group_0_3_va_65_fu_3030_p3);

assign window_group_0_3_va_67_fu_3044_p3 = ((icmp_ln203_2_reg_5142[0:0] === 1'b1) ? line_buff_group_0_va_1_q1 : window_group_0_3_va_3_fu_200);

assign window_group_1_3_va_32_fu_2129_p3 = ((icmp_ln203_fu_1967_p2[0:0] === 1'b1) ? window_group_1_3_va_12_fu_300 : line_buff_group_1_va_q0);

assign window_group_1_3_va_33_fu_2137_p3 = ((icmp_ln203_1_fu_1981_p2[0:0] === 1'b1) ? window_group_1_3_va_12_fu_300 : window_group_1_3_va_32_fu_2129_p3);

assign window_group_1_3_va_34_fu_2145_p3 = ((icmp_ln203_2_fu_1995_p2[0:0] === 1'b1) ? window_group_1_3_va_12_fu_300 : window_group_1_3_va_33_fu_2137_p3);

assign window_group_1_3_va_35_fu_2153_p3 = ((icmp_ln203_fu_1967_p2[0:0] === 1'b1) ? line_buff_group_1_va_q0 : window_group_1_3_va_8_fu_284);

assign window_group_1_3_va_36_fu_2161_p3 = ((icmp_ln203_1_fu_1981_p2[0:0] === 1'b1) ? window_group_1_3_va_8_fu_284 : window_group_1_3_va_35_fu_2153_p3);

assign window_group_1_3_va_37_fu_2169_p3 = ((icmp_ln203_2_fu_1995_p2[0:0] === 1'b1) ? window_group_1_3_va_8_fu_284 : window_group_1_3_va_36_fu_2161_p3);

assign window_group_1_3_va_38_fu_2177_p3 = ((icmp_ln203_1_fu_1981_p2[0:0] === 1'b1) ? line_buff_group_1_va_q0 : window_group_1_3_va_4_fu_268);

assign window_group_1_3_va_39_fu_2185_p3 = ((icmp_ln203_2_fu_1995_p2[0:0] === 1'b1) ? window_group_1_3_va_4_fu_268 : window_group_1_3_va_38_fu_2177_p3);

assign window_group_1_3_va_40_fu_2193_p3 = ((icmp_ln203_2_fu_1995_p2[0:0] === 1'b1) ? line_buff_group_1_va_q0 : window_group_1_3_va_fu_252);

assign window_group_1_3_va_41_fu_2201_p3 = ((icmp_ln203_fu_1967_p2[0:0] === 1'b1) ? window_group_1_3_va_13_fu_304 : line_buff_group_1_va_q1);

assign window_group_1_3_va_42_fu_2209_p3 = ((icmp_ln203_1_fu_1981_p2[0:0] === 1'b1) ? window_group_1_3_va_13_fu_304 : window_group_1_3_va_41_fu_2201_p3);

assign window_group_1_3_va_43_fu_2217_p3 = ((icmp_ln203_2_fu_1995_p2[0:0] === 1'b1) ? window_group_1_3_va_13_fu_304 : window_group_1_3_va_42_fu_2209_p3);

assign window_group_1_3_va_44_fu_2225_p3 = ((icmp_ln203_fu_1967_p2[0:0] === 1'b1) ? line_buff_group_1_va_q1 : window_group_1_3_va_9_fu_288);

assign window_group_1_3_va_45_fu_2233_p3 = ((icmp_ln203_1_fu_1981_p2[0:0] === 1'b1) ? window_group_1_3_va_9_fu_288 : window_group_1_3_va_44_fu_2225_p3);

assign window_group_1_3_va_46_fu_2241_p3 = ((icmp_ln203_2_fu_1995_p2[0:0] === 1'b1) ? window_group_1_3_va_9_fu_288 : window_group_1_3_va_45_fu_2233_p3);

assign window_group_1_3_va_47_fu_2249_p3 = ((icmp_ln203_1_fu_1981_p2[0:0] === 1'b1) ? line_buff_group_1_va_q1 : window_group_1_3_va_5_fu_272);

assign window_group_1_3_va_48_fu_2257_p3 = ((icmp_ln203_2_fu_1995_p2[0:0] === 1'b1) ? window_group_1_3_va_5_fu_272 : window_group_1_3_va_47_fu_2249_p3);

assign window_group_1_3_va_49_fu_2265_p3 = ((icmp_ln203_2_fu_1995_p2[0:0] === 1'b1) ? line_buff_group_1_va_q1 : window_group_1_3_va_1_fu_256);

assign window_group_1_3_va_50_fu_3051_p3 = ((icmp_ln203_reg_5079[0:0] === 1'b1) ? window_group_1_3_va_14_fu_308 : window_group_1_2_va_2_reg_5190);

assign window_group_1_3_va_51_fu_3057_p3 = ((icmp_ln203_1_reg_5105[0:0] === 1'b1) ? window_group_1_3_va_14_fu_308 : window_group_1_3_va_50_fu_3051_p3);

assign window_group_1_3_va_52_fu_3064_p3 = ((icmp_ln203_2_reg_5142[0:0] === 1'b1) ? window_group_1_3_va_14_fu_308 : window_group_1_3_va_51_fu_3057_p3);

assign window_group_1_3_va_53_fu_3071_p3 = ((icmp_ln203_reg_5079[0:0] === 1'b1) ? window_group_1_2_va_2_reg_5190 : window_group_1_3_va_10_fu_292);

assign window_group_1_3_va_54_fu_3077_p3 = ((icmp_ln203_1_reg_5105[0:0] === 1'b1) ? window_group_1_3_va_10_fu_292 : window_group_1_3_va_53_fu_3071_p3);

assign window_group_1_3_va_55_fu_3084_p3 = ((icmp_ln203_2_reg_5142[0:0] === 1'b1) ? window_group_1_3_va_10_fu_292 : window_group_1_3_va_54_fu_3077_p3);

assign window_group_1_3_va_56_fu_3091_p3 = ((icmp_ln203_1_reg_5105[0:0] === 1'b1) ? window_group_1_2_va_2_reg_5190 : window_group_1_3_va_6_fu_276);

assign window_group_1_3_va_57_fu_3097_p3 = ((icmp_ln203_2_reg_5142[0:0] === 1'b1) ? window_group_1_3_va_6_fu_276 : window_group_1_3_va_56_fu_3091_p3);

assign window_group_1_3_va_58_fu_3104_p3 = ((icmp_ln203_2_reg_5142[0:0] === 1'b1) ? window_group_1_2_va_2_reg_5190 : window_group_1_3_va_2_fu_260);

assign window_group_1_3_va_59_fu_3110_p3 = ((icmp_ln203_reg_5079[0:0] === 1'b1) ? window_group_1_3_va_15_fu_312 : line_buff_group_1_va_1_q1);

assign window_group_1_3_va_60_fu_3117_p3 = ((icmp_ln203_1_reg_5105[0:0] === 1'b1) ? window_group_1_3_va_15_fu_312 : window_group_1_3_va_59_fu_3110_p3);

assign window_group_1_3_va_61_fu_3124_p3 = ((icmp_ln203_2_reg_5142[0:0] === 1'b1) ? window_group_1_3_va_15_fu_312 : window_group_1_3_va_60_fu_3117_p3);

assign window_group_1_3_va_62_fu_3131_p3 = ((icmp_ln203_reg_5079[0:0] === 1'b1) ? line_buff_group_1_va_1_q1 : window_group_1_3_va_11_fu_296);

assign window_group_1_3_va_63_fu_3138_p3 = ((icmp_ln203_1_reg_5105[0:0] === 1'b1) ? window_group_1_3_va_11_fu_296 : window_group_1_3_va_62_fu_3131_p3);

assign window_group_1_3_va_64_fu_3145_p3 = ((icmp_ln203_2_reg_5142[0:0] === 1'b1) ? window_group_1_3_va_11_fu_296 : window_group_1_3_va_63_fu_3138_p3);

assign window_group_1_3_va_65_fu_3152_p3 = ((icmp_ln203_1_reg_5105[0:0] === 1'b1) ? line_buff_group_1_va_1_q1 : window_group_1_3_va_7_fu_280);

assign window_group_1_3_va_66_fu_3159_p3 = ((icmp_ln203_2_reg_5142[0:0] === 1'b1) ? window_group_1_3_va_7_fu_280 : window_group_1_3_va_65_fu_3152_p3);

assign window_group_1_3_va_67_fu_3166_p3 = ((icmp_ln203_2_reg_5142[0:0] === 1'b1) ? line_buff_group_1_va_1_q1 : window_group_1_3_va_3_fu_264);

assign window_group_2_3_va_32_fu_2273_p3 = ((icmp_ln203_fu_1967_p2[0:0] === 1'b1) ? window_group_2_3_va_12_fu_364 : line_buff_group_2_va_q0);

assign window_group_2_3_va_33_fu_2281_p3 = ((icmp_ln203_1_fu_1981_p2[0:0] === 1'b1) ? window_group_2_3_va_12_fu_364 : window_group_2_3_va_32_fu_2273_p3);

assign window_group_2_3_va_34_fu_2289_p3 = ((icmp_ln203_2_fu_1995_p2[0:0] === 1'b1) ? window_group_2_3_va_12_fu_364 : window_group_2_3_va_33_fu_2281_p3);

assign window_group_2_3_va_35_fu_2297_p3 = ((icmp_ln203_fu_1967_p2[0:0] === 1'b1) ? line_buff_group_2_va_q0 : window_group_2_3_va_8_fu_348);

assign window_group_2_3_va_36_fu_2305_p3 = ((icmp_ln203_1_fu_1981_p2[0:0] === 1'b1) ? window_group_2_3_va_8_fu_348 : window_group_2_3_va_35_fu_2297_p3);

assign window_group_2_3_va_37_fu_2313_p3 = ((icmp_ln203_2_fu_1995_p2[0:0] === 1'b1) ? window_group_2_3_va_8_fu_348 : window_group_2_3_va_36_fu_2305_p3);

assign window_group_2_3_va_38_fu_2321_p3 = ((icmp_ln203_1_fu_1981_p2[0:0] === 1'b1) ? line_buff_group_2_va_q0 : window_group_2_3_va_4_fu_332);

assign window_group_2_3_va_39_fu_2329_p3 = ((icmp_ln203_2_fu_1995_p2[0:0] === 1'b1) ? window_group_2_3_va_4_fu_332 : window_group_2_3_va_38_fu_2321_p3);

assign window_group_2_3_va_40_fu_2337_p3 = ((icmp_ln203_2_fu_1995_p2[0:0] === 1'b1) ? line_buff_group_2_va_q0 : window_group_2_3_va_fu_316);

assign window_group_2_3_va_41_fu_2345_p3 = ((icmp_ln203_fu_1967_p2[0:0] === 1'b1) ? window_group_2_3_va_13_fu_368 : line_buff_group_2_va_q1);

assign window_group_2_3_va_42_fu_2353_p3 = ((icmp_ln203_1_fu_1981_p2[0:0] === 1'b1) ? window_group_2_3_va_13_fu_368 : window_group_2_3_va_41_fu_2345_p3);

assign window_group_2_3_va_43_fu_2361_p3 = ((icmp_ln203_2_fu_1995_p2[0:0] === 1'b1) ? window_group_2_3_va_13_fu_368 : window_group_2_3_va_42_fu_2353_p3);

assign window_group_2_3_va_44_fu_2369_p3 = ((icmp_ln203_fu_1967_p2[0:0] === 1'b1) ? line_buff_group_2_va_q1 : window_group_2_3_va_9_fu_352);

assign window_group_2_3_va_45_fu_2377_p3 = ((icmp_ln203_1_fu_1981_p2[0:0] === 1'b1) ? window_group_2_3_va_9_fu_352 : window_group_2_3_va_44_fu_2369_p3);

assign window_group_2_3_va_46_fu_2385_p3 = ((icmp_ln203_2_fu_1995_p2[0:0] === 1'b1) ? window_group_2_3_va_9_fu_352 : window_group_2_3_va_45_fu_2377_p3);

assign window_group_2_3_va_47_fu_2393_p3 = ((icmp_ln203_1_fu_1981_p2[0:0] === 1'b1) ? line_buff_group_2_va_q1 : window_group_2_3_va_5_fu_336);

assign window_group_2_3_va_48_fu_2401_p3 = ((icmp_ln203_2_fu_1995_p2[0:0] === 1'b1) ? window_group_2_3_va_5_fu_336 : window_group_2_3_va_47_fu_2393_p3);

assign window_group_2_3_va_49_fu_2409_p3 = ((icmp_ln203_2_fu_1995_p2[0:0] === 1'b1) ? line_buff_group_2_va_q1 : window_group_2_3_va_1_fu_320);

assign window_group_2_3_va_50_fu_3173_p3 = ((icmp_ln203_reg_5079[0:0] === 1'b1) ? window_group_2_3_va_14_fu_372 : window_group_2_2_va_2_reg_5198);

assign window_group_2_3_va_51_fu_3179_p3 = ((icmp_ln203_1_reg_5105[0:0] === 1'b1) ? window_group_2_3_va_14_fu_372 : window_group_2_3_va_50_fu_3173_p3);

assign window_group_2_3_va_52_fu_3186_p3 = ((icmp_ln203_2_reg_5142[0:0] === 1'b1) ? window_group_2_3_va_14_fu_372 : window_group_2_3_va_51_fu_3179_p3);

assign window_group_2_3_va_53_fu_3193_p3 = ((icmp_ln203_reg_5079[0:0] === 1'b1) ? window_group_2_2_va_2_reg_5198 : window_group_2_3_va_10_fu_356);

assign window_group_2_3_va_54_fu_3199_p3 = ((icmp_ln203_1_reg_5105[0:0] === 1'b1) ? window_group_2_3_va_10_fu_356 : window_group_2_3_va_53_fu_3193_p3);

assign window_group_2_3_va_55_fu_3206_p3 = ((icmp_ln203_2_reg_5142[0:0] === 1'b1) ? window_group_2_3_va_10_fu_356 : window_group_2_3_va_54_fu_3199_p3);

assign window_group_2_3_va_56_fu_3213_p3 = ((icmp_ln203_1_reg_5105[0:0] === 1'b1) ? window_group_2_2_va_2_reg_5198 : window_group_2_3_va_6_fu_340);

assign window_group_2_3_va_57_fu_3219_p3 = ((icmp_ln203_2_reg_5142[0:0] === 1'b1) ? window_group_2_3_va_6_fu_340 : window_group_2_3_va_56_fu_3213_p3);

assign window_group_2_3_va_58_fu_3226_p3 = ((icmp_ln203_2_reg_5142[0:0] === 1'b1) ? window_group_2_2_va_2_reg_5198 : window_group_2_3_va_2_fu_324);

assign window_group_2_3_va_59_fu_3232_p3 = ((icmp_ln203_reg_5079[0:0] === 1'b1) ? window_group_2_3_va_15_fu_376 : line_buff_group_2_va_1_q1);

assign window_group_2_3_va_60_fu_3239_p3 = ((icmp_ln203_1_reg_5105[0:0] === 1'b1) ? window_group_2_3_va_15_fu_376 : window_group_2_3_va_59_fu_3232_p3);

assign window_group_2_3_va_61_fu_3246_p3 = ((icmp_ln203_2_reg_5142[0:0] === 1'b1) ? window_group_2_3_va_15_fu_376 : window_group_2_3_va_60_fu_3239_p3);

assign window_group_2_3_va_62_fu_3253_p3 = ((icmp_ln203_reg_5079[0:0] === 1'b1) ? line_buff_group_2_va_1_q1 : window_group_2_3_va_11_fu_360);

assign window_group_2_3_va_63_fu_3260_p3 = ((icmp_ln203_1_reg_5105[0:0] === 1'b1) ? window_group_2_3_va_11_fu_360 : window_group_2_3_va_62_fu_3253_p3);

assign window_group_2_3_va_64_fu_3267_p3 = ((icmp_ln203_2_reg_5142[0:0] === 1'b1) ? window_group_2_3_va_11_fu_360 : window_group_2_3_va_63_fu_3260_p3);

assign window_group_2_3_va_65_fu_3274_p3 = ((icmp_ln203_1_reg_5105[0:0] === 1'b1) ? line_buff_group_2_va_1_q1 : window_group_2_3_va_7_fu_344);

assign window_group_2_3_va_66_fu_3281_p3 = ((icmp_ln203_2_reg_5142[0:0] === 1'b1) ? window_group_2_3_va_7_fu_344 : window_group_2_3_va_65_fu_3274_p3);

assign window_group_2_3_va_67_fu_3288_p3 = ((icmp_ln203_2_reg_5142[0:0] === 1'b1) ? line_buff_group_2_va_1_q1 : window_group_2_3_va_3_fu_328);

assign window_group_3_3_va_32_fu_2417_p3 = ((icmp_ln203_fu_1967_p2[0:0] === 1'b1) ? window_group_3_3_va_12_fu_428 : line_buff_group_3_va_q0);

assign window_group_3_3_va_33_fu_2425_p3 = ((icmp_ln203_1_fu_1981_p2[0:0] === 1'b1) ? window_group_3_3_va_12_fu_428 : window_group_3_3_va_32_fu_2417_p3);

assign window_group_3_3_va_34_fu_2433_p3 = ((icmp_ln203_2_fu_1995_p2[0:0] === 1'b1) ? window_group_3_3_va_12_fu_428 : window_group_3_3_va_33_fu_2425_p3);

assign window_group_3_3_va_35_fu_2441_p3 = ((icmp_ln203_fu_1967_p2[0:0] === 1'b1) ? line_buff_group_3_va_q0 : window_group_3_3_va_8_fu_412);

assign window_group_3_3_va_36_fu_2449_p3 = ((icmp_ln203_1_fu_1981_p2[0:0] === 1'b1) ? window_group_3_3_va_8_fu_412 : window_group_3_3_va_35_fu_2441_p3);

assign window_group_3_3_va_37_fu_2457_p3 = ((icmp_ln203_2_fu_1995_p2[0:0] === 1'b1) ? window_group_3_3_va_8_fu_412 : window_group_3_3_va_36_fu_2449_p3);

assign window_group_3_3_va_38_fu_2465_p3 = ((icmp_ln203_1_fu_1981_p2[0:0] === 1'b1) ? line_buff_group_3_va_q0 : window_group_3_3_va_4_fu_396);

assign window_group_3_3_va_39_fu_2473_p3 = ((icmp_ln203_2_fu_1995_p2[0:0] === 1'b1) ? window_group_3_3_va_4_fu_396 : window_group_3_3_va_38_fu_2465_p3);

assign window_group_3_3_va_40_fu_2481_p3 = ((icmp_ln203_2_fu_1995_p2[0:0] === 1'b1) ? line_buff_group_3_va_q0 : window_group_3_3_va_fu_380);

assign window_group_3_3_va_41_fu_2489_p3 = ((icmp_ln203_fu_1967_p2[0:0] === 1'b1) ? window_group_3_3_va_13_fu_432 : line_buff_group_3_va_q1);

assign window_group_3_3_va_42_fu_2497_p3 = ((icmp_ln203_1_fu_1981_p2[0:0] === 1'b1) ? window_group_3_3_va_13_fu_432 : window_group_3_3_va_41_fu_2489_p3);

assign window_group_3_3_va_43_fu_2505_p3 = ((icmp_ln203_2_fu_1995_p2[0:0] === 1'b1) ? window_group_3_3_va_13_fu_432 : window_group_3_3_va_42_fu_2497_p3);

assign window_group_3_3_va_44_fu_2513_p3 = ((icmp_ln203_fu_1967_p2[0:0] === 1'b1) ? line_buff_group_3_va_q1 : window_group_3_3_va_9_fu_416);

assign window_group_3_3_va_45_fu_2521_p3 = ((icmp_ln203_1_fu_1981_p2[0:0] === 1'b1) ? window_group_3_3_va_9_fu_416 : window_group_3_3_va_44_fu_2513_p3);

assign window_group_3_3_va_46_fu_2529_p3 = ((icmp_ln203_2_fu_1995_p2[0:0] === 1'b1) ? window_group_3_3_va_9_fu_416 : window_group_3_3_va_45_fu_2521_p3);

assign window_group_3_3_va_47_fu_2537_p3 = ((icmp_ln203_1_fu_1981_p2[0:0] === 1'b1) ? line_buff_group_3_va_q1 : window_group_3_3_va_5_fu_400);

assign window_group_3_3_va_48_fu_2545_p3 = ((icmp_ln203_2_fu_1995_p2[0:0] === 1'b1) ? window_group_3_3_va_5_fu_400 : window_group_3_3_va_47_fu_2537_p3);

assign window_group_3_3_va_49_fu_2553_p3 = ((icmp_ln203_2_fu_1995_p2[0:0] === 1'b1) ? line_buff_group_3_va_q1 : window_group_3_3_va_1_fu_384);

assign window_group_3_3_va_50_fu_3295_p3 = ((icmp_ln203_reg_5079[0:0] === 1'b1) ? window_group_3_3_va_14_fu_436 : window_group_3_2_va_2_reg_5206);

assign window_group_3_3_va_51_fu_3301_p3 = ((icmp_ln203_1_reg_5105[0:0] === 1'b1) ? window_group_3_3_va_14_fu_436 : window_group_3_3_va_50_fu_3295_p3);

assign window_group_3_3_va_52_fu_3308_p3 = ((icmp_ln203_2_reg_5142[0:0] === 1'b1) ? window_group_3_3_va_14_fu_436 : window_group_3_3_va_51_fu_3301_p3);

assign window_group_3_3_va_53_fu_3315_p3 = ((icmp_ln203_reg_5079[0:0] === 1'b1) ? window_group_3_2_va_2_reg_5206 : window_group_3_3_va_10_fu_420);

assign window_group_3_3_va_54_fu_3321_p3 = ((icmp_ln203_1_reg_5105[0:0] === 1'b1) ? window_group_3_3_va_10_fu_420 : window_group_3_3_va_53_fu_3315_p3);

assign window_group_3_3_va_55_fu_3328_p3 = ((icmp_ln203_2_reg_5142[0:0] === 1'b1) ? window_group_3_3_va_10_fu_420 : window_group_3_3_va_54_fu_3321_p3);

assign window_group_3_3_va_56_fu_3335_p3 = ((icmp_ln203_1_reg_5105[0:0] === 1'b1) ? window_group_3_2_va_2_reg_5206 : window_group_3_3_va_6_fu_404);

assign window_group_3_3_va_57_fu_3341_p3 = ((icmp_ln203_2_reg_5142[0:0] === 1'b1) ? window_group_3_3_va_6_fu_404 : window_group_3_3_va_56_fu_3335_p3);

assign window_group_3_3_va_58_fu_3348_p3 = ((icmp_ln203_2_reg_5142[0:0] === 1'b1) ? window_group_3_2_va_2_reg_5206 : window_group_3_3_va_2_fu_388);

assign window_group_3_3_va_59_fu_3354_p3 = ((icmp_ln203_reg_5079[0:0] === 1'b1) ? window_group_3_3_va_15_fu_440 : line_buff_group_3_va_1_q1);

assign window_group_3_3_va_60_fu_3361_p3 = ((icmp_ln203_1_reg_5105[0:0] === 1'b1) ? window_group_3_3_va_15_fu_440 : window_group_3_3_va_59_fu_3354_p3);

assign window_group_3_3_va_61_fu_3368_p3 = ((icmp_ln203_2_reg_5142[0:0] === 1'b1) ? window_group_3_3_va_15_fu_440 : window_group_3_3_va_60_fu_3361_p3);

assign window_group_3_3_va_62_fu_3375_p3 = ((icmp_ln203_reg_5079[0:0] === 1'b1) ? line_buff_group_3_va_1_q1 : window_group_3_3_va_11_fu_424);

assign window_group_3_3_va_63_fu_3382_p3 = ((icmp_ln203_1_reg_5105[0:0] === 1'b1) ? window_group_3_3_va_11_fu_424 : window_group_3_3_va_62_fu_3375_p3);

assign window_group_3_3_va_64_fu_3389_p3 = ((icmp_ln203_2_reg_5142[0:0] === 1'b1) ? window_group_3_3_va_11_fu_424 : window_group_3_3_va_63_fu_3382_p3);

assign window_group_3_3_va_65_fu_3396_p3 = ((icmp_ln203_1_reg_5105[0:0] === 1'b1) ? line_buff_group_3_va_1_q1 : window_group_3_3_va_7_fu_408);

assign window_group_3_3_va_66_fu_3403_p3 = ((icmp_ln203_2_reg_5142[0:0] === 1'b1) ? window_group_3_3_va_7_fu_408 : window_group_3_3_va_65_fu_3396_p3);

assign window_group_3_3_va_67_fu_3410_p3 = ((icmp_ln203_2_reg_5142[0:0] === 1'b1) ? line_buff_group_3_va_1_q1 : window_group_3_3_va_3_fu_392);

assign xor_ln37_fu_1212_p2 = (icmp_ln39_fu_1182_p2 ^ 1'd1);

assign xor_ln39_fu_1288_p2 = (icmp_ln41_fu_1236_p2 ^ 1'd1);

assign xor_ln41_fu_1332_p2 = (1'd1 ^ and_ln39_3_fu_1300_p2);

assign zext_ln43_1_fu_1556_p1 = col_stride_reg_4817;

assign zext_ln43_2_fu_1822_p1 = select_ln43_2_reg_4847;

assign zext_ln43_3_fu_1825_p1 = select_ln43_4_reg_4852;

assign zext_ln43_fu_1096_p1 = ap_phi_mux_col_stride_0_phi_fu_923_p4;

assign zext_ln50_1_fu_1470_p1 = shl_ln50_mid1_fu_1444_p3;

assign zext_ln50_2_fu_1565_p1 = add_ln50_1_fu_1559_p2;

assign zext_ln50_fu_1106_p1 = col_idx_fu_1100_p2;

assign zext_ln53_1_fu_1268_p1 = row_stride_fu_1248_p2;

assign zext_ln53_fu_1056_p1 = ap_phi_mux_row_stride_0_phi_fu_877_p4;

always @ (posedge ap_clk) begin
    shl_ln1_reg_4669[0] <= 1'b0;
end

endmodule //yolo_max_pool_top
