// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="yolo_max_pool_top,hls_ip_2019_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.453500,HLS_SYN_LAT=2768920,HLS_SYN_TPT=none,HLS_SYN_MEM=16,HLS_SYN_DSP=0,HLS_SYN_FF=2767,HLS_SYN_LUT=7789,HLS_VERSION=2019_1}" *)

module yolo_max_pool_top (
        ap_clk,
        ap_rst_n,
        inStream_TDATA,
        inStream_TVALID,
        inStream_TREADY,
        inStream_TKEEP,
        inStream_TSTRB,
        inStream_TUSER,
        inStream_TLAST,
        inStream_TID,
        inStream_TDEST,
        outStream_TDATA,
        outStream_TVALID,
        outStream_TREADY,
        outStream_TKEEP,
        outStream_TSTRB,
        outStream_TUSER,
        outStream_TLAST,
        outStream_TID,
        outStream_TDEST,
        s_axi_AXILiteS_AWVALID,
        s_axi_AXILiteS_AWREADY,
        s_axi_AXILiteS_AWADDR,
        s_axi_AXILiteS_WVALID,
        s_axi_AXILiteS_WREADY,
        s_axi_AXILiteS_WDATA,
        s_axi_AXILiteS_WSTRB,
        s_axi_AXILiteS_ARVALID,
        s_axi_AXILiteS_ARREADY,
        s_axi_AXILiteS_ARADDR,
        s_axi_AXILiteS_RVALID,
        s_axi_AXILiteS_RREADY,
        s_axi_AXILiteS_RDATA,
        s_axi_AXILiteS_RRESP,
        s_axi_AXILiteS_BVALID,
        s_axi_AXILiteS_BREADY,
        s_axi_AXILiteS_BRESP,
        interrupt
);

parameter    ap_ST_fsm_state1 = 6'd1;
parameter    ap_ST_fsm_state2 = 6'd2;
parameter    ap_ST_fsm_state3 = 6'd4;
parameter    ap_ST_fsm_pp0_stage0 = 6'd8;
parameter    ap_ST_fsm_pp0_stage1 = 6'd16;
parameter    ap_ST_fsm_state13 = 6'd32;
parameter    C_S_AXI_AXILITES_DATA_WIDTH = 32;
parameter    C_S_AXI_AXILITES_ADDR_WIDTH = 4;
parameter    C_S_AXI_DATA_WIDTH = 32;

parameter C_S_AXI_AXILITES_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
input  [31:0] inStream_TDATA;
input   inStream_TVALID;
output   inStream_TREADY;
input  [3:0] inStream_TKEEP;
input  [3:0] inStream_TSTRB;
input  [1:0] inStream_TUSER;
input  [0:0] inStream_TLAST;
input  [4:0] inStream_TID;
input  [5:0] inStream_TDEST;
output  [31:0] outStream_TDATA;
output   outStream_TVALID;
input   outStream_TREADY;
output  [3:0] outStream_TKEEP;
output  [3:0] outStream_TSTRB;
output  [1:0] outStream_TUSER;
output  [0:0] outStream_TLAST;
output  [4:0] outStream_TID;
output  [5:0] outStream_TDEST;
input   s_axi_AXILiteS_AWVALID;
output   s_axi_AXILiteS_AWREADY;
input  [C_S_AXI_AXILITES_ADDR_WIDTH - 1:0] s_axi_AXILiteS_AWADDR;
input   s_axi_AXILiteS_WVALID;
output   s_axi_AXILiteS_WREADY;
input  [C_S_AXI_AXILITES_DATA_WIDTH - 1:0] s_axi_AXILiteS_WDATA;
input  [C_S_AXI_AXILITES_WSTRB_WIDTH - 1:0] s_axi_AXILiteS_WSTRB;
input   s_axi_AXILiteS_ARVALID;
output   s_axi_AXILiteS_ARREADY;
input  [C_S_AXI_AXILITES_ADDR_WIDTH - 1:0] s_axi_AXILiteS_ARADDR;
output   s_axi_AXILiteS_RVALID;
input   s_axi_AXILiteS_RREADY;
output  [C_S_AXI_AXILITES_DATA_WIDTH - 1:0] s_axi_AXILiteS_RDATA;
output  [1:0] s_axi_AXILiteS_RRESP;
output   s_axi_AXILiteS_BVALID;
input   s_axi_AXILiteS_BREADY;
output  [1:0] s_axi_AXILiteS_BRESP;
output   interrupt;

 reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [5:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_ready;
reg   [31:0] inStream_V_data_0_data_out;
wire    inStream_V_data_0_vld_in;
wire    inStream_V_data_0_vld_out;
wire    inStream_V_data_0_ack_in;
reg    inStream_V_data_0_ack_out;
reg   [31:0] inStream_V_data_0_payload_A;
reg   [31:0] inStream_V_data_0_payload_B;
reg    inStream_V_data_0_sel_rd;
reg    inStream_V_data_0_sel_wr;
wire    inStream_V_data_0_sel;
wire    inStream_V_data_0_load_A;
wire    inStream_V_data_0_load_B;
reg   [1:0] inStream_V_data_0_state;
wire    inStream_V_data_0_state_cmp_full;
reg   [3:0] inStream_V_keep_V_0_data_out;
wire    inStream_V_keep_V_0_vld_in;
wire    inStream_V_keep_V_0_vld_out;
wire    inStream_V_keep_V_0_ack_in;
reg    inStream_V_keep_V_0_ack_out;
reg   [3:0] inStream_V_keep_V_0_payload_A;
reg   [3:0] inStream_V_keep_V_0_payload_B;
reg    inStream_V_keep_V_0_sel_rd;
reg    inStream_V_keep_V_0_sel_wr;
wire    inStream_V_keep_V_0_sel;
wire    inStream_V_keep_V_0_load_A;
wire    inStream_V_keep_V_0_load_B;
reg   [1:0] inStream_V_keep_V_0_state;
wire    inStream_V_keep_V_0_state_cmp_full;
reg   [3:0] inStream_V_strb_V_0_data_out;
wire    inStream_V_strb_V_0_vld_in;
wire    inStream_V_strb_V_0_vld_out;
wire    inStream_V_strb_V_0_ack_in;
reg    inStream_V_strb_V_0_ack_out;
reg   [3:0] inStream_V_strb_V_0_payload_A;
reg   [3:0] inStream_V_strb_V_0_payload_B;
reg    inStream_V_strb_V_0_sel_rd;
reg    inStream_V_strb_V_0_sel_wr;
wire    inStream_V_strb_V_0_sel;
wire    inStream_V_strb_V_0_load_A;
wire    inStream_V_strb_V_0_load_B;
reg   [1:0] inStream_V_strb_V_0_state;
wire    inStream_V_strb_V_0_state_cmp_full;
reg   [1:0] inStream_V_user_V_0_data_out;
wire    inStream_V_user_V_0_vld_in;
wire    inStream_V_user_V_0_vld_out;
wire    inStream_V_user_V_0_ack_in;
reg    inStream_V_user_V_0_ack_out;
reg   [1:0] inStream_V_user_V_0_payload_A;
reg   [1:0] inStream_V_user_V_0_payload_B;
reg    inStream_V_user_V_0_sel_rd;
reg    inStream_V_user_V_0_sel_wr;
wire    inStream_V_user_V_0_sel;
wire    inStream_V_user_V_0_load_A;
wire    inStream_V_user_V_0_load_B;
reg   [1:0] inStream_V_user_V_0_state;
wire    inStream_V_user_V_0_state_cmp_full;
reg   [4:0] inStream_V_id_V_0_data_out;
wire    inStream_V_id_V_0_vld_in;
wire    inStream_V_id_V_0_vld_out;
wire    inStream_V_id_V_0_ack_in;
reg    inStream_V_id_V_0_ack_out;
reg   [4:0] inStream_V_id_V_0_payload_A;
reg   [4:0] inStream_V_id_V_0_payload_B;
reg    inStream_V_id_V_0_sel_rd;
reg    inStream_V_id_V_0_sel_wr;
wire    inStream_V_id_V_0_sel;
wire    inStream_V_id_V_0_load_A;
wire    inStream_V_id_V_0_load_B;
reg   [1:0] inStream_V_id_V_0_state;
wire    inStream_V_id_V_0_state_cmp_full;
reg   [5:0] inStream_V_dest_V_0_data_out;
wire    inStream_V_dest_V_0_vld_in;
wire    inStream_V_dest_V_0_vld_out;
wire    inStream_V_dest_V_0_ack_in;
reg    inStream_V_dest_V_0_ack_out;
reg   [5:0] inStream_V_dest_V_0_payload_A;
reg   [5:0] inStream_V_dest_V_0_payload_B;
reg    inStream_V_dest_V_0_sel_rd;
reg    inStream_V_dest_V_0_sel_wr;
wire    inStream_V_dest_V_0_sel;
wire    inStream_V_dest_V_0_load_A;
wire    inStream_V_dest_V_0_load_B;
reg   [1:0] inStream_V_dest_V_0_state;
wire    inStream_V_dest_V_0_state_cmp_full;
reg   [31:0] outStream_V_data_1_data_out;
wire    outStream_V_data_1_vld_in;
wire    outStream_V_data_1_vld_out;
wire    outStream_V_data_1_ack_in;
wire    outStream_V_data_1_ack_out;
reg   [31:0] outStream_V_data_1_payload_A;
reg   [31:0] outStream_V_data_1_payload_B;
reg    outStream_V_data_1_sel_rd;
reg    outStream_V_data_1_sel_wr;
wire    outStream_V_data_1_sel;
wire    outStream_V_data_1_load_A;
wire    outStream_V_data_1_load_B;
reg   [1:0] outStream_V_data_1_state;
wire    outStream_V_data_1_state_cmp_full;
reg   [3:0] outStream_V_keep_V_1_data_out;
wire    outStream_V_keep_V_1_vld_in;
wire    outStream_V_keep_V_1_vld_out;
wire    outStream_V_keep_V_1_ack_in;
wire    outStream_V_keep_V_1_ack_out;
reg   [3:0] outStream_V_keep_V_1_payload_A;
reg   [3:0] outStream_V_keep_V_1_payload_B;
reg    outStream_V_keep_V_1_sel_rd;
reg    outStream_V_keep_V_1_sel_wr;
wire    outStream_V_keep_V_1_sel;
wire    outStream_V_keep_V_1_load_A;
wire    outStream_V_keep_V_1_load_B;
reg   [1:0] outStream_V_keep_V_1_state;
wire    outStream_V_keep_V_1_state_cmp_full;
reg   [3:0] outStream_V_strb_V_1_data_out;
wire    outStream_V_strb_V_1_vld_in;
wire    outStream_V_strb_V_1_vld_out;
wire    outStream_V_strb_V_1_ack_in;
wire    outStream_V_strb_V_1_ack_out;
reg   [3:0] outStream_V_strb_V_1_payload_A;
reg   [3:0] outStream_V_strb_V_1_payload_B;
reg    outStream_V_strb_V_1_sel_rd;
reg    outStream_V_strb_V_1_sel_wr;
wire    outStream_V_strb_V_1_sel;
wire    outStream_V_strb_V_1_load_A;
wire    outStream_V_strb_V_1_load_B;
reg   [1:0] outStream_V_strb_V_1_state;
wire    outStream_V_strb_V_1_state_cmp_full;
reg   [1:0] outStream_V_user_V_1_data_out;
wire    outStream_V_user_V_1_vld_in;
wire    outStream_V_user_V_1_vld_out;
wire    outStream_V_user_V_1_ack_in;
wire    outStream_V_user_V_1_ack_out;
reg   [1:0] outStream_V_user_V_1_payload_A;
reg   [1:0] outStream_V_user_V_1_payload_B;
reg    outStream_V_user_V_1_sel_rd;
reg    outStream_V_user_V_1_sel_wr;
wire    outStream_V_user_V_1_sel;
wire    outStream_V_user_V_1_load_A;
wire    outStream_V_user_V_1_load_B;
reg   [1:0] outStream_V_user_V_1_state;
wire    outStream_V_user_V_1_state_cmp_full;
reg   [0:0] outStream_V_last_V_1_data_out;
wire    outStream_V_last_V_1_vld_in;
wire    outStream_V_last_V_1_vld_out;
wire    outStream_V_last_V_1_ack_in;
wire    outStream_V_last_V_1_ack_out;
reg   [0:0] outStream_V_last_V_1_payload_A;
reg   [0:0] outStream_V_last_V_1_payload_B;
reg    outStream_V_last_V_1_sel_rd;
reg    outStream_V_last_V_1_sel_wr;
wire    outStream_V_last_V_1_sel;
wire    outStream_V_last_V_1_load_A;
wire    outStream_V_last_V_1_load_B;
reg   [1:0] outStream_V_last_V_1_state;
wire    outStream_V_last_V_1_state_cmp_full;
reg   [4:0] outStream_V_id_V_1_data_out;
wire    outStream_V_id_V_1_vld_in;
wire    outStream_V_id_V_1_vld_out;
wire    outStream_V_id_V_1_ack_in;
wire    outStream_V_id_V_1_ack_out;
reg   [4:0] outStream_V_id_V_1_payload_A;
reg   [4:0] outStream_V_id_V_1_payload_B;
reg    outStream_V_id_V_1_sel_rd;
reg    outStream_V_id_V_1_sel_wr;
wire    outStream_V_id_V_1_sel;
wire    outStream_V_id_V_1_load_A;
wire    outStream_V_id_V_1_load_B;
reg   [1:0] outStream_V_id_V_1_state;
wire    outStream_V_id_V_1_state_cmp_full;
reg   [5:0] outStream_V_dest_V_1_data_out;
wire    outStream_V_dest_V_1_vld_in;
wire    outStream_V_dest_V_1_vld_out;
wire    outStream_V_dest_V_1_ack_in;
wire    outStream_V_dest_V_1_ack_out;
reg   [5:0] outStream_V_dest_V_1_payload_A;
reg   [5:0] outStream_V_dest_V_1_payload_B;
reg    outStream_V_dest_V_1_sel_rd;
reg    outStream_V_dest_V_1_sel_wr;
wire    outStream_V_dest_V_1_sel;
wire    outStream_V_dest_V_1_load_A;
wire    outStream_V_dest_V_1_load_B;
reg   [1:0] outStream_V_dest_V_1_state;
wire    outStream_V_dest_V_1_state_cmp_full;
reg    inStream_TDATA_blk_n;
wire    ap_CS_fsm_pp0_stage1;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_pp0_stage1;
reg   [0:0] icmp_ln21_reg_5346;
wire    call_ln79_write_output_fu_750_outStream_TDATA_blk_n;
reg    outStream_TDATA_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter4;
wire    ap_block_pp0_stage0;
reg   [0:0] select_ln27_1_reg_5490;
reg   [0:0] select_ln27_1_reg_5490_pp0_iter3_reg;
reg   [20:0] indvar_flatten823_reg_646;
reg   [7:0] out_row_0_reg_657;
reg   [13:0] indvar_flatten461_reg_669;
reg   [1:0] row_stride_0_reg_681;
reg   [12:0] indvar_flatten187_reg_692;
reg   [7:0] out_col_0_reg_704;
reg   [5:0] indvar_flatten_reg_715;
reg   [1:0] col_stride_0_reg_727;
reg   [3:0] input_ch_idx_0_reg_738;
wire   [15:0] line_buff_group_0_va_1_q1;
reg   [15:0] reg_776;
reg    ap_enable_reg_pp0_iter2;
reg    ap_block_state5_pp0_stage1_iter0;
wire    ap_block_state7_pp0_stage1_iter1;
wire    ap_block_state9_pp0_stage1_iter2;
wire    ap_block_state11_pp0_stage1_iter3;
reg    ap_block_pp0_stage1_11001;
reg   [0:0] select_ln27_1_reg_5490_pp0_iter1_reg;
reg    ap_enable_reg_pp0_iter3;
wire    ap_block_state4_pp0_stage0_iter0;
wire    ap_block_state6_pp0_stage0_iter1;
wire    ap_block_state8_pp0_stage0_iter2;
wire    ap_block_state10_pp0_stage0_iter3;
reg    ap_block_state12_pp0_stage0_iter4;
reg    ap_block_pp0_stage0_11001;
reg   [0:0] select_ln27_1_reg_5490_pp0_iter2_reg;
wire   [15:0] line_buff_group_1_va_1_q1;
reg   [15:0] reg_780;
wire   [2:0] add_ln9_fu_784_p2;
wire    ap_CS_fsm_state2;
wire   [11:0] add_ln627_fu_790_p2;
wire   [2:0] add_ln10_fu_802_p2;
wire    ap_CS_fsm_state3;
wire   [11:0] add_ln627_1_fu_808_p2;
wire   [0:0] icmp_ln10_fu_814_p2;
wire   [0:0] icmp_ln68_fu_828_p2;
reg   [0:0] icmp_ln68_reg_5301;
wire   [0:0] icmp_ln37_fu_848_p2;
reg   [0:0] icmp_ln37_reg_5306;
wire   [0:0] icmp_ln59_fu_854_p2;
reg   [0:0] icmp_ln59_reg_5311;
wire   [8:0] shl_ln1_fu_860_p3;
reg   [8:0] shl_ln1_reg_5316;
wire   [0:0] icmp_ln68_1_fu_868_p2;
reg   [0:0] icmp_ln68_1_reg_5321;
wire   [8:0] col_idx_fu_878_p2;
reg   [8:0] col_idx_reg_5326;
wire  signed [9:0] conv_count_1_fu_906_p3;
reg  signed [9:0] conv_count_1_reg_5331;
wire   [0:0] and_ln59_1_fu_926_p2;
reg   [0:0] and_ln59_1_reg_5336;
wire   [8:0] add_ln27_fu_936_p2;
reg   [8:0] add_ln27_reg_5341;
wire   [0:0] icmp_ln21_fu_942_p2;
reg   [0:0] icmp_ln21_reg_5346_pp0_iter1_reg;
wire   [20:0] add_ln21_fu_948_p2;
reg   [20:0] add_ln21_reg_5350;
wire   [7:0] out_row_fu_954_p2;
reg   [7:0] out_row_reg_5355;
wire   [0:0] icmp_ln23_fu_960_p2;
reg   [0:0] icmp_ln23_reg_5362;
wire   [1:0] select_ln21_fu_966_p3;
reg   [1:0] select_ln21_reg_5370;
wire   [0:0] xor_ln21_fu_990_p2;
reg   [0:0] xor_ln21_reg_5376;
wire   [0:0] icmp_ln29_fu_996_p2;
reg   [0:0] icmp_ln29_reg_5384;
wire   [0:0] and_ln21_5_fu_1020_p2;
reg   [0:0] and_ln21_5_reg_5389;
wire   [1:0] row_stride_fu_1026_p2;
reg   [1:0] row_stride_reg_5396;
wire   [0:0] or_ln23_fu_1032_p2;
reg   [0:0] or_ln23_reg_5401;
wire   [7:0] select_ln23_fu_1038_p3;
reg   [7:0] select_ln23_reg_5411;
wire   [0:0] icmp_ln37_3_fu_1060_p2;
reg   [0:0] icmp_ln37_3_reg_5416;
wire   [0:0] or_ln23_1_fu_1072_p2;
reg   [0:0] or_ln23_1_reg_5421;
wire   [0:0] and_ln23_3_fu_1078_p2;
reg   [0:0] and_ln23_3_reg_5428;
wire   [7:0] out_col_fu_1084_p2;
reg   [7:0] out_col_reg_5439;
wire   [0:0] or_ln25_1_fu_1096_p2;
reg   [0:0] or_ln25_1_reg_5447;
wire   [1:0] select_ln25_fu_1102_p3;
reg   [1:0] select_ln25_reg_5452;
wire   [0:0] xor_ln25_fu_1110_p2;
reg   [0:0] xor_ln25_reg_5458;
wire   [1:0] col_stride_fu_1116_p2;
reg   [1:0] col_stride_reg_5464;
wire   [7:0] select_ln21_4_fu_1160_p3;
reg   [7:0] select_ln21_4_reg_5470;
wire   [1:0] select_ln23_6_fu_1217_p3;
reg   [1:0] select_ln23_6_reg_5475;
wire   [7:0] select_ln25_5_fu_1311_p3;
reg   [7:0] select_ln25_5_reg_5480;
wire   [3:0] select_ln27_fu_1326_p3;
reg   [3:0] select_ln27_reg_5485;
reg   [3:0] select_ln27_reg_5485_pp0_iter1_reg;
wire   [0:0] select_ln27_1_fu_1390_p3;
wire   [8:0] select_ln27_2_fu_1398_p3;
reg   [8:0] select_ln27_2_reg_5494;
wire   [8:0] select_ln27_4_fu_1449_p3;
reg   [8:0] select_ln27_4_reg_5499;
wire   [1:0] select_ln27_5_fu_1457_p3;
reg   [1:0] select_ln27_5_reg_5504;
reg   [3:0] tmp_keep_V_reg_5509;
reg   [3:0] tmp_keep_V_reg_5509_pp0_iter1_reg;
reg   [3:0] tmp_keep_V_reg_5509_pp0_iter2_reg;
reg   [3:0] tmp_keep_V_reg_5509_pp0_iter3_reg;
reg   [3:0] tmp_strb_V_reg_5514;
reg   [3:0] tmp_strb_V_reg_5514_pp0_iter1_reg;
reg   [3:0] tmp_strb_V_reg_5514_pp0_iter2_reg;
reg   [3:0] tmp_strb_V_reg_5514_pp0_iter3_reg;
reg   [1:0] tmp_user_V_reg_5519;
reg   [1:0] tmp_user_V_reg_5519_pp0_iter1_reg;
reg   [1:0] tmp_user_V_reg_5519_pp0_iter2_reg;
reg   [1:0] tmp_user_V_reg_5519_pp0_iter3_reg;
reg   [4:0] tmp_id_V_reg_5524;
reg   [4:0] tmp_id_V_reg_5524_pp0_iter1_reg;
reg   [4:0] tmp_id_V_reg_5524_pp0_iter2_reg;
reg   [4:0] tmp_id_V_reg_5524_pp0_iter3_reg;
reg   [5:0] tmp_dest_V_reg_5529;
reg   [5:0] tmp_dest_V_reg_5529_pp0_iter1_reg;
reg   [5:0] tmp_dest_V_reg_5529_pp0_iter2_reg;
reg   [5:0] tmp_dest_V_reg_5529_pp0_iter3_reg;
wire   [15:0] curr_input_data_sub_s_fu_1487_p1;
reg   [15:0] curr_input_data_sub_s_reg_5534;
reg   [15:0] curr_input_data_sub_1_reg_5539;
wire   [12:0] mul_ln203_fu_1505_p2;
reg   [12:0] mul_ln203_reg_5544;
wire   [12:0] add_ln107_fu_1511_p2;
reg   [12:0] add_ln107_reg_5550;
reg   [12:0] add_ln107_reg_5550_pp0_iter1_reg;
wire   [0:0] and_ln68_1_fu_1529_p2;
reg   [0:0] and_ln68_1_reg_5555;
reg   [0:0] and_ln68_1_reg_5555_pp0_iter1_reg;
reg   [0:0] and_ln68_1_reg_5555_pp0_iter2_reg;
reg   [0:0] and_ln68_1_reg_5555_pp0_iter3_reg;
wire   [3:0] input_ch_idx_fu_1535_p2;
reg   [3:0] input_ch_idx_reg_5560;
wire   [5:0] select_ln27_6_fu_1547_p3;
reg   [5:0] select_ln27_6_reg_5565;
wire   [12:0] select_ln25_7_fu_1560_p3;
reg   [12:0] select_ln25_7_reg_5570;
wire   [13:0] select_ln23_8_fu_1573_p3;
reg   [13:0] select_ln23_8_reg_5575;
wire  signed [63:0] sext_ln203_fu_1591_p1;
reg  signed [63:0] sext_ln203_reg_5580;
wire   [12:0] add_ln107_1_fu_1597_p2;
reg   [12:0] add_ln107_1_reg_5586;
reg   [11:0] line_buff_group_0_va_5_reg_5591;
reg   [11:0] line_buff_group_1_va_5_reg_5596;
reg   [11:0] line_buff_group_0_va_7_reg_5616;
reg   [11:0] line_buff_group_1_va_7_reg_5636;
wire   [15:0] line_buff_group_0_va_q0;
reg   [15:0] window_group_0_6_va_reg_5641;
wire   [15:0] line_buff_group_0_va_q1;
reg   [15:0] window_group_0_6_va_1_reg_5653;
wire   [2:0] trunc_ln203_fu_1616_p1;
reg   [2:0] trunc_ln203_reg_5665;
reg   [2:0] trunc_ln203_reg_5665_pp0_iter3_reg;
wire   [0:0] icmp_ln203_fu_1619_p2;
reg   [0:0] icmp_ln203_reg_5683;
reg   [0:0] icmp_ln203_reg_5683_pp0_iter3_reg;
wire   [0:0] icmp_ln203_1_fu_1625_p2;
reg   [0:0] icmp_ln203_1_reg_5705;
reg   [0:0] icmp_ln203_1_reg_5705_pp0_iter3_reg;
wire   [15:0] line_buff_group_1_va_q0;
reg   [15:0] window_group_1_6_va_reg_5736;
wire   [15:0] line_buff_group_1_va_q1;
reg   [15:0] window_group_1_6_va_1_reg_5748;
wire   [0:0] icmp_ln203_2_fu_1788_p2;
reg   [0:0] icmp_ln203_2_reg_5760;
wire   [0:0] icmp_ln203_3_fu_1801_p2;
reg   [0:0] icmp_ln203_3_reg_5776;
wire   [0:0] icmp_ln203_4_fu_1814_p2;
reg   [0:0] icmp_ln203_4_reg_5795;
wire   [0:0] icmp_ln203_5_fu_1827_p2;
reg   [0:0] icmp_ln203_5_reg_5817;
wire   [0:0] icmp_ln203_6_fu_1840_p2;
reg   [0:0] icmp_ln203_6_reg_5842;
wire   [15:0] tmp_1_fu_3418_p10;
reg   [15:0] tmp_1_reg_5870;
wire   [15:0] tmp_2_fu_3439_p10;
reg   [15:0] tmp_2_reg_5875;
wire   [0:0] icmp_ln1494_fu_3460_p2;
reg   [0:0] icmp_ln1494_reg_5880;
wire   [15:0] tmp_3_fu_3466_p10;
reg   [15:0] tmp_3_reg_5885;
wire   [15:0] tmp_5_fu_3487_p10;
reg   [15:0] tmp_5_reg_5891;
wire   [15:0] tmp_6_fu_3508_p10;
reg   [15:0] tmp_6_reg_5897;
wire   [15:0] tmp_7_fu_3529_p10;
reg   [15:0] tmp_7_reg_5903;
wire   [15:0] select_ln123_1_fu_4338_p3;
reg   [15:0] select_ln123_1_reg_5909;
wire   [15:0] tmp_4_fu_4345_p10;
reg   [15:0] tmp_4_reg_5914;
wire   [0:0] icmp_ln1494_2_fu_4366_p2;
reg   [0:0] icmp_ln1494_2_reg_5919;
wire   [15:0] select_ln123_4_fu_4387_p3;
reg   [15:0] select_ln123_4_reg_5924;
wire   [15:0] tmp_8_fu_4394_p10;
reg   [15:0] tmp_8_reg_5930;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state4;
reg    ap_enable_reg_pp0_iter1;
reg    ap_block_pp0_stage1_subdone;
reg   [11:0] line_buff_group_0_va_address0;
reg    line_buff_group_0_va_ce0;
reg    line_buff_group_0_va_we0;
wire   [11:0] line_buff_group_0_va_address1;
reg    line_buff_group_0_va_ce1;
reg   [11:0] line_buff_group_0_va_1_address0;
reg    line_buff_group_0_va_1_ce0;
reg    line_buff_group_0_va_1_we0;
wire   [15:0] line_buff_group_0_va_1_q0;
reg   [11:0] line_buff_group_0_va_1_address1;
reg    line_buff_group_0_va_1_ce1;
reg   [11:0] line_buff_group_1_va_address0;
reg    line_buff_group_1_va_ce0;
reg    line_buff_group_1_va_we0;
wire   [11:0] line_buff_group_1_va_address1;
reg    line_buff_group_1_va_ce1;
reg   [11:0] line_buff_group_1_va_1_address0;
reg    line_buff_group_1_va_1_ce0;
reg    line_buff_group_1_va_1_we0;
wire   [15:0] line_buff_group_1_va_1_q0;
reg   [11:0] line_buff_group_1_va_1_address1;
reg    line_buff_group_1_va_1_ce1;
wire    call_ln79_write_output_fu_750_ap_start;
wire    call_ln79_write_output_fu_750_ap_done;
wire    call_ln79_write_output_fu_750_ap_idle;
wire    call_ln79_write_output_fu_750_ap_ready;
wire   [15:0] call_ln79_write_output_fu_750_val_output_1_V;
wire   [31:0] call_ln79_write_output_fu_750_outStream_TDATA;
wire    call_ln79_write_output_fu_750_outStream_TVALID;
wire    call_ln79_write_output_fu_750_outStream_TREADY;
wire   [3:0] call_ln79_write_output_fu_750_outStream_TKEEP;
wire   [3:0] call_ln79_write_output_fu_750_outStream_TSTRB;
wire   [1:0] call_ln79_write_output_fu_750_outStream_TUSER;
wire   [0:0] call_ln79_write_output_fu_750_outStream_TLAST;
wire   [4:0] call_ln79_write_output_fu_750_outStream_TID;
wire   [5:0] call_ln79_write_output_fu_750_outStream_TDEST;
reg    call_ln79_write_output_fu_750_ap_ce;
wire    ap_block_state4_pp0_stage0_iter0_ignore_call427;
wire    ap_block_state6_pp0_stage0_iter1_ignore_call427;
wire    ap_block_state8_pp0_stage0_iter2_ignore_call427;
wire    ap_block_state10_pp0_stage0_iter3_ignore_call427;
wire    ap_block_state12_pp0_stage0_iter4_ignore_call427;
wire    ap_block_pp0_stage0_11001_ignoreCallOp800;
reg   [2:0] phi_ln9_reg_602;
wire   [0:0] icmp_ln9_fu_796_p2;
reg   [11:0] phi_mul_reg_613;
reg   [2:0] phi_ln10_reg_624;
reg   [11:0] phi_mul838_reg_635;
reg   [20:0] ap_phi_mux_indvar_flatten823_phi_fu_650_p4;
reg   [7:0] ap_phi_mux_out_row_0_phi_fu_661_p4;
reg   [13:0] ap_phi_mux_indvar_flatten461_phi_fu_673_p4;
reg   [1:0] ap_phi_mux_row_stride_0_phi_fu_685_p4;
reg   [12:0] ap_phi_mux_indvar_flatten187_phi_fu_696_p4;
reg   [7:0] ap_phi_mux_out_col_0_phi_fu_708_p4;
reg   [5:0] ap_phi_mux_indvar_flatten_phi_fu_719_p4;
reg   [1:0] ap_phi_mux_col_stride_0_phi_fu_731_p4;
reg   [3:0] ap_phi_mux_input_ch_idx_0_phi_fu_742_p4;
reg    call_ln79_write_output_fu_750_ap_start_reg;
wire   [15:0] tmp_9_fu_4780_p10;
wire  signed [63:0] sext_ln107_fu_1602_p1;
wire  signed [63:0] sext_ln107_1_fu_1609_p1;
reg   [15:0] window_group_0_7_va_fu_176;
wire   [15:0] window_group_0_7_va_98_fu_2060_p3;
reg   [15:0] window_group_0_7_va_1_fu_180;
wire   [15:0] window_group_0_7_va_133_fu_2327_p3;
reg   [15:0] window_group_0_7_va_2_fu_184;
wire   [15:0] window_group_0_7_va_168_fu_2601_p3;
reg   [15:0] window_group_0_7_va_3_fu_188;
wire   [15:0] window_group_0_7_va_203_fu_4076_p3;
reg   [15:0] window_group_0_7_va_4_fu_192;
wire   [15:0] window_group_0_7_va_97_fu_2052_p3;
reg   [15:0] window_group_0_7_va_5_fu_196;
wire   [15:0] window_group_0_7_va_132_fu_2319_p3;
reg   [15:0] window_group_0_7_va_6_fu_200;
wire   [15:0] window_group_0_7_va_167_fu_2593_p3;
reg   [15:0] window_group_0_7_va_7_fu_204;
wire   [15:0] window_group_0_7_va_202_fu_4069_p3;
reg   [15:0] window_group_0_7_va_8_fu_208;
wire   [15:0] window_group_0_7_va_95_fu_2037_p3;
reg   [15:0] window_group_0_7_va_9_fu_212;
wire   [15:0] window_group_0_7_va_130_fu_2304_p3;
reg   [15:0] window_group_0_7_va_10_fu_216;
wire   [15:0] window_group_0_7_va_165_fu_2577_p3;
reg   [15:0] window_group_0_7_va_11_fu_220;
wire   [15:0] window_group_0_7_va_200_fu_4055_p3;
reg   [15:0] window_group_0_7_va_12_fu_224;
wire   [15:0] window_group_0_7_va_92_fu_2014_p3;
reg   [15:0] window_group_0_7_va_13_fu_228;
wire   [15:0] window_group_0_7_va_127_fu_2281_p3;
reg   [15:0] window_group_0_7_va_14_fu_232;
wire   [15:0] window_group_0_7_va_162_fu_2553_p3;
reg   [15:0] window_group_0_7_va_15_fu_236;
wire   [15:0] window_group_0_7_va_197_fu_4034_p3;
reg   [15:0] window_group_0_7_va_16_fu_240;
wire   [15:0] window_group_0_7_va_88_fu_1983_p3;
reg   [15:0] window_group_0_7_va_17_fu_244;
wire   [15:0] window_group_0_7_va_123_fu_2250_p3;
reg   [15:0] window_group_0_7_va_18_fu_248;
wire   [15:0] window_group_0_7_va_158_fu_2521_p3;
reg   [15:0] window_group_0_7_va_19_fu_252;
wire   [15:0] window_group_0_7_va_193_fu_4006_p3;
reg   [15:0] window_group_0_7_va_20_fu_256;
wire   [15:0] window_group_0_7_va_83_fu_1944_p3;
reg   [15:0] window_group_0_7_va_21_fu_260;
wire   [15:0] window_group_0_7_va_118_fu_2211_p3;
reg   [15:0] window_group_0_7_va_22_fu_264;
wire   [15:0] window_group_0_7_va_153_fu_2481_p3;
reg   [15:0] window_group_0_7_va_23_fu_268;
wire   [15:0] window_group_0_7_va_188_fu_3971_p3;
reg   [15:0] window_group_0_7_va_24_fu_272;
wire   [15:0] window_group_0_7_va_77_fu_1898_p3;
reg   [15:0] window_group_0_7_va_25_fu_276;
wire   [15:0] window_group_0_7_va_112_fu_2165_p3;
reg   [15:0] window_group_0_7_va_26_fu_280;
wire   [15:0] window_group_0_7_va_147_fu_2434_p3;
reg   [15:0] window_group_0_7_va_27_fu_284;
wire   [15:0] window_group_0_7_va_182_fu_3929_p3;
reg   [15:0] window_group_0_7_va_28_fu_288;
wire   [15:0] window_group_0_7_va_70_fu_1845_p3;
reg   [15:0] window_group_0_7_va_29_fu_292;
wire   [15:0] window_group_0_7_va_105_fu_2112_p3;
reg   [15:0] window_group_0_7_va_30_fu_296;
wire   [15:0] window_group_0_7_va_140_fu_2380_p3;
reg   [15:0] window_group_0_7_va_31_fu_300;
wire   [15:0] window_group_0_7_va_175_fu_3880_p3;
reg   [15:0] window_group_1_7_va_fu_304;
wire   [15:0] window_group_1_7_va_98_fu_2869_p3;
reg   [15:0] window_group_1_7_va_1_fu_308;
wire   [15:0] window_group_1_7_va_133_fu_3136_p3;
reg   [15:0] window_group_1_7_va_2_fu_312;
wire   [15:0] window_group_1_7_va_168_fu_3410_p3;
reg   [15:0] window_group_1_7_va_3_fu_316;
wire   [15:0] window_group_1_7_va_203_fu_4321_p3;
reg   [15:0] window_group_1_7_va_4_fu_320;
wire   [15:0] window_group_1_7_va_97_fu_2861_p3;
reg   [15:0] window_group_1_7_va_5_fu_324;
wire   [15:0] window_group_1_7_va_132_fu_3128_p3;
reg   [15:0] window_group_1_7_va_6_fu_328;
wire   [15:0] window_group_1_7_va_167_fu_3402_p3;
reg   [15:0] window_group_1_7_va_7_fu_332;
wire   [15:0] window_group_1_7_va_202_fu_4314_p3;
reg   [15:0] window_group_1_7_va_8_fu_336;
wire   [15:0] window_group_1_7_va_95_fu_2846_p3;
reg   [15:0] window_group_1_7_va_9_fu_340;
wire   [15:0] window_group_1_7_va_130_fu_3113_p3;
reg   [15:0] window_group_1_7_va_10_fu_344;
wire   [15:0] window_group_1_7_va_165_fu_3386_p3;
reg   [15:0] window_group_1_7_va_11_fu_348;
wire   [15:0] window_group_1_7_va_200_fu_4300_p3;
reg   [15:0] window_group_1_7_va_12_fu_352;
wire   [15:0] window_group_1_7_va_92_fu_2823_p3;
reg   [15:0] window_group_1_7_va_13_fu_356;
wire   [15:0] window_group_1_7_va_127_fu_3090_p3;
reg   [15:0] window_group_1_7_va_14_fu_360;
wire   [15:0] window_group_1_7_va_162_fu_3362_p3;
reg   [15:0] window_group_1_7_va_15_fu_364;
wire   [15:0] window_group_1_7_va_197_fu_4279_p3;
reg   [15:0] window_group_1_7_va_16_fu_368;
wire   [15:0] window_group_1_7_va_88_fu_2792_p3;
reg   [15:0] window_group_1_7_va_17_fu_372;
wire   [15:0] window_group_1_7_va_123_fu_3059_p3;
reg   [15:0] window_group_1_7_va_18_fu_376;
wire   [15:0] window_group_1_7_va_158_fu_3330_p3;
reg   [15:0] window_group_1_7_va_19_fu_380;
wire   [15:0] window_group_1_7_va_193_fu_4251_p3;
reg   [15:0] window_group_1_7_va_20_fu_384;
wire   [15:0] window_group_1_7_va_83_fu_2753_p3;
reg   [15:0] window_group_1_7_va_21_fu_388;
wire   [15:0] window_group_1_7_va_118_fu_3020_p3;
reg   [15:0] window_group_1_7_va_22_fu_392;
wire   [15:0] window_group_1_7_va_153_fu_3290_p3;
reg   [15:0] window_group_1_7_va_23_fu_396;
wire   [15:0] window_group_1_7_va_188_fu_4216_p3;
reg   [15:0] window_group_1_7_va_24_fu_400;
wire   [15:0] window_group_1_7_va_77_fu_2707_p3;
reg   [15:0] window_group_1_7_va_25_fu_404;
wire   [15:0] window_group_1_7_va_112_fu_2974_p3;
reg   [15:0] window_group_1_7_va_26_fu_408;
wire   [15:0] window_group_1_7_va_147_fu_3243_p3;
reg   [15:0] window_group_1_7_va_27_fu_412;
wire   [15:0] window_group_1_7_va_182_fu_4174_p3;
reg   [15:0] window_group_1_7_va_28_fu_416;
wire   [15:0] window_group_1_7_va_70_fu_2654_p3;
reg   [15:0] window_group_1_7_va_29_fu_420;
wire   [15:0] window_group_1_7_va_105_fu_2921_p3;
reg   [15:0] window_group_1_7_va_30_fu_424;
wire   [15:0] window_group_1_7_va_140_fu_3189_p3;
reg   [15:0] window_group_1_7_va_31_fu_428;
wire   [15:0] window_group_1_7_va_175_fu_4125_p3;
reg   [15:0] val_output_0_7_V_1_fu_432;
wire   [15:0] val_output_0_7_V_77_fu_4762_p3;
reg   [15:0] val_output_0_7_V_6_fu_436;
wire   [15:0] val_output_0_7_V_76_fu_4755_p3;
reg   [15:0] val_output_0_7_V_35_fu_440;
wire   [15:0] val_output_0_7_V_74_fu_4741_p3;
reg   [15:0] val_output_0_7_V_30_fu_444;
wire   [15:0] val_output_0_7_V_71_fu_4720_p3;
reg   [15:0] val_output_0_7_V_24_fu_448;
wire   [15:0] val_output_0_7_V_67_fu_4692_p3;
reg   [15:0] val_output_0_7_V_17_fu_452;
wire   [15:0] val_output_0_7_V_62_fu_4657_p3;
reg   [15:0] val_output_0_7_V_39_fu_456;
wire   [15:0] val_output_0_7_V_56_fu_4615_p3;
reg   [15:0] val_output_0_7_V_4_fu_460;
wire   [15:0] val_output_0_7_V_49_fu_4566_p3;
wire   [2:0] zext_ln37_fu_834_p1;
wire   [2:0] sub_ln37_fu_838_p2;
wire   [8:0] shl_ln_fu_820_p3;
wire  signed [8:0] sext_ln37_fu_844_p1;
wire   [8:0] zext_ln27_fu_874_p1;
wire   [0:0] icmp_ln37_1_fu_888_p2;
wire   [9:0] zext_ln34_fu_884_p1;
wire   [0:0] and_ln37_fu_894_p2;
wire   [9:0] conv_count_fu_900_p2;
wire   [0:0] icmp_ln59_1_fu_914_p2;
wire   [0:0] and_ln59_fu_920_p2;
wire   [8:0] trunc_ln107_fu_932_p1;
wire   [8:0] shl_ln33_mid1_fu_974_p3;
wire   [0:0] icmp_ln27_fu_1002_p2;
wire   [0:0] icmp_ln25_fu_1014_p2;
wire   [2:0] zext_ln37_1_fu_1046_p1;
wire   [2:0] sub_ln37_1_fu_1050_p2;
wire   [8:0] select_ln21_1_fu_982_p3;
wire  signed [8:0] sext_ln37_1_fu_1056_p1;
wire   [0:0] xor_ln23_fu_1066_p2;
wire   [0:0] and_ln21_4_fu_1008_p2;
wire   [0:0] or_ln25_fu_1090_p2;
wire   [0:0] icmp_ln68_3_fu_1122_p2;
wire   [0:0] icmp_ln37_2_fu_1133_p2;
wire   [0:0] select_ln21_3_fu_1138_p3;
wire   [0:0] icmp_ln59_2_fu_1172_p2;
wire   [0:0] and_ln21_fu_1144_p2;
wire   [0:0] and_ln21_1_fu_1148_p2;
wire   [0:0] and_ln21_2_fu_1152_p2;
wire   [0:0] and_ln21_3_fu_1156_p2;
wire   [8:0] shl_ln34_mid1_fu_1222_p3;
wire   [8:0] select_ln23_3_fu_1184_p3;
wire   [0:0] icmp_ln68_4_fu_1236_p2;
wire   [0:0] and_ln23_fu_1190_p2;
wire   [0:0] select_ln23_1_fu_1166_p3;
wire   [0:0] icmp_ln37_4_fu_1252_p2;
wire   [9:0] zext_ln34_1_fu_1248_p1;
wire   [0:0] and_ln37_1_fu_1257_p2;
wire   [9:0] add_ln38_1_fu_1263_p2;
wire   [0:0] and_ln23_1_fu_1195_p2;
wire   [8:0] select_ln23_4_fu_1200_p3;
wire  signed [9:0] select_ln37_1_fu_1269_p3;
wire   [8:0] trunc_ln107_1_fu_1289_p1;
wire   [8:0] add_ln25_2_fu_1293_p2;
wire   [8:0] select_ln23_5_fu_1206_p3;
wire   [0:0] and_ln23_2_fu_1212_p2;
wire   [0:0] and_ln25_1_fu_1306_p2;
wire   [0:0] or_ln27_fu_1316_p2;
wire   [0:0] or_ln27_1_fu_1321_p2;
wire   [8:0] zext_ln27_1_fu_1334_p1;
wire   [8:0] select_ln25_1_fu_1229_p3;
wire   [8:0] add_ln34_1_fu_1337_p2;
wire   [0:0] icmp_ln37_5_fu_1347_p2;
wire   [9:0] zext_ln34_2_fu_1343_p1;
wire   [0:0] and_ln37_2_fu_1353_p2;
wire   [9:0] add_ln38_2_fu_1359_p2;
wire   [0:0] select_ln23_2_fu_1177_p3;
wire   [0:0] icmp_ln59_3_fu_1373_p2;
wire   [0:0] and_ln59_2_fu_1378_p2;
wire   [0:0] and_ln59_3_fu_1384_p2;
wire   [0:0] and_ln25_fu_1277_p2;
wire   [8:0] select_ln25_3_fu_1282_p3;
wire  signed [9:0] select_ln37_2_fu_1365_p3;
wire  signed [12:0] sext_ln27_2_fu_1414_p1;
wire  signed [12:0] sext_ln27_1_fu_1410_p1;
wire   [12:0] select_ln23_7_fu_1417_p3;
wire  signed [12:0] sext_ln27_fu_1406_p1;
wire   [12:0] select_ln25_6_fu_1424_p3;
wire   [8:0] trunc_ln107_2_fu_1439_p1;
wire   [8:0] add_ln27_3_fu_1443_p2;
wire   [8:0] select_ln25_4_fu_1299_p3;
wire   [3:0] mul_ln203_fu_1505_p1;
wire   [12:0] select_ln27_3_fu_1431_p3;
wire   [0:0] select_ln25_2_fu_1241_p3;
wire   [0:0] icmp_ln68_2_fu_1517_p2;
wire   [0:0] and_ln68_fu_1523_p2;
wire   [0:0] select_ln21_2_fu_1127_p3;
wire   [5:0] add_ln27_1_fu_1541_p2;
wire   [12:0] add_ln25_1_fu_1554_p2;
wire   [13:0] add_ln23_1_fu_1567_p2;
wire   [12:0] zext_ln27_2_fu_1580_p1;
wire   [12:0] add_ln203_fu_1586_p2;
wire   [12:0] zext_ln27_3_fu_1583_p1;
wire   [15:0] window_group_0_7_va_64_fu_1775_p3;
wire   [15:0] window_group_0_7_va_65_fu_1781_p3;
wire   [15:0] window_group_0_7_va_66_fu_1793_p3;
wire   [15:0] window_group_0_7_va_67_fu_1806_p3;
wire   [15:0] window_group_0_7_va_68_fu_1819_p3;
wire   [15:0] window_group_0_7_va_69_fu_1832_p3;
wire   [15:0] window_group_0_7_va_71_fu_1853_p3;
wire   [15:0] window_group_0_7_va_72_fu_1859_p3;
wire   [15:0] window_group_0_7_va_73_fu_1866_p3;
wire   [15:0] window_group_0_7_va_74_fu_1874_p3;
wire   [15:0] window_group_0_7_va_75_fu_1882_p3;
wire   [15:0] window_group_0_7_va_76_fu_1890_p3;
wire   [15:0] window_group_0_7_va_78_fu_1906_p3;
wire   [15:0] window_group_0_7_va_79_fu_1912_p3;
wire   [15:0] window_group_0_7_va_80_fu_1920_p3;
wire   [15:0] window_group_0_7_va_81_fu_1928_p3;
wire   [15:0] window_group_0_7_va_82_fu_1936_p3;
wire   [15:0] window_group_0_7_va_84_fu_1952_p3;
wire   [15:0] window_group_0_7_va_85_fu_1959_p3;
wire   [15:0] window_group_0_7_va_86_fu_1967_p3;
wire   [15:0] window_group_0_7_va_87_fu_1975_p3;
wire   [15:0] window_group_0_7_va_89_fu_1991_p3;
wire   [15:0] window_group_0_7_va_90_fu_1998_p3;
wire   [15:0] window_group_0_7_va_91_fu_2006_p3;
wire   [15:0] window_group_0_7_va_93_fu_2022_p3;
wire   [15:0] window_group_0_7_va_94_fu_2029_p3;
wire   [15:0] window_group_0_7_va_96_fu_2045_p3;
wire   [15:0] window_group_0_7_va_99_fu_2067_p3;
wire   [15:0] window_group_0_7_va_100_fu_2073_p3;
wire   [15:0] window_group_0_7_va_101_fu_2080_p3;
wire   [15:0] window_group_0_7_va_102_fu_2088_p3;
wire   [15:0] window_group_0_7_va_103_fu_2096_p3;
wire   [15:0] window_group_0_7_va_104_fu_2104_p3;
wire   [15:0] window_group_0_7_va_106_fu_2120_p3;
wire   [15:0] window_group_0_7_va_107_fu_2126_p3;
wire   [15:0] window_group_0_7_va_108_fu_2133_p3;
wire   [15:0] window_group_0_7_va_109_fu_2141_p3;
wire   [15:0] window_group_0_7_va_110_fu_2149_p3;
wire   [15:0] window_group_0_7_va_111_fu_2157_p3;
wire   [15:0] window_group_0_7_va_113_fu_2173_p3;
wire   [15:0] window_group_0_7_va_114_fu_2179_p3;
wire   [15:0] window_group_0_7_va_115_fu_2187_p3;
wire   [15:0] window_group_0_7_va_116_fu_2195_p3;
wire   [15:0] window_group_0_7_va_117_fu_2203_p3;
wire   [15:0] window_group_0_7_va_119_fu_2219_p3;
wire   [15:0] window_group_0_7_va_120_fu_2226_p3;
wire   [15:0] window_group_0_7_va_121_fu_2234_p3;
wire   [15:0] window_group_0_7_va_122_fu_2242_p3;
wire   [15:0] window_group_0_7_va_124_fu_2258_p3;
wire   [15:0] window_group_0_7_va_125_fu_2265_p3;
wire   [15:0] window_group_0_7_va_126_fu_2273_p3;
wire   [15:0] window_group_0_7_va_128_fu_2289_p3;
wire   [15:0] window_group_0_7_va_129_fu_2296_p3;
wire   [15:0] window_group_0_7_va_131_fu_2312_p3;
wire   [15:0] window_group_0_7_va_134_fu_2334_p3;
wire   [15:0] window_group_0_7_va_135_fu_2341_p3;
wire   [15:0] window_group_0_7_va_136_fu_2348_p3;
wire   [15:0] window_group_0_7_va_137_fu_2356_p3;
wire   [15:0] window_group_0_7_va_138_fu_2364_p3;
wire   [15:0] window_group_0_7_va_139_fu_2372_p3;
wire   [15:0] window_group_0_7_va_141_fu_2388_p3;
wire   [15:0] window_group_0_7_va_142_fu_2395_p3;
wire   [15:0] window_group_0_7_va_143_fu_2402_p3;
wire   [15:0] window_group_0_7_va_144_fu_2410_p3;
wire   [15:0] window_group_0_7_va_145_fu_2418_p3;
wire   [15:0] window_group_0_7_va_146_fu_2426_p3;
wire   [15:0] window_group_0_7_va_148_fu_2442_p3;
wire   [15:0] window_group_0_7_va_149_fu_2449_p3;
wire   [15:0] window_group_0_7_va_150_fu_2457_p3;
wire   [15:0] window_group_0_7_va_151_fu_2465_p3;
wire   [15:0] window_group_0_7_va_152_fu_2473_p3;
wire   [15:0] window_group_0_7_va_154_fu_2489_p3;
wire   [15:0] window_group_0_7_va_155_fu_2497_p3;
wire   [15:0] window_group_0_7_va_156_fu_2505_p3;
wire   [15:0] window_group_0_7_va_157_fu_2513_p3;
wire   [15:0] window_group_0_7_va_159_fu_2529_p3;
wire   [15:0] window_group_0_7_va_160_fu_2537_p3;
wire   [15:0] window_group_0_7_va_161_fu_2545_p3;
wire   [15:0] window_group_0_7_va_163_fu_2561_p3;
wire   [15:0] window_group_0_7_va_164_fu_2569_p3;
wire   [15:0] window_group_0_7_va_166_fu_2585_p3;
wire   [15:0] window_group_1_7_va_64_fu_2609_p3;
wire   [15:0] window_group_1_7_va_65_fu_2615_p3;
wire   [15:0] window_group_1_7_va_66_fu_2622_p3;
wire   [15:0] window_group_1_7_va_67_fu_2630_p3;
wire   [15:0] window_group_1_7_va_68_fu_2638_p3;
wire   [15:0] window_group_1_7_va_69_fu_2646_p3;
wire   [15:0] window_group_1_7_va_71_fu_2662_p3;
wire   [15:0] window_group_1_7_va_72_fu_2668_p3;
wire   [15:0] window_group_1_7_va_73_fu_2675_p3;
wire   [15:0] window_group_1_7_va_74_fu_2683_p3;
wire   [15:0] window_group_1_7_va_75_fu_2691_p3;
wire   [15:0] window_group_1_7_va_76_fu_2699_p3;
wire   [15:0] window_group_1_7_va_78_fu_2715_p3;
wire   [15:0] window_group_1_7_va_79_fu_2721_p3;
wire   [15:0] window_group_1_7_va_80_fu_2729_p3;
wire   [15:0] window_group_1_7_va_81_fu_2737_p3;
wire   [15:0] window_group_1_7_va_82_fu_2745_p3;
wire   [15:0] window_group_1_7_va_84_fu_2761_p3;
wire   [15:0] window_group_1_7_va_85_fu_2768_p3;
wire   [15:0] window_group_1_7_va_86_fu_2776_p3;
wire   [15:0] window_group_1_7_va_87_fu_2784_p3;
wire   [15:0] window_group_1_7_va_89_fu_2800_p3;
wire   [15:0] window_group_1_7_va_90_fu_2807_p3;
wire   [15:0] window_group_1_7_va_91_fu_2815_p3;
wire   [15:0] window_group_1_7_va_93_fu_2831_p3;
wire   [15:0] window_group_1_7_va_94_fu_2838_p3;
wire   [15:0] window_group_1_7_va_96_fu_2854_p3;
wire   [15:0] window_group_1_7_va_99_fu_2876_p3;
wire   [15:0] window_group_1_7_va_100_fu_2882_p3;
wire   [15:0] window_group_1_7_va_101_fu_2889_p3;
wire   [15:0] window_group_1_7_va_102_fu_2897_p3;
wire   [15:0] window_group_1_7_va_103_fu_2905_p3;
wire   [15:0] window_group_1_7_va_104_fu_2913_p3;
wire   [15:0] window_group_1_7_va_106_fu_2929_p3;
wire   [15:0] window_group_1_7_va_107_fu_2935_p3;
wire   [15:0] window_group_1_7_va_108_fu_2942_p3;
wire   [15:0] window_group_1_7_va_109_fu_2950_p3;
wire   [15:0] window_group_1_7_va_110_fu_2958_p3;
wire   [15:0] window_group_1_7_va_111_fu_2966_p3;
wire   [15:0] window_group_1_7_va_113_fu_2982_p3;
wire   [15:0] window_group_1_7_va_114_fu_2988_p3;
wire   [15:0] window_group_1_7_va_115_fu_2996_p3;
wire   [15:0] window_group_1_7_va_116_fu_3004_p3;
wire   [15:0] window_group_1_7_va_117_fu_3012_p3;
wire   [15:0] window_group_1_7_va_119_fu_3028_p3;
wire   [15:0] window_group_1_7_va_120_fu_3035_p3;
wire   [15:0] window_group_1_7_va_121_fu_3043_p3;
wire   [15:0] window_group_1_7_va_122_fu_3051_p3;
wire   [15:0] window_group_1_7_va_124_fu_3067_p3;
wire   [15:0] window_group_1_7_va_125_fu_3074_p3;
wire   [15:0] window_group_1_7_va_126_fu_3082_p3;
wire   [15:0] window_group_1_7_va_128_fu_3098_p3;
wire   [15:0] window_group_1_7_va_129_fu_3105_p3;
wire   [15:0] window_group_1_7_va_131_fu_3121_p3;
wire   [15:0] window_group_1_7_va_134_fu_3143_p3;
wire   [15:0] window_group_1_7_va_135_fu_3150_p3;
wire   [15:0] window_group_1_7_va_136_fu_3157_p3;
wire   [15:0] window_group_1_7_va_137_fu_3165_p3;
wire   [15:0] window_group_1_7_va_138_fu_3173_p3;
wire   [15:0] window_group_1_7_va_139_fu_3181_p3;
wire   [15:0] window_group_1_7_va_141_fu_3197_p3;
wire   [15:0] window_group_1_7_va_142_fu_3204_p3;
wire   [15:0] window_group_1_7_va_143_fu_3211_p3;
wire   [15:0] window_group_1_7_va_144_fu_3219_p3;
wire   [15:0] window_group_1_7_va_145_fu_3227_p3;
wire   [15:0] window_group_1_7_va_146_fu_3235_p3;
wire   [15:0] window_group_1_7_va_148_fu_3251_p3;
wire   [15:0] window_group_1_7_va_149_fu_3258_p3;
wire   [15:0] window_group_1_7_va_150_fu_3266_p3;
wire   [15:0] window_group_1_7_va_151_fu_3274_p3;
wire   [15:0] window_group_1_7_va_152_fu_3282_p3;
wire   [15:0] window_group_1_7_va_154_fu_3298_p3;
wire   [15:0] window_group_1_7_va_155_fu_3306_p3;
wire   [15:0] window_group_1_7_va_156_fu_3314_p3;
wire   [15:0] window_group_1_7_va_157_fu_3322_p3;
wire   [15:0] window_group_1_7_va_159_fu_3338_p3;
wire   [15:0] window_group_1_7_va_160_fu_3346_p3;
wire   [15:0] window_group_1_7_va_161_fu_3354_p3;
wire   [15:0] window_group_1_7_va_163_fu_3370_p3;
wire   [15:0] window_group_1_7_va_164_fu_3378_p3;
wire   [15:0] window_group_1_7_va_166_fu_3394_p3;
wire   [15:0] tmp_1_fu_3418_p1;
wire   [15:0] tmp_1_fu_3418_p2;
wire   [15:0] tmp_1_fu_3418_p3;
wire   [15:0] tmp_1_fu_3418_p4;
wire   [15:0] tmp_1_fu_3418_p5;
wire   [15:0] tmp_1_fu_3418_p6;
wire   [15:0] tmp_1_fu_3418_p7;
wire   [15:0] tmp_1_fu_3418_p8;
wire   [15:0] tmp_2_fu_3439_p1;
wire   [15:0] tmp_2_fu_3439_p2;
wire   [15:0] tmp_2_fu_3439_p3;
wire   [15:0] tmp_2_fu_3439_p4;
wire   [15:0] tmp_2_fu_3439_p5;
wire   [15:0] tmp_2_fu_3439_p6;
wire   [15:0] tmp_2_fu_3439_p7;
wire   [15:0] tmp_2_fu_3439_p8;
wire   [15:0] tmp_3_fu_3466_p1;
wire   [15:0] tmp_3_fu_3466_p2;
wire   [15:0] tmp_3_fu_3466_p3;
wire   [15:0] tmp_3_fu_3466_p4;
wire   [15:0] tmp_3_fu_3466_p5;
wire   [15:0] tmp_3_fu_3466_p6;
wire   [15:0] tmp_3_fu_3466_p7;
wire   [15:0] tmp_3_fu_3466_p8;
wire   [15:0] tmp_5_fu_3487_p1;
wire   [15:0] tmp_5_fu_3487_p2;
wire   [15:0] tmp_5_fu_3487_p3;
wire   [15:0] tmp_5_fu_3487_p4;
wire   [15:0] tmp_5_fu_3487_p5;
wire   [15:0] tmp_5_fu_3487_p6;
wire   [15:0] tmp_5_fu_3487_p7;
wire   [15:0] tmp_5_fu_3487_p8;
wire   [15:0] tmp_6_fu_3508_p1;
wire   [15:0] tmp_6_fu_3508_p2;
wire   [15:0] tmp_6_fu_3508_p3;
wire   [15:0] tmp_6_fu_3508_p4;
wire   [15:0] tmp_6_fu_3508_p5;
wire   [15:0] tmp_6_fu_3508_p6;
wire   [15:0] tmp_6_fu_3508_p7;
wire   [15:0] tmp_6_fu_3508_p8;
wire   [15:0] tmp_7_fu_3529_p1;
wire   [15:0] tmp_7_fu_3529_p2;
wire   [15:0] tmp_7_fu_3529_p3;
wire   [15:0] tmp_7_fu_3529_p4;
wire   [15:0] tmp_7_fu_3529_p5;
wire   [15:0] tmp_7_fu_3529_p6;
wire   [15:0] tmp_7_fu_3529_p7;
wire   [15:0] tmp_7_fu_3529_p8;
wire   [15:0] window_group_0_7_va_169_fu_3838_p3;
wire   [15:0] window_group_0_7_va_170_fu_3845_p3;
wire   [15:0] window_group_0_7_va_171_fu_3852_p3;
wire   [15:0] window_group_0_7_va_172_fu_3859_p3;
wire   [15:0] window_group_0_7_va_173_fu_3866_p3;
wire   [15:0] window_group_0_7_va_174_fu_3873_p3;
wire   [15:0] window_group_0_7_va_176_fu_3887_p3;
wire   [15:0] window_group_0_7_va_177_fu_3894_p3;
wire   [15:0] window_group_0_7_va_178_fu_3901_p3;
wire   [15:0] window_group_0_7_va_179_fu_3908_p3;
wire   [15:0] window_group_0_7_va_180_fu_3915_p3;
wire   [15:0] window_group_0_7_va_181_fu_3922_p3;
wire   [15:0] window_group_0_7_va_183_fu_3936_p3;
wire   [15:0] window_group_0_7_va_184_fu_3943_p3;
wire   [15:0] window_group_0_7_va_185_fu_3950_p3;
wire   [15:0] window_group_0_7_va_186_fu_3957_p3;
wire   [15:0] window_group_0_7_va_187_fu_3964_p3;
wire   [15:0] window_group_0_7_va_189_fu_3978_p3;
wire   [15:0] window_group_0_7_va_190_fu_3985_p3;
wire   [15:0] window_group_0_7_va_191_fu_3992_p3;
wire   [15:0] window_group_0_7_va_192_fu_3999_p3;
wire   [15:0] window_group_0_7_va_194_fu_4013_p3;
wire   [15:0] window_group_0_7_va_195_fu_4020_p3;
wire   [15:0] window_group_0_7_va_196_fu_4027_p3;
wire   [15:0] window_group_0_7_va_198_fu_4041_p3;
wire   [15:0] window_group_0_7_va_199_fu_4048_p3;
wire   [15:0] window_group_0_7_va_201_fu_4062_p3;
wire   [15:0] window_group_1_7_va_169_fu_4083_p3;
wire   [15:0] window_group_1_7_va_170_fu_4090_p3;
wire   [15:0] window_group_1_7_va_171_fu_4097_p3;
wire   [15:0] window_group_1_7_va_172_fu_4104_p3;
wire   [15:0] window_group_1_7_va_173_fu_4111_p3;
wire   [15:0] window_group_1_7_va_174_fu_4118_p3;
wire   [15:0] window_group_1_7_va_176_fu_4132_p3;
wire   [15:0] window_group_1_7_va_177_fu_4139_p3;
wire   [15:0] window_group_1_7_va_178_fu_4146_p3;
wire   [15:0] window_group_1_7_va_179_fu_4153_p3;
wire   [15:0] window_group_1_7_va_180_fu_4160_p3;
wire   [15:0] window_group_1_7_va_181_fu_4167_p3;
wire   [15:0] window_group_1_7_va_183_fu_4181_p3;
wire   [15:0] window_group_1_7_va_184_fu_4188_p3;
wire   [15:0] window_group_1_7_va_185_fu_4195_p3;
wire   [15:0] window_group_1_7_va_186_fu_4202_p3;
wire   [15:0] window_group_1_7_va_187_fu_4209_p3;
wire   [15:0] window_group_1_7_va_189_fu_4223_p3;
wire   [15:0] window_group_1_7_va_190_fu_4230_p3;
wire   [15:0] window_group_1_7_va_191_fu_4237_p3;
wire   [15:0] window_group_1_7_va_192_fu_4244_p3;
wire   [15:0] window_group_1_7_va_194_fu_4258_p3;
wire   [15:0] window_group_1_7_va_195_fu_4265_p3;
wire   [15:0] window_group_1_7_va_196_fu_4272_p3;
wire   [15:0] window_group_1_7_va_198_fu_4286_p3;
wire   [15:0] window_group_1_7_va_199_fu_4293_p3;
wire   [15:0] window_group_1_7_va_201_fu_4307_p3;
wire   [15:0] select_ln123_fu_4328_p3;
wire   [0:0] icmp_ln1494_1_fu_4333_p2;
wire   [15:0] tmp_4_fu_4345_p1;
wire   [15:0] tmp_4_fu_4345_p2;
wire   [15:0] tmp_4_fu_4345_p3;
wire   [15:0] tmp_4_fu_4345_p4;
wire   [15:0] tmp_4_fu_4345_p5;
wire   [15:0] tmp_4_fu_4345_p6;
wire   [15:0] tmp_4_fu_4345_p7;
wire   [15:0] tmp_4_fu_4345_p8;
wire   [0:0] icmp_ln1494_3_fu_4372_p2;
wire   [15:0] select_ln123_3_fu_4376_p3;
wire   [0:0] icmp_ln1494_4_fu_4382_p2;
wire   [15:0] tmp_8_fu_4394_p1;
wire   [15:0] tmp_8_fu_4394_p2;
wire   [15:0] tmp_8_fu_4394_p3;
wire   [15:0] tmp_8_fu_4394_p4;
wire   [15:0] tmp_8_fu_4394_p5;
wire   [15:0] tmp_8_fu_4394_p6;
wire   [15:0] tmp_8_fu_4394_p7;
wire   [15:0] tmp_8_fu_4394_p8;
wire   [15:0] val_output_0_7_V_78_fu_4519_p3;
wire   [15:0] val_output_0_7_V_fu_4524_p3;
wire   [15:0] val_output_0_7_V_44_fu_4531_p3;
wire   [15:0] val_output_0_7_V_45_fu_4538_p3;
wire   [15:0] val_output_0_7_V_46_fu_4545_p3;
wire   [15:0] val_output_0_7_V_47_fu_4552_p3;
wire   [15:0] val_output_0_7_V_48_fu_4559_p3;
wire   [15:0] val_output_0_7_V_50_fu_4573_p3;
wire   [15:0] val_output_0_7_V_51_fu_4580_p3;
wire   [15:0] val_output_0_7_V_52_fu_4587_p3;
wire   [15:0] val_output_0_7_V_53_fu_4594_p3;
wire   [15:0] val_output_0_7_V_54_fu_4601_p3;
wire   [15:0] val_output_0_7_V_55_fu_4608_p3;
wire   [15:0] val_output_0_7_V_57_fu_4622_p3;
wire   [15:0] val_output_0_7_V_58_fu_4629_p3;
wire   [15:0] val_output_0_7_V_59_fu_4636_p3;
wire   [15:0] val_output_0_7_V_60_fu_4643_p3;
wire   [15:0] val_output_0_7_V_61_fu_4650_p3;
wire   [15:0] val_output_0_7_V_63_fu_4664_p3;
wire   [15:0] val_output_0_7_V_64_fu_4671_p3;
wire   [15:0] val_output_0_7_V_65_fu_4678_p3;
wire   [15:0] val_output_0_7_V_66_fu_4685_p3;
wire   [15:0] val_output_0_7_V_68_fu_4699_p3;
wire   [15:0] val_output_0_7_V_69_fu_4706_p3;
wire   [15:0] val_output_0_7_V_70_fu_4713_p3;
wire   [15:0] val_output_0_7_V_72_fu_4727_p3;
wire   [15:0] val_output_0_7_V_73_fu_4734_p3;
wire   [15:0] val_output_0_7_V_75_fu_4748_p3;
wire   [0:0] icmp_ln1494_5_fu_4769_p2;
wire   [15:0] tmp_9_fu_4780_p1;
wire   [15:0] tmp_9_fu_4780_p2;
wire   [15:0] tmp_9_fu_4780_p3;
wire   [15:0] tmp_9_fu_4780_p4;
wire   [15:0] tmp_9_fu_4780_p5;
wire   [15:0] tmp_9_fu_4780_p6;
wire   [15:0] tmp_9_fu_4780_p7;
wire   [15:0] tmp_9_fu_4780_p8;
wire    ap_CS_fsm_state13;
reg    ap_block_state13;
reg   [5:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire   [12:0] mul_ln203_fu_1505_p10;

// power-on initialization
initial begin
#0 ap_CS_fsm = 6'd1;
#0 inStream_V_data_0_sel_rd = 1'b0;
#0 inStream_V_data_0_sel_wr = 1'b0;
#0 inStream_V_data_0_state = 2'd0;
#0 inStream_V_keep_V_0_sel_rd = 1'b0;
#0 inStream_V_keep_V_0_sel_wr = 1'b0;
#0 inStream_V_keep_V_0_state = 2'd0;
#0 inStream_V_strb_V_0_sel_rd = 1'b0;
#0 inStream_V_strb_V_0_sel_wr = 1'b0;
#0 inStream_V_strb_V_0_state = 2'd0;
#0 inStream_V_user_V_0_sel_rd = 1'b0;
#0 inStream_V_user_V_0_sel_wr = 1'b0;
#0 inStream_V_user_V_0_state = 2'd0;
#0 inStream_V_id_V_0_sel_rd = 1'b0;
#0 inStream_V_id_V_0_sel_wr = 1'b0;
#0 inStream_V_id_V_0_state = 2'd0;
#0 inStream_V_dest_V_0_sel_rd = 1'b0;
#0 inStream_V_dest_V_0_sel_wr = 1'b0;
#0 inStream_V_dest_V_0_state = 2'd0;
#0 outStream_V_data_1_sel_rd = 1'b0;
#0 outStream_V_data_1_sel_wr = 1'b0;
#0 outStream_V_data_1_state = 2'd0;
#0 outStream_V_keep_V_1_sel_rd = 1'b0;
#0 outStream_V_keep_V_1_sel_wr = 1'b0;
#0 outStream_V_keep_V_1_state = 2'd0;
#0 outStream_V_strb_V_1_sel_rd = 1'b0;
#0 outStream_V_strb_V_1_sel_wr = 1'b0;
#0 outStream_V_strb_V_1_state = 2'd0;
#0 outStream_V_user_V_1_sel_rd = 1'b0;
#0 outStream_V_user_V_1_sel_wr = 1'b0;
#0 outStream_V_user_V_1_state = 2'd0;
#0 outStream_V_last_V_1_sel_rd = 1'b0;
#0 outStream_V_last_V_1_sel_wr = 1'b0;
#0 outStream_V_last_V_1_state = 2'd0;
#0 outStream_V_id_V_1_sel_rd = 1'b0;
#0 outStream_V_id_V_1_sel_wr = 1'b0;
#0 outStream_V_id_V_1_state = 2'd0;
#0 outStream_V_dest_V_1_sel_rd = 1'b0;
#0 outStream_V_dest_V_1_sel_wr = 1'b0;
#0 outStream_V_dest_V_1_state = 2'd0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 call_ln79_write_output_fu_750_ap_start_reg = 1'b0;
end

yolo_max_pool_top_AXILiteS_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_AXILITES_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_AXILITES_DATA_WIDTH ))
yolo_max_pool_top_AXILiteS_s_axi_U(
    .AWVALID(s_axi_AXILiteS_AWVALID),
    .AWREADY(s_axi_AXILiteS_AWREADY),
    .AWADDR(s_axi_AXILiteS_AWADDR),
    .WVALID(s_axi_AXILiteS_WVALID),
    .WREADY(s_axi_AXILiteS_WREADY),
    .WDATA(s_axi_AXILiteS_WDATA),
    .WSTRB(s_axi_AXILiteS_WSTRB),
    .ARVALID(s_axi_AXILiteS_ARVALID),
    .ARREADY(s_axi_AXILiteS_ARREADY),
    .ARADDR(s_axi_AXILiteS_ARADDR),
    .RVALID(s_axi_AXILiteS_RVALID),
    .RREADY(s_axi_AXILiteS_RREADY),
    .RDATA(s_axi_AXILiteS_RDATA),
    .RRESP(s_axi_AXILiteS_RRESP),
    .BVALID(s_axi_AXILiteS_BVALID),
    .BREADY(s_axi_AXILiteS_BREADY),
    .BRESP(s_axi_AXILiteS_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle)
);

yolo_max_pool_top_line_buff_group_0_va #(
    .DataWidth( 16 ),
    .AddressRange( 3344 ),
    .AddressWidth( 12 ))
line_buff_group_0_va_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(line_buff_group_0_va_address0),
    .ce0(line_buff_group_0_va_ce0),
    .we0(line_buff_group_0_va_we0),
    .d0(line_buff_group_0_va_1_q0),
    .q0(line_buff_group_0_va_q0),
    .address1(line_buff_group_0_va_address1),
    .ce1(line_buff_group_0_va_ce1),
    .q1(line_buff_group_0_va_q1)
);

yolo_max_pool_top_line_buff_group_0_va #(
    .DataWidth( 16 ),
    .AddressRange( 3344 ),
    .AddressWidth( 12 ))
line_buff_group_0_va_1_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(line_buff_group_0_va_1_address0),
    .ce0(line_buff_group_0_va_1_ce0),
    .we0(line_buff_group_0_va_1_we0),
    .d0(curr_input_data_sub_s_reg_5534),
    .q0(line_buff_group_0_va_1_q0),
    .address1(line_buff_group_0_va_1_address1),
    .ce1(line_buff_group_0_va_1_ce1),
    .q1(line_buff_group_0_va_1_q1)
);

yolo_max_pool_top_line_buff_group_0_va #(
    .DataWidth( 16 ),
    .AddressRange( 3344 ),
    .AddressWidth( 12 ))
line_buff_group_1_va_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(line_buff_group_1_va_address0),
    .ce0(line_buff_group_1_va_ce0),
    .we0(line_buff_group_1_va_we0),
    .d0(line_buff_group_1_va_1_q0),
    .q0(line_buff_group_1_va_q0),
    .address1(line_buff_group_1_va_address1),
    .ce1(line_buff_group_1_va_ce1),
    .q1(line_buff_group_1_va_q1)
);

yolo_max_pool_top_line_buff_group_0_va #(
    .DataWidth( 16 ),
    .AddressRange( 3344 ),
    .AddressWidth( 12 ))
line_buff_group_1_va_1_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(line_buff_group_1_va_1_address0),
    .ce0(line_buff_group_1_va_1_ce0),
    .we0(line_buff_group_1_va_1_we0),
    .d0(curr_input_data_sub_1_reg_5539),
    .q0(line_buff_group_1_va_1_q0),
    .address1(line_buff_group_1_va_1_address1),
    .ce1(line_buff_group_1_va_1_ce1),
    .q1(line_buff_group_1_va_1_q1)
);

write_output call_ln79_write_output_fu_750(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(call_ln79_write_output_fu_750_ap_start),
    .ap_done(call_ln79_write_output_fu_750_ap_done),
    .ap_idle(call_ln79_write_output_fu_750_ap_idle),
    .ap_ready(call_ln79_write_output_fu_750_ap_ready),
    .val_output_0_V(tmp_9_fu_4780_p10),
    .val_output_1_V(call_ln79_write_output_fu_750_val_output_1_V),
    .curr_input_keep_V(tmp_keep_V_reg_5509_pp0_iter3_reg),
    .curr_input_strb_V(tmp_strb_V_reg_5514_pp0_iter3_reg),
    .curr_input_user_V(tmp_user_V_reg_5519_pp0_iter3_reg),
    .curr_input_id_V(tmp_id_V_reg_5524_pp0_iter3_reg),
    .curr_input_dest_V(tmp_dest_V_reg_5529_pp0_iter3_reg),
    .outStream_TDATA(call_ln79_write_output_fu_750_outStream_TDATA),
    .outStream_TVALID(call_ln79_write_output_fu_750_outStream_TVALID),
    .outStream_TREADY(call_ln79_write_output_fu_750_outStream_TREADY),
    .outStream_TKEEP(call_ln79_write_output_fu_750_outStream_TKEEP),
    .outStream_TSTRB(call_ln79_write_output_fu_750_outStream_TSTRB),
    .outStream_TUSER(call_ln79_write_output_fu_750_outStream_TUSER),
    .outStream_TLAST(call_ln79_write_output_fu_750_outStream_TLAST),
    .outStream_TID(call_ln79_write_output_fu_750_outStream_TID),
    .outStream_TDEST(call_ln79_write_output_fu_750_outStream_TDEST),
    .last_V(and_ln68_1_reg_5555_pp0_iter3_reg),
    .outStream_TDATA_blk_n(call_ln79_write_output_fu_750_outStream_TDATA_blk_n),
    .ap_ce(call_ln79_write_output_fu_750_ap_ce)
);

yolo_max_pool_top_mux_83_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 16 ),
    .din7_WIDTH( 16 ),
    .din8_WIDTH( 3 ),
    .dout_WIDTH( 16 ))
yolo_max_pool_top_mux_83_16_1_1_U16(
    .din0(tmp_1_fu_3418_p1),
    .din1(tmp_1_fu_3418_p2),
    .din2(tmp_1_fu_3418_p3),
    .din3(tmp_1_fu_3418_p4),
    .din4(tmp_1_fu_3418_p5),
    .din5(tmp_1_fu_3418_p6),
    .din6(tmp_1_fu_3418_p7),
    .din7(tmp_1_fu_3418_p8),
    .din8(trunc_ln203_reg_5665),
    .dout(tmp_1_fu_3418_p10)
);

yolo_max_pool_top_mux_83_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 16 ),
    .din7_WIDTH( 16 ),
    .din8_WIDTH( 3 ),
    .dout_WIDTH( 16 ))
yolo_max_pool_top_mux_83_16_1_1_U17(
    .din0(tmp_2_fu_3439_p1),
    .din1(tmp_2_fu_3439_p2),
    .din2(tmp_2_fu_3439_p3),
    .din3(tmp_2_fu_3439_p4),
    .din4(tmp_2_fu_3439_p5),
    .din5(tmp_2_fu_3439_p6),
    .din6(tmp_2_fu_3439_p7),
    .din7(tmp_2_fu_3439_p8),
    .din8(trunc_ln203_reg_5665),
    .dout(tmp_2_fu_3439_p10)
);

yolo_max_pool_top_mux_83_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 16 ),
    .din7_WIDTH( 16 ),
    .din8_WIDTH( 3 ),
    .dout_WIDTH( 16 ))
yolo_max_pool_top_mux_83_16_1_1_U18(
    .din0(tmp_3_fu_3466_p1),
    .din1(tmp_3_fu_3466_p2),
    .din2(tmp_3_fu_3466_p3),
    .din3(tmp_3_fu_3466_p4),
    .din4(tmp_3_fu_3466_p5),
    .din5(tmp_3_fu_3466_p6),
    .din6(tmp_3_fu_3466_p7),
    .din7(tmp_3_fu_3466_p8),
    .din8(trunc_ln203_reg_5665),
    .dout(tmp_3_fu_3466_p10)
);

yolo_max_pool_top_mux_83_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 16 ),
    .din7_WIDTH( 16 ),
    .din8_WIDTH( 3 ),
    .dout_WIDTH( 16 ))
yolo_max_pool_top_mux_83_16_1_1_U19(
    .din0(tmp_5_fu_3487_p1),
    .din1(tmp_5_fu_3487_p2),
    .din2(tmp_5_fu_3487_p3),
    .din3(tmp_5_fu_3487_p4),
    .din4(tmp_5_fu_3487_p5),
    .din5(tmp_5_fu_3487_p6),
    .din6(tmp_5_fu_3487_p7),
    .din7(tmp_5_fu_3487_p8),
    .din8(trunc_ln203_reg_5665),
    .dout(tmp_5_fu_3487_p10)
);

yolo_max_pool_top_mux_83_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 16 ),
    .din7_WIDTH( 16 ),
    .din8_WIDTH( 3 ),
    .dout_WIDTH( 16 ))
yolo_max_pool_top_mux_83_16_1_1_U20(
    .din0(tmp_6_fu_3508_p1),
    .din1(tmp_6_fu_3508_p2),
    .din2(tmp_6_fu_3508_p3),
    .din3(tmp_6_fu_3508_p4),
    .din4(tmp_6_fu_3508_p5),
    .din5(tmp_6_fu_3508_p6),
    .din6(tmp_6_fu_3508_p7),
    .din7(tmp_6_fu_3508_p8),
    .din8(trunc_ln203_reg_5665),
    .dout(tmp_6_fu_3508_p10)
);

yolo_max_pool_top_mux_83_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 16 ),
    .din7_WIDTH( 16 ),
    .din8_WIDTH( 3 ),
    .dout_WIDTH( 16 ))
yolo_max_pool_top_mux_83_16_1_1_U21(
    .din0(tmp_7_fu_3529_p1),
    .din1(tmp_7_fu_3529_p2),
    .din2(tmp_7_fu_3529_p3),
    .din3(tmp_7_fu_3529_p4),
    .din4(tmp_7_fu_3529_p5),
    .din5(tmp_7_fu_3529_p6),
    .din6(tmp_7_fu_3529_p7),
    .din7(tmp_7_fu_3529_p8),
    .din8(trunc_ln203_reg_5665),
    .dout(tmp_7_fu_3529_p10)
);

yolo_max_pool_top_mux_83_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 16 ),
    .din7_WIDTH( 16 ),
    .din8_WIDTH( 3 ),
    .dout_WIDTH( 16 ))
yolo_max_pool_top_mux_83_16_1_1_U22(
    .din0(tmp_4_fu_4345_p1),
    .din1(tmp_4_fu_4345_p2),
    .din2(tmp_4_fu_4345_p3),
    .din3(tmp_4_fu_4345_p4),
    .din4(tmp_4_fu_4345_p5),
    .din5(tmp_4_fu_4345_p6),
    .din6(tmp_4_fu_4345_p7),
    .din7(tmp_4_fu_4345_p8),
    .din8(trunc_ln203_reg_5665),
    .dout(tmp_4_fu_4345_p10)
);

yolo_max_pool_top_mux_83_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 16 ),
    .din7_WIDTH( 16 ),
    .din8_WIDTH( 3 ),
    .dout_WIDTH( 16 ))
yolo_max_pool_top_mux_83_16_1_1_U23(
    .din0(tmp_8_fu_4394_p1),
    .din1(tmp_8_fu_4394_p2),
    .din2(tmp_8_fu_4394_p3),
    .din3(tmp_8_fu_4394_p4),
    .din4(tmp_8_fu_4394_p5),
    .din5(tmp_8_fu_4394_p6),
    .din6(tmp_8_fu_4394_p7),
    .din7(tmp_8_fu_4394_p8),
    .din8(trunc_ln203_reg_5665),
    .dout(tmp_8_fu_4394_p10)
);

yolo_max_pool_top_mux_83_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 16 ),
    .din7_WIDTH( 16 ),
    .din8_WIDTH( 3 ),
    .dout_WIDTH( 16 ))
yolo_max_pool_top_mux_83_16_1_1_U24(
    .din0(tmp_9_fu_4780_p1),
    .din1(tmp_9_fu_4780_p2),
    .din2(tmp_9_fu_4780_p3),
    .din3(tmp_9_fu_4780_p4),
    .din4(tmp_9_fu_4780_p5),
    .din5(tmp_9_fu_4780_p6),
    .din6(tmp_9_fu_4780_p7),
    .din7(tmp_9_fu_4780_p8),
    .din8(trunc_ln203_reg_5665_pp0_iter3_reg),
    .dout(tmp_9_fu_4780_p10)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state4) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((icmp_ln10_fu_814_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone)))) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end else if (((icmp_ln10_fu_814_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
            ap_enable_reg_pp0_iter4 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        call_ln79_write_output_fu_750_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_11001) & (select_ln27_1_reg_5490_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            call_ln79_write_output_fu_750_ap_start_reg <= 1'b1;
        end else if ((call_ln79_write_output_fu_750_ap_ready == 1'b1)) begin
            call_ln79_write_output_fu_750_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        inStream_V_data_0_sel_rd <= 1'b0;
    end else begin
        if (((inStream_V_data_0_ack_out == 1'b1) & (inStream_V_data_0_vld_out == 1'b1))) begin
            inStream_V_data_0_sel_rd <= ~inStream_V_data_0_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        inStream_V_data_0_sel_wr <= 1'b0;
    end else begin
        if (((inStream_V_data_0_ack_in == 1'b1) & (inStream_V_data_0_vld_in == 1'b1))) begin
            inStream_V_data_0_sel_wr <= ~inStream_V_data_0_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        inStream_V_data_0_state <= 2'd0;
    end else begin
        if ((((inStream_V_data_0_state == 2'd2) & (inStream_V_data_0_vld_in == 1'b0)) | ((inStream_V_data_0_state == 2'd3) & (inStream_V_data_0_vld_in == 1'b0) & (inStream_V_data_0_ack_out == 1'b1)))) begin
            inStream_V_data_0_state <= 2'd2;
        end else if ((((inStream_V_data_0_state == 2'd1) & (inStream_V_data_0_ack_out == 1'b0)) | ((inStream_V_data_0_state == 2'd3) & (inStream_V_data_0_ack_out == 1'b0) & (inStream_V_data_0_vld_in == 1'b1)))) begin
            inStream_V_data_0_state <= 2'd1;
        end else if (((~((inStream_V_data_0_vld_in == 1'b0) & (inStream_V_data_0_ack_out == 1'b1)) & ~((inStream_V_data_0_ack_out == 1'b0) & (inStream_V_data_0_vld_in == 1'b1)) & (inStream_V_data_0_state == 2'd3)) | ((inStream_V_data_0_state == 2'd1) & (inStream_V_data_0_ack_out == 1'b1)) | ((inStream_V_data_0_state == 2'd2) & (inStream_V_data_0_vld_in == 1'b1)))) begin
            inStream_V_data_0_state <= 2'd3;
        end else begin
            inStream_V_data_0_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        inStream_V_dest_V_0_sel_rd <= 1'b0;
    end else begin
        if (((inStream_V_dest_V_0_ack_out == 1'b1) & (inStream_V_dest_V_0_vld_out == 1'b1))) begin
            inStream_V_dest_V_0_sel_rd <= ~inStream_V_dest_V_0_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        inStream_V_dest_V_0_sel_wr <= 1'b0;
    end else begin
        if (((inStream_V_dest_V_0_ack_in == 1'b1) & (inStream_V_dest_V_0_vld_in == 1'b1))) begin
            inStream_V_dest_V_0_sel_wr <= ~inStream_V_dest_V_0_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        inStream_V_dest_V_0_state <= 2'd0;
    end else begin
        if ((((inStream_V_dest_V_0_state == 2'd2) & (inStream_V_dest_V_0_vld_in == 1'b0)) | ((inStream_V_dest_V_0_state == 2'd3) & (inStream_V_dest_V_0_vld_in == 1'b0) & (inStream_V_dest_V_0_ack_out == 1'b1)))) begin
            inStream_V_dest_V_0_state <= 2'd2;
        end else if ((((inStream_V_dest_V_0_state == 2'd1) & (inStream_V_dest_V_0_ack_out == 1'b0)) | ((inStream_V_dest_V_0_state == 2'd3) & (inStream_V_dest_V_0_ack_out == 1'b0) & (inStream_V_dest_V_0_vld_in == 1'b1)))) begin
            inStream_V_dest_V_0_state <= 2'd1;
        end else if (((~((inStream_V_dest_V_0_vld_in == 1'b0) & (inStream_V_dest_V_0_ack_out == 1'b1)) & ~((inStream_V_dest_V_0_ack_out == 1'b0) & (inStream_V_dest_V_0_vld_in == 1'b1)) & (inStream_V_dest_V_0_state == 2'd3)) | ((inStream_V_dest_V_0_state == 2'd1) & (inStream_V_dest_V_0_ack_out == 1'b1)) | ((inStream_V_dest_V_0_state == 2'd2) & (inStream_V_dest_V_0_vld_in == 1'b1)))) begin
            inStream_V_dest_V_0_state <= 2'd3;
        end else begin
            inStream_V_dest_V_0_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        inStream_V_id_V_0_sel_rd <= 1'b0;
    end else begin
        if (((inStream_V_id_V_0_ack_out == 1'b1) & (inStream_V_id_V_0_vld_out == 1'b1))) begin
            inStream_V_id_V_0_sel_rd <= ~inStream_V_id_V_0_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        inStream_V_id_V_0_sel_wr <= 1'b0;
    end else begin
        if (((inStream_V_id_V_0_ack_in == 1'b1) & (inStream_V_id_V_0_vld_in == 1'b1))) begin
            inStream_V_id_V_0_sel_wr <= ~inStream_V_id_V_0_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        inStream_V_id_V_0_state <= 2'd0;
    end else begin
        if ((((inStream_V_id_V_0_state == 2'd2) & (inStream_V_id_V_0_vld_in == 1'b0)) | ((inStream_V_id_V_0_state == 2'd3) & (inStream_V_id_V_0_vld_in == 1'b0) & (inStream_V_id_V_0_ack_out == 1'b1)))) begin
            inStream_V_id_V_0_state <= 2'd2;
        end else if ((((inStream_V_id_V_0_state == 2'd1) & (inStream_V_id_V_0_ack_out == 1'b0)) | ((inStream_V_id_V_0_state == 2'd3) & (inStream_V_id_V_0_ack_out == 1'b0) & (inStream_V_id_V_0_vld_in == 1'b1)))) begin
            inStream_V_id_V_0_state <= 2'd1;
        end else if (((~((inStream_V_id_V_0_vld_in == 1'b0) & (inStream_V_id_V_0_ack_out == 1'b1)) & ~((inStream_V_id_V_0_ack_out == 1'b0) & (inStream_V_id_V_0_vld_in == 1'b1)) & (inStream_V_id_V_0_state == 2'd3)) | ((inStream_V_id_V_0_state == 2'd1) & (inStream_V_id_V_0_ack_out == 1'b1)) | ((inStream_V_id_V_0_state == 2'd2) & (inStream_V_id_V_0_vld_in == 1'b1)))) begin
            inStream_V_id_V_0_state <= 2'd3;
        end else begin
            inStream_V_id_V_0_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        inStream_V_keep_V_0_sel_rd <= 1'b0;
    end else begin
        if (((inStream_V_keep_V_0_ack_out == 1'b1) & (inStream_V_keep_V_0_vld_out == 1'b1))) begin
            inStream_V_keep_V_0_sel_rd <= ~inStream_V_keep_V_0_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        inStream_V_keep_V_0_sel_wr <= 1'b0;
    end else begin
        if (((inStream_V_keep_V_0_vld_in == 1'b1) & (inStream_V_keep_V_0_ack_in == 1'b1))) begin
            inStream_V_keep_V_0_sel_wr <= ~inStream_V_keep_V_0_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        inStream_V_keep_V_0_state <= 2'd0;
    end else begin
        if ((((inStream_V_keep_V_0_state == 2'd2) & (inStream_V_keep_V_0_vld_in == 1'b0)) | ((inStream_V_keep_V_0_state == 2'd3) & (inStream_V_keep_V_0_vld_in == 1'b0) & (inStream_V_keep_V_0_ack_out == 1'b1)))) begin
            inStream_V_keep_V_0_state <= 2'd2;
        end else if ((((inStream_V_keep_V_0_state == 2'd1) & (inStream_V_keep_V_0_ack_out == 1'b0)) | ((inStream_V_keep_V_0_state == 2'd3) & (inStream_V_keep_V_0_ack_out == 1'b0) & (inStream_V_keep_V_0_vld_in == 1'b1)))) begin
            inStream_V_keep_V_0_state <= 2'd1;
        end else if (((~((inStream_V_keep_V_0_vld_in == 1'b0) & (inStream_V_keep_V_0_ack_out == 1'b1)) & ~((inStream_V_keep_V_0_ack_out == 1'b0) & (inStream_V_keep_V_0_vld_in == 1'b1)) & (inStream_V_keep_V_0_state == 2'd3)) | ((inStream_V_keep_V_0_state == 2'd1) & (inStream_V_keep_V_0_ack_out == 1'b1)) | ((inStream_V_keep_V_0_state == 2'd2) & (inStream_V_keep_V_0_vld_in == 1'b1)))) begin
            inStream_V_keep_V_0_state <= 2'd3;
        end else begin
            inStream_V_keep_V_0_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        inStream_V_strb_V_0_sel_rd <= 1'b0;
    end else begin
        if (((inStream_V_strb_V_0_ack_out == 1'b1) & (inStream_V_strb_V_0_vld_out == 1'b1))) begin
            inStream_V_strb_V_0_sel_rd <= ~inStream_V_strb_V_0_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        inStream_V_strb_V_0_sel_wr <= 1'b0;
    end else begin
        if (((inStream_V_strb_V_0_ack_in == 1'b1) & (inStream_V_strb_V_0_vld_in == 1'b1))) begin
            inStream_V_strb_V_0_sel_wr <= ~inStream_V_strb_V_0_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        inStream_V_strb_V_0_state <= 2'd0;
    end else begin
        if ((((inStream_V_strb_V_0_state == 2'd2) & (inStream_V_strb_V_0_vld_in == 1'b0)) | ((inStream_V_strb_V_0_state == 2'd3) & (inStream_V_strb_V_0_vld_in == 1'b0) & (inStream_V_strb_V_0_ack_out == 1'b1)))) begin
            inStream_V_strb_V_0_state <= 2'd2;
        end else if ((((inStream_V_strb_V_0_state == 2'd1) & (inStream_V_strb_V_0_ack_out == 1'b0)) | ((inStream_V_strb_V_0_state == 2'd3) & (inStream_V_strb_V_0_ack_out == 1'b0) & (inStream_V_strb_V_0_vld_in == 1'b1)))) begin
            inStream_V_strb_V_0_state <= 2'd1;
        end else if (((~((inStream_V_strb_V_0_vld_in == 1'b0) & (inStream_V_strb_V_0_ack_out == 1'b1)) & ~((inStream_V_strb_V_0_ack_out == 1'b0) & (inStream_V_strb_V_0_vld_in == 1'b1)) & (inStream_V_strb_V_0_state == 2'd3)) | ((inStream_V_strb_V_0_state == 2'd1) & (inStream_V_strb_V_0_ack_out == 1'b1)) | ((inStream_V_strb_V_0_state == 2'd2) & (inStream_V_strb_V_0_vld_in == 1'b1)))) begin
            inStream_V_strb_V_0_state <= 2'd3;
        end else begin
            inStream_V_strb_V_0_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        inStream_V_user_V_0_sel_rd <= 1'b0;
    end else begin
        if (((inStream_V_user_V_0_ack_out == 1'b1) & (inStream_V_user_V_0_vld_out == 1'b1))) begin
            inStream_V_user_V_0_sel_rd <= ~inStream_V_user_V_0_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        inStream_V_user_V_0_sel_wr <= 1'b0;
    end else begin
        if (((inStream_V_user_V_0_ack_in == 1'b1) & (inStream_V_user_V_0_vld_in == 1'b1))) begin
            inStream_V_user_V_0_sel_wr <= ~inStream_V_user_V_0_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        inStream_V_user_V_0_state <= 2'd0;
    end else begin
        if ((((inStream_V_user_V_0_state == 2'd2) & (inStream_V_user_V_0_vld_in == 1'b0)) | ((inStream_V_user_V_0_state == 2'd3) & (inStream_V_user_V_0_vld_in == 1'b0) & (inStream_V_user_V_0_ack_out == 1'b1)))) begin
            inStream_V_user_V_0_state <= 2'd2;
        end else if ((((inStream_V_user_V_0_state == 2'd1) & (inStream_V_user_V_0_ack_out == 1'b0)) | ((inStream_V_user_V_0_state == 2'd3) & (inStream_V_user_V_0_ack_out == 1'b0) & (inStream_V_user_V_0_vld_in == 1'b1)))) begin
            inStream_V_user_V_0_state <= 2'd1;
        end else if (((~((inStream_V_user_V_0_vld_in == 1'b0) & (inStream_V_user_V_0_ack_out == 1'b1)) & ~((inStream_V_user_V_0_ack_out == 1'b0) & (inStream_V_user_V_0_vld_in == 1'b1)) & (inStream_V_user_V_0_state == 2'd3)) | ((inStream_V_user_V_0_state == 2'd1) & (inStream_V_user_V_0_ack_out == 1'b1)) | ((inStream_V_user_V_0_state == 2'd2) & (inStream_V_user_V_0_vld_in == 1'b1)))) begin
            inStream_V_user_V_0_state <= 2'd3;
        end else begin
            inStream_V_user_V_0_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        outStream_V_data_1_sel_rd <= 1'b0;
    end else begin
        if (((outStream_V_data_1_ack_out == 1'b1) & (outStream_V_data_1_vld_out == 1'b1))) begin
            outStream_V_data_1_sel_rd <= ~outStream_V_data_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        outStream_V_data_1_sel_wr <= 1'b0;
    end else begin
        if (((outStream_V_data_1_ack_in == 1'b1) & (outStream_V_data_1_vld_in == 1'b1))) begin
            outStream_V_data_1_sel_wr <= ~outStream_V_data_1_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        outStream_V_data_1_state <= 2'd0;
    end else begin
        if ((((outStream_V_data_1_state == 2'd2) & (outStream_V_data_1_vld_in == 1'b0)) | ((outStream_V_data_1_state == 2'd3) & (outStream_V_data_1_vld_in == 1'b0) & (outStream_V_data_1_ack_out == 1'b1)))) begin
            outStream_V_data_1_state <= 2'd2;
        end else if ((((outStream_V_data_1_state == 2'd1) & (outStream_TREADY == 1'b0)) | ((outStream_V_data_1_state == 2'd3) & (outStream_TREADY == 1'b0) & (outStream_V_data_1_vld_in == 1'b1)))) begin
            outStream_V_data_1_state <= 2'd1;
        end else if (((~((outStream_V_data_1_vld_in == 1'b0) & (outStream_V_data_1_ack_out == 1'b1)) & ~((outStream_TREADY == 1'b0) & (outStream_V_data_1_vld_in == 1'b1)) & (outStream_V_data_1_state == 2'd3)) | ((outStream_V_data_1_state == 2'd1) & (outStream_V_data_1_ack_out == 1'b1)) | ((outStream_V_data_1_state == 2'd2) & (outStream_V_data_1_vld_in == 1'b1)))) begin
            outStream_V_data_1_state <= 2'd3;
        end else begin
            outStream_V_data_1_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        outStream_V_dest_V_1_sel_rd <= 1'b0;
    end else begin
        if (((outStream_V_dest_V_1_ack_out == 1'b1) & (outStream_V_dest_V_1_vld_out == 1'b1))) begin
            outStream_V_dest_V_1_sel_rd <= ~outStream_V_dest_V_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        outStream_V_dest_V_1_sel_wr <= 1'b0;
    end else begin
        if (((outStream_V_dest_V_1_ack_in == 1'b1) & (outStream_V_dest_V_1_vld_in == 1'b1))) begin
            outStream_V_dest_V_1_sel_wr <= ~outStream_V_dest_V_1_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        outStream_V_dest_V_1_state <= 2'd0;
    end else begin
        if ((((outStream_V_dest_V_1_state == 2'd2) & (outStream_V_dest_V_1_vld_in == 1'b0)) | ((outStream_V_dest_V_1_state == 2'd3) & (outStream_V_dest_V_1_vld_in == 1'b0) & (outStream_V_dest_V_1_ack_out == 1'b1)))) begin
            outStream_V_dest_V_1_state <= 2'd2;
        end else if ((((outStream_V_dest_V_1_state == 2'd1) & (outStream_TREADY == 1'b0)) | ((outStream_V_dest_V_1_state == 2'd3) & (outStream_TREADY == 1'b0) & (outStream_V_dest_V_1_vld_in == 1'b1)))) begin
            outStream_V_dest_V_1_state <= 2'd1;
        end else if (((~((outStream_V_dest_V_1_vld_in == 1'b0) & (outStream_V_dest_V_1_ack_out == 1'b1)) & ~((outStream_TREADY == 1'b0) & (outStream_V_dest_V_1_vld_in == 1'b1)) & (outStream_V_dest_V_1_state == 2'd3)) | ((outStream_V_dest_V_1_state == 2'd1) & (outStream_V_dest_V_1_ack_out == 1'b1)) | ((outStream_V_dest_V_1_state == 2'd2) & (outStream_V_dest_V_1_vld_in == 1'b1)))) begin
            outStream_V_dest_V_1_state <= 2'd3;
        end else begin
            outStream_V_dest_V_1_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        outStream_V_id_V_1_sel_rd <= 1'b0;
    end else begin
        if (((outStream_V_id_V_1_ack_out == 1'b1) & (outStream_V_id_V_1_vld_out == 1'b1))) begin
            outStream_V_id_V_1_sel_rd <= ~outStream_V_id_V_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        outStream_V_id_V_1_sel_wr <= 1'b0;
    end else begin
        if (((outStream_V_id_V_1_ack_in == 1'b1) & (outStream_V_id_V_1_vld_in == 1'b1))) begin
            outStream_V_id_V_1_sel_wr <= ~outStream_V_id_V_1_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        outStream_V_id_V_1_state <= 2'd0;
    end else begin
        if ((((outStream_V_id_V_1_state == 2'd2) & (outStream_V_id_V_1_vld_in == 1'b0)) | ((outStream_V_id_V_1_state == 2'd3) & (outStream_V_id_V_1_vld_in == 1'b0) & (outStream_V_id_V_1_ack_out == 1'b1)))) begin
            outStream_V_id_V_1_state <= 2'd2;
        end else if ((((outStream_V_id_V_1_state == 2'd1) & (outStream_TREADY == 1'b0)) | ((outStream_V_id_V_1_state == 2'd3) & (outStream_TREADY == 1'b0) & (outStream_V_id_V_1_vld_in == 1'b1)))) begin
            outStream_V_id_V_1_state <= 2'd1;
        end else if (((~((outStream_V_id_V_1_vld_in == 1'b0) & (outStream_V_id_V_1_ack_out == 1'b1)) & ~((outStream_TREADY == 1'b0) & (outStream_V_id_V_1_vld_in == 1'b1)) & (outStream_V_id_V_1_state == 2'd3)) | ((outStream_V_id_V_1_state == 2'd1) & (outStream_V_id_V_1_ack_out == 1'b1)) | ((outStream_V_id_V_1_state == 2'd2) & (outStream_V_id_V_1_vld_in == 1'b1)))) begin
            outStream_V_id_V_1_state <= 2'd3;
        end else begin
            outStream_V_id_V_1_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        outStream_V_keep_V_1_sel_rd <= 1'b0;
    end else begin
        if (((outStream_V_keep_V_1_ack_out == 1'b1) & (outStream_V_keep_V_1_vld_out == 1'b1))) begin
            outStream_V_keep_V_1_sel_rd <= ~outStream_V_keep_V_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        outStream_V_keep_V_1_sel_wr <= 1'b0;
    end else begin
        if (((outStream_V_keep_V_1_ack_in == 1'b1) & (outStream_V_keep_V_1_vld_in == 1'b1))) begin
            outStream_V_keep_V_1_sel_wr <= ~outStream_V_keep_V_1_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        outStream_V_keep_V_1_state <= 2'd0;
    end else begin
        if ((((outStream_V_keep_V_1_state == 2'd2) & (outStream_V_keep_V_1_vld_in == 1'b0)) | ((outStream_V_keep_V_1_state == 2'd3) & (outStream_V_keep_V_1_vld_in == 1'b0) & (outStream_V_keep_V_1_ack_out == 1'b1)))) begin
            outStream_V_keep_V_1_state <= 2'd2;
        end else if ((((outStream_V_keep_V_1_state == 2'd1) & (outStream_TREADY == 1'b0)) | ((outStream_V_keep_V_1_state == 2'd3) & (outStream_TREADY == 1'b0) & (outStream_V_keep_V_1_vld_in == 1'b1)))) begin
            outStream_V_keep_V_1_state <= 2'd1;
        end else if (((~((outStream_V_keep_V_1_vld_in == 1'b0) & (outStream_V_keep_V_1_ack_out == 1'b1)) & ~((outStream_TREADY == 1'b0) & (outStream_V_keep_V_1_vld_in == 1'b1)) & (outStream_V_keep_V_1_state == 2'd3)) | ((outStream_V_keep_V_1_state == 2'd1) & (outStream_V_keep_V_1_ack_out == 1'b1)) | ((outStream_V_keep_V_1_state == 2'd2) & (outStream_V_keep_V_1_vld_in == 1'b1)))) begin
            outStream_V_keep_V_1_state <= 2'd3;
        end else begin
            outStream_V_keep_V_1_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        outStream_V_last_V_1_sel_rd <= 1'b0;
    end else begin
        if (((outStream_V_last_V_1_ack_out == 1'b1) & (outStream_V_last_V_1_vld_out == 1'b1))) begin
            outStream_V_last_V_1_sel_rd <= ~outStream_V_last_V_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        outStream_V_last_V_1_sel_wr <= 1'b0;
    end else begin
        if (((outStream_V_last_V_1_ack_in == 1'b1) & (outStream_V_last_V_1_vld_in == 1'b1))) begin
            outStream_V_last_V_1_sel_wr <= ~outStream_V_last_V_1_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        outStream_V_last_V_1_state <= 2'd0;
    end else begin
        if ((((outStream_V_last_V_1_state == 2'd2) & (outStream_V_last_V_1_vld_in == 1'b0)) | ((outStream_V_last_V_1_state == 2'd3) & (outStream_V_last_V_1_vld_in == 1'b0) & (outStream_V_last_V_1_ack_out == 1'b1)))) begin
            outStream_V_last_V_1_state <= 2'd2;
        end else if ((((outStream_V_last_V_1_state == 2'd1) & (outStream_TREADY == 1'b0)) | ((outStream_V_last_V_1_state == 2'd3) & (outStream_TREADY == 1'b0) & (outStream_V_last_V_1_vld_in == 1'b1)))) begin
            outStream_V_last_V_1_state <= 2'd1;
        end else if (((~((outStream_V_last_V_1_vld_in == 1'b0) & (outStream_V_last_V_1_ack_out == 1'b1)) & ~((outStream_TREADY == 1'b0) & (outStream_V_last_V_1_vld_in == 1'b1)) & (outStream_V_last_V_1_state == 2'd3)) | ((outStream_V_last_V_1_state == 2'd1) & (outStream_V_last_V_1_ack_out == 1'b1)) | ((outStream_V_last_V_1_state == 2'd2) & (outStream_V_last_V_1_vld_in == 1'b1)))) begin
            outStream_V_last_V_1_state <= 2'd3;
        end else begin
            outStream_V_last_V_1_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        outStream_V_strb_V_1_sel_rd <= 1'b0;
    end else begin
        if (((outStream_V_strb_V_1_ack_out == 1'b1) & (outStream_V_strb_V_1_vld_out == 1'b1))) begin
            outStream_V_strb_V_1_sel_rd <= ~outStream_V_strb_V_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        outStream_V_strb_V_1_sel_wr <= 1'b0;
    end else begin
        if (((outStream_V_strb_V_1_ack_in == 1'b1) & (outStream_V_strb_V_1_vld_in == 1'b1))) begin
            outStream_V_strb_V_1_sel_wr <= ~outStream_V_strb_V_1_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        outStream_V_strb_V_1_state <= 2'd0;
    end else begin
        if ((((outStream_V_strb_V_1_state == 2'd2) & (outStream_V_strb_V_1_vld_in == 1'b0)) | ((outStream_V_strb_V_1_state == 2'd3) & (outStream_V_strb_V_1_vld_in == 1'b0) & (outStream_V_strb_V_1_ack_out == 1'b1)))) begin
            outStream_V_strb_V_1_state <= 2'd2;
        end else if ((((outStream_V_strb_V_1_state == 2'd1) & (outStream_TREADY == 1'b0)) | ((outStream_V_strb_V_1_state == 2'd3) & (outStream_TREADY == 1'b0) & (outStream_V_strb_V_1_vld_in == 1'b1)))) begin
            outStream_V_strb_V_1_state <= 2'd1;
        end else if (((~((outStream_V_strb_V_1_vld_in == 1'b0) & (outStream_V_strb_V_1_ack_out == 1'b1)) & ~((outStream_TREADY == 1'b0) & (outStream_V_strb_V_1_vld_in == 1'b1)) & (outStream_V_strb_V_1_state == 2'd3)) | ((outStream_V_strb_V_1_state == 2'd1) & (outStream_V_strb_V_1_ack_out == 1'b1)) | ((outStream_V_strb_V_1_state == 2'd2) & (outStream_V_strb_V_1_vld_in == 1'b1)))) begin
            outStream_V_strb_V_1_state <= 2'd3;
        end else begin
            outStream_V_strb_V_1_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        outStream_V_user_V_1_sel_rd <= 1'b0;
    end else begin
        if (((outStream_V_user_V_1_ack_out == 1'b1) & (outStream_V_user_V_1_vld_out == 1'b1))) begin
            outStream_V_user_V_1_sel_rd <= ~outStream_V_user_V_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        outStream_V_user_V_1_sel_wr <= 1'b0;
    end else begin
        if (((outStream_V_user_V_1_ack_in == 1'b1) & (outStream_V_user_V_1_vld_in == 1'b1))) begin
            outStream_V_user_V_1_sel_wr <= ~outStream_V_user_V_1_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        outStream_V_user_V_1_state <= 2'd0;
    end else begin
        if ((((outStream_V_user_V_1_state == 2'd2) & (outStream_V_user_V_1_vld_in == 1'b0)) | ((outStream_V_user_V_1_state == 2'd3) & (outStream_V_user_V_1_vld_in == 1'b0) & (outStream_V_user_V_1_ack_out == 1'b1)))) begin
            outStream_V_user_V_1_state <= 2'd2;
        end else if ((((outStream_V_user_V_1_state == 2'd1) & (outStream_TREADY == 1'b0)) | ((outStream_V_user_V_1_state == 2'd3) & (outStream_TREADY == 1'b0) & (outStream_V_user_V_1_vld_in == 1'b1)))) begin
            outStream_V_user_V_1_state <= 2'd1;
        end else if (((~((outStream_V_user_V_1_vld_in == 1'b0) & (outStream_V_user_V_1_ack_out == 1'b1)) & ~((outStream_TREADY == 1'b0) & (outStream_V_user_V_1_vld_in == 1'b1)) & (outStream_V_user_V_1_state == 2'd3)) | ((outStream_V_user_V_1_state == 2'd1) & (outStream_V_user_V_1_ack_out == 1'b1)) | ((outStream_V_user_V_1_state == 2'd2) & (outStream_V_user_V_1_vld_in == 1'b1)))) begin
            outStream_V_user_V_1_state <= 2'd3;
        end else begin
            outStream_V_user_V_1_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln10_fu_814_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        col_stride_0_reg_727 <= 2'd0;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln21_reg_5346 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        col_stride_0_reg_727 <= select_ln27_5_reg_5504;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln10_fu_814_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        indvar_flatten187_reg_692 <= 13'd0;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln21_reg_5346 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        indvar_flatten187_reg_692 <= select_ln25_7_reg_5570;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln10_fu_814_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        indvar_flatten461_reg_669 <= 14'd0;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln21_reg_5346 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        indvar_flatten461_reg_669 <= select_ln23_8_reg_5575;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln10_fu_814_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        indvar_flatten823_reg_646 <= 21'd0;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln21_reg_5346 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        indvar_flatten823_reg_646 <= add_ln21_reg_5350;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln10_fu_814_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        indvar_flatten_reg_715 <= 6'd0;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln21_reg_5346 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        indvar_flatten_reg_715 <= select_ln27_6_reg_5565;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln10_fu_814_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        input_ch_idx_0_reg_738 <= 4'd0;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln21_reg_5346 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        input_ch_idx_0_reg_738 <= input_ch_idx_reg_5560;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln10_fu_814_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        out_col_0_reg_704 <= 8'd0;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln21_reg_5346 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        out_col_0_reg_704 <= select_ln25_5_reg_5480;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln10_fu_814_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        out_row_0_reg_657 <= 8'd0;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln21_reg_5346 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        out_row_0_reg_657 <= select_ln21_4_reg_5470;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln9_fu_796_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        phi_ln10_reg_624 <= 3'd0;
    end else if (((icmp_ln10_fu_814_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        phi_ln10_reg_624 <= add_ln10_fu_802_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln9_fu_796_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        phi_ln9_reg_602 <= add_ln9_fu_784_p2;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        phi_ln9_reg_602 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln9_fu_796_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        phi_mul838_reg_635 <= 12'd0;
    end else if (((icmp_ln10_fu_814_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        phi_mul838_reg_635 <= add_ln627_1_fu_808_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln9_fu_796_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        phi_mul_reg_613 <= add_ln627_fu_790_p2;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        phi_mul_reg_613 <= 12'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln10_fu_814_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        row_stride_0_reg_681 <= 2'd0;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln21_reg_5346 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        row_stride_0_reg_681 <= select_ln23_6_reg_5475;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln21_reg_5346 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln107_1_reg_5586 <= add_ln107_1_fu_1597_p2;
        line_buff_group_0_va_5_reg_5591 <= sext_ln203_fu_1591_p1;
        line_buff_group_1_va_5_reg_5596 <= sext_ln203_fu_1591_p1;
        sext_ln203_reg_5580 <= sext_ln203_fu_1591_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln21_reg_5346 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        add_ln107_reg_5550 <= add_ln107_fu_1511_p2;
        curr_input_data_sub_1_reg_5539 <= {{inStream_V_data_0_data_out[31:16]}};
        curr_input_data_sub_s_reg_5534 <= curr_input_data_sub_s_fu_1487_p1;
        mul_ln203_reg_5544 <= mul_ln203_fu_1505_p2;
        select_ln27_1_reg_5490 <= select_ln27_1_fu_1390_p3;
        select_ln27_2_reg_5494 <= select_ln27_2_fu_1398_p3;
        select_ln27_4_reg_5499 <= select_ln27_4_fu_1449_p3;
        select_ln27_reg_5485 <= select_ln27_fu_1326_p3;
        tmp_dest_V_reg_5529 <= inStream_V_dest_V_0_data_out;
        tmp_id_V_reg_5524 <= inStream_V_id_V_0_data_out;
        tmp_keep_V_reg_5509 <= inStream_V_keep_V_0_data_out;
        tmp_strb_V_reg_5514 <= inStream_V_strb_V_0_data_out;
        tmp_user_V_reg_5519 <= inStream_V_user_V_0_data_out;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        add_ln107_reg_5550_pp0_iter1_reg <= add_ln107_reg_5550;
        and_ln68_1_reg_5555_pp0_iter1_reg <= and_ln68_1_reg_5555;
        and_ln68_1_reg_5555_pp0_iter2_reg <= and_ln68_1_reg_5555_pp0_iter1_reg;
        and_ln68_1_reg_5555_pp0_iter3_reg <= and_ln68_1_reg_5555_pp0_iter2_reg;
        icmp_ln203_1_reg_5705_pp0_iter3_reg <= icmp_ln203_1_reg_5705;
        icmp_ln203_reg_5683_pp0_iter3_reg <= icmp_ln203_reg_5683;
        select_ln27_1_reg_5490_pp0_iter1_reg <= select_ln27_1_reg_5490;
        select_ln27_1_reg_5490_pp0_iter2_reg <= select_ln27_1_reg_5490_pp0_iter1_reg;
        select_ln27_1_reg_5490_pp0_iter3_reg <= select_ln27_1_reg_5490_pp0_iter2_reg;
        select_ln27_reg_5485_pp0_iter1_reg <= select_ln27_reg_5485;
        tmp_dest_V_reg_5529_pp0_iter1_reg <= tmp_dest_V_reg_5529;
        tmp_dest_V_reg_5529_pp0_iter2_reg <= tmp_dest_V_reg_5529_pp0_iter1_reg;
        tmp_dest_V_reg_5529_pp0_iter3_reg <= tmp_dest_V_reg_5529_pp0_iter2_reg;
        tmp_id_V_reg_5524_pp0_iter1_reg <= tmp_id_V_reg_5524;
        tmp_id_V_reg_5524_pp0_iter2_reg <= tmp_id_V_reg_5524_pp0_iter1_reg;
        tmp_id_V_reg_5524_pp0_iter3_reg <= tmp_id_V_reg_5524_pp0_iter2_reg;
        tmp_keep_V_reg_5509_pp0_iter1_reg <= tmp_keep_V_reg_5509;
        tmp_keep_V_reg_5509_pp0_iter2_reg <= tmp_keep_V_reg_5509_pp0_iter1_reg;
        tmp_keep_V_reg_5509_pp0_iter3_reg <= tmp_keep_V_reg_5509_pp0_iter2_reg;
        tmp_strb_V_reg_5514_pp0_iter1_reg <= tmp_strb_V_reg_5514;
        tmp_strb_V_reg_5514_pp0_iter2_reg <= tmp_strb_V_reg_5514_pp0_iter1_reg;
        tmp_strb_V_reg_5514_pp0_iter3_reg <= tmp_strb_V_reg_5514_pp0_iter2_reg;
        tmp_user_V_reg_5519_pp0_iter1_reg <= tmp_user_V_reg_5519;
        tmp_user_V_reg_5519_pp0_iter2_reg <= tmp_user_V_reg_5519_pp0_iter1_reg;
        tmp_user_V_reg_5519_pp0_iter3_reg <= tmp_user_V_reg_5519_pp0_iter2_reg;
        trunc_ln203_reg_5665_pp0_iter3_reg <= trunc_ln203_reg_5665;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        add_ln21_reg_5350 <= add_ln21_fu_948_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln27_reg_5341 <= add_ln27_fu_936_p2;
        and_ln59_1_reg_5336 <= and_ln59_1_fu_926_p2;
        col_idx_reg_5326 <= col_idx_fu_878_p2;
        conv_count_1_reg_5331 <= conv_count_1_fu_906_p3;
        icmp_ln21_reg_5346 <= icmp_ln21_fu_942_p2;
        icmp_ln21_reg_5346_pp0_iter1_reg <= icmp_ln21_reg_5346;
        icmp_ln37_reg_5306 <= icmp_ln37_fu_848_p2;
        icmp_ln59_reg_5311 <= icmp_ln59_fu_854_p2;
        icmp_ln68_1_reg_5321 <= icmp_ln68_1_fu_868_p2;
        icmp_ln68_reg_5301 <= icmp_ln68_fu_828_p2;
        shl_ln1_reg_5316[8 : 1] <= shl_ln1_fu_860_p3[8 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln21_fu_942_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        and_ln21_5_reg_5389 <= and_ln21_5_fu_1020_p2;
        and_ln23_3_reg_5428 <= and_ln23_3_fu_1078_p2;
        col_stride_reg_5464 <= col_stride_fu_1116_p2;
        icmp_ln23_reg_5362 <= icmp_ln23_fu_960_p2;
        icmp_ln29_reg_5384 <= icmp_ln29_fu_996_p2;
        icmp_ln37_3_reg_5416 <= icmp_ln37_3_fu_1060_p2;
        or_ln23_1_reg_5421 <= or_ln23_1_fu_1072_p2;
        or_ln23_reg_5401 <= or_ln23_fu_1032_p2;
        or_ln25_1_reg_5447 <= or_ln25_1_fu_1096_p2;
        out_col_reg_5439 <= out_col_fu_1084_p2;
        out_row_reg_5355 <= out_row_fu_954_p2;
        row_stride_reg_5396 <= row_stride_fu_1026_p2;
        select_ln21_reg_5370 <= select_ln21_fu_966_p3;
        select_ln23_reg_5411 <= select_ln23_fu_1038_p3;
        select_ln25_reg_5452 <= select_ln25_fu_1102_p3;
        xor_ln21_reg_5376 <= xor_ln21_fu_990_p2;
        xor_ln25_reg_5458 <= xor_ln25_fu_1110_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (select_ln27_1_fu_1390_p3 == 1'd1) & (icmp_ln21_reg_5346 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        and_ln68_1_reg_5555 <= and_ln68_1_fu_1529_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (select_ln27_1_reg_5490_pp0_iter2_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        icmp_ln1494_2_reg_5919 <= icmp_ln1494_2_fu_4366_p2;
        select_ln123_1_reg_5909 <= select_ln123_1_fu_4338_p3;
        select_ln123_4_reg_5924 <= select_ln123_4_fu_4387_p3;
        tmp_4_reg_5914 <= tmp_4_fu_4345_p10;
        tmp_8_reg_5930 <= tmp_8_fu_4394_p10;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (select_ln27_1_reg_5490_pp0_iter2_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln1494_reg_5880 <= icmp_ln1494_fu_3460_p2;
        icmp_ln203_2_reg_5760 <= icmp_ln203_2_fu_1788_p2;
        icmp_ln203_3_reg_5776 <= icmp_ln203_3_fu_1801_p2;
        icmp_ln203_4_reg_5795 <= icmp_ln203_4_fu_1814_p2;
        icmp_ln203_5_reg_5817 <= icmp_ln203_5_fu_1827_p2;
        icmp_ln203_6_reg_5842 <= icmp_ln203_6_fu_1840_p2;
        tmp_1_reg_5870 <= tmp_1_fu_3418_p10;
        tmp_2_reg_5875 <= tmp_2_fu_3439_p10;
        tmp_3_reg_5885 <= tmp_3_fu_3466_p10;
        tmp_5_reg_5891 <= tmp_5_fu_3487_p10;
        tmp_6_reg_5897 <= tmp_6_fu_3508_p10;
        tmp_7_reg_5903 <= tmp_7_fu_3529_p10;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (select_ln27_1_reg_5490_pp0_iter1_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        icmp_ln203_1_reg_5705 <= icmp_ln203_1_fu_1625_p2;
        icmp_ln203_reg_5683 <= icmp_ln203_fu_1619_p2;
        trunc_ln203_reg_5665 <= trunc_ln203_fu_1616_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((inStream_V_data_0_load_A == 1'b1)) begin
        inStream_V_data_0_payload_A <= inStream_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((inStream_V_data_0_load_B == 1'b1)) begin
        inStream_V_data_0_payload_B <= inStream_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((inStream_V_dest_V_0_load_A == 1'b1)) begin
        inStream_V_dest_V_0_payload_A <= inStream_TDEST;
    end
end

always @ (posedge ap_clk) begin
    if ((inStream_V_dest_V_0_load_B == 1'b1)) begin
        inStream_V_dest_V_0_payload_B <= inStream_TDEST;
    end
end

always @ (posedge ap_clk) begin
    if ((inStream_V_id_V_0_load_A == 1'b1)) begin
        inStream_V_id_V_0_payload_A <= inStream_TID;
    end
end

always @ (posedge ap_clk) begin
    if ((inStream_V_id_V_0_load_B == 1'b1)) begin
        inStream_V_id_V_0_payload_B <= inStream_TID;
    end
end

always @ (posedge ap_clk) begin
    if ((inStream_V_keep_V_0_load_A == 1'b1)) begin
        inStream_V_keep_V_0_payload_A <= inStream_TKEEP;
    end
end

always @ (posedge ap_clk) begin
    if ((inStream_V_keep_V_0_load_B == 1'b1)) begin
        inStream_V_keep_V_0_payload_B <= inStream_TKEEP;
    end
end

always @ (posedge ap_clk) begin
    if ((inStream_V_strb_V_0_load_A == 1'b1)) begin
        inStream_V_strb_V_0_payload_A <= inStream_TSTRB;
    end
end

always @ (posedge ap_clk) begin
    if ((inStream_V_strb_V_0_load_B == 1'b1)) begin
        inStream_V_strb_V_0_payload_B <= inStream_TSTRB;
    end
end

always @ (posedge ap_clk) begin
    if ((inStream_V_user_V_0_load_A == 1'b1)) begin
        inStream_V_user_V_0_payload_A <= inStream_TUSER;
    end
end

always @ (posedge ap_clk) begin
    if ((inStream_V_user_V_0_load_B == 1'b1)) begin
        inStream_V_user_V_0_payload_B <= inStream_TUSER;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln21_reg_5346 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        input_ch_idx_reg_5560 <= input_ch_idx_fu_1535_p2;
        select_ln21_4_reg_5470 <= select_ln21_4_fu_1160_p3;
        select_ln23_6_reg_5475 <= select_ln23_6_fu_1217_p3;
        select_ln23_8_reg_5575 <= select_ln23_8_fu_1573_p3;
        select_ln25_5_reg_5480 <= select_ln25_5_fu_1311_p3;
        select_ln25_7_reg_5570 <= select_ln25_7_fu_1560_p3;
        select_ln27_5_reg_5504 <= select_ln27_5_fu_1457_p3;
        select_ln27_6_reg_5565 <= select_ln27_6_fu_1547_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln21_reg_5346_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        line_buff_group_0_va_7_reg_5616 <= sext_ln107_1_fu_1609_p1;
        line_buff_group_1_va_7_reg_5636 <= sext_ln107_1_fu_1609_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((outStream_V_data_1_load_A == 1'b1)) begin
        outStream_V_data_1_payload_A <= call_ln79_write_output_fu_750_outStream_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((outStream_V_data_1_load_B == 1'b1)) begin
        outStream_V_data_1_payload_B <= call_ln79_write_output_fu_750_outStream_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((outStream_V_dest_V_1_load_A == 1'b1)) begin
        outStream_V_dest_V_1_payload_A <= call_ln79_write_output_fu_750_outStream_TDEST;
    end
end

always @ (posedge ap_clk) begin
    if ((outStream_V_dest_V_1_load_B == 1'b1)) begin
        outStream_V_dest_V_1_payload_B <= call_ln79_write_output_fu_750_outStream_TDEST;
    end
end

always @ (posedge ap_clk) begin
    if ((outStream_V_id_V_1_load_A == 1'b1)) begin
        outStream_V_id_V_1_payload_A <= call_ln79_write_output_fu_750_outStream_TID;
    end
end

always @ (posedge ap_clk) begin
    if ((outStream_V_id_V_1_load_B == 1'b1)) begin
        outStream_V_id_V_1_payload_B <= call_ln79_write_output_fu_750_outStream_TID;
    end
end

always @ (posedge ap_clk) begin
    if ((outStream_V_keep_V_1_load_A == 1'b1)) begin
        outStream_V_keep_V_1_payload_A <= call_ln79_write_output_fu_750_outStream_TKEEP;
    end
end

always @ (posedge ap_clk) begin
    if ((outStream_V_keep_V_1_load_B == 1'b1)) begin
        outStream_V_keep_V_1_payload_B <= call_ln79_write_output_fu_750_outStream_TKEEP;
    end
end

always @ (posedge ap_clk) begin
    if ((outStream_V_last_V_1_load_A == 1'b1)) begin
        outStream_V_last_V_1_payload_A <= call_ln79_write_output_fu_750_outStream_TLAST;
    end
end

always @ (posedge ap_clk) begin
    if ((outStream_V_last_V_1_load_B == 1'b1)) begin
        outStream_V_last_V_1_payload_B <= call_ln79_write_output_fu_750_outStream_TLAST;
    end
end

always @ (posedge ap_clk) begin
    if ((outStream_V_strb_V_1_load_A == 1'b1)) begin
        outStream_V_strb_V_1_payload_A <= call_ln79_write_output_fu_750_outStream_TSTRB;
    end
end

always @ (posedge ap_clk) begin
    if ((outStream_V_strb_V_1_load_B == 1'b1)) begin
        outStream_V_strb_V_1_payload_B <= call_ln79_write_output_fu_750_outStream_TSTRB;
    end
end

always @ (posedge ap_clk) begin
    if ((outStream_V_user_V_1_load_A == 1'b1)) begin
        outStream_V_user_V_1_payload_A <= call_ln79_write_output_fu_750_outStream_TUSER;
    end
end

always @ (posedge ap_clk) begin
    if ((outStream_V_user_V_1_load_B == 1'b1)) begin
        outStream_V_user_V_1_payload_B <= call_ln79_write_output_fu_750_outStream_TUSER;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (select_ln27_1_reg_5490_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage1_11001) & (select_ln27_1_reg_5490_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        reg_776 <= line_buff_group_0_va_1_q1;
        reg_780 <= line_buff_group_1_va_1_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (select_ln27_1_reg_5490_pp0_iter3_reg == 1'd1) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        val_output_0_7_V_17_fu_452 <= val_output_0_7_V_62_fu_4657_p3;
        val_output_0_7_V_1_fu_432 <= val_output_0_7_V_77_fu_4762_p3;
        val_output_0_7_V_24_fu_448 <= val_output_0_7_V_67_fu_4692_p3;
        val_output_0_7_V_30_fu_444 <= val_output_0_7_V_71_fu_4720_p3;
        val_output_0_7_V_35_fu_440 <= val_output_0_7_V_74_fu_4741_p3;
        val_output_0_7_V_39_fu_456 <= val_output_0_7_V_56_fu_4615_p3;
        val_output_0_7_V_4_fu_460 <= val_output_0_7_V_49_fu_4566_p3;
        val_output_0_7_V_6_fu_436 <= val_output_0_7_V_76_fu_4755_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (select_ln27_1_reg_5490_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        window_group_0_6_va_1_reg_5653 <= line_buff_group_0_va_q1;
        window_group_0_6_va_reg_5641 <= line_buff_group_0_va_q0;
        window_group_1_6_va_1_reg_5748 <= line_buff_group_1_va_q1;
        window_group_1_6_va_reg_5736 <= line_buff_group_1_va_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (select_ln27_1_reg_5490_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        window_group_0_7_va_10_fu_216 <= window_group_0_7_va_165_fu_2577_p3;
        window_group_0_7_va_12_fu_224 <= window_group_0_7_va_92_fu_2014_p3;
        window_group_0_7_va_13_fu_228 <= window_group_0_7_va_127_fu_2281_p3;
        window_group_0_7_va_14_fu_232 <= window_group_0_7_va_162_fu_2553_p3;
        window_group_0_7_va_16_fu_240 <= window_group_0_7_va_88_fu_1983_p3;
        window_group_0_7_va_17_fu_244 <= window_group_0_7_va_123_fu_2250_p3;
        window_group_0_7_va_18_fu_248 <= window_group_0_7_va_158_fu_2521_p3;
        window_group_0_7_va_1_fu_180 <= window_group_0_7_va_133_fu_2327_p3;
        window_group_0_7_va_20_fu_256 <= window_group_0_7_va_83_fu_1944_p3;
        window_group_0_7_va_21_fu_260 <= window_group_0_7_va_118_fu_2211_p3;
        window_group_0_7_va_22_fu_264 <= window_group_0_7_va_153_fu_2481_p3;
        window_group_0_7_va_24_fu_272 <= window_group_0_7_va_77_fu_1898_p3;
        window_group_0_7_va_25_fu_276 <= window_group_0_7_va_112_fu_2165_p3;
        window_group_0_7_va_26_fu_280 <= window_group_0_7_va_147_fu_2434_p3;
        window_group_0_7_va_28_fu_288 <= window_group_0_7_va_70_fu_1845_p3;
        window_group_0_7_va_29_fu_292 <= window_group_0_7_va_105_fu_2112_p3;
        window_group_0_7_va_2_fu_184 <= window_group_0_7_va_168_fu_2601_p3;
        window_group_0_7_va_30_fu_296 <= window_group_0_7_va_140_fu_2380_p3;
        window_group_0_7_va_4_fu_192 <= window_group_0_7_va_97_fu_2052_p3;
        window_group_0_7_va_5_fu_196 <= window_group_0_7_va_132_fu_2319_p3;
        window_group_0_7_va_6_fu_200 <= window_group_0_7_va_167_fu_2593_p3;
        window_group_0_7_va_8_fu_208 <= window_group_0_7_va_95_fu_2037_p3;
        window_group_0_7_va_9_fu_212 <= window_group_0_7_va_130_fu_2304_p3;
        window_group_0_7_va_fu_176 <= window_group_0_7_va_98_fu_2060_p3;
        window_group_1_7_va_10_fu_344 <= window_group_1_7_va_165_fu_3386_p3;
        window_group_1_7_va_12_fu_352 <= window_group_1_7_va_92_fu_2823_p3;
        window_group_1_7_va_13_fu_356 <= window_group_1_7_va_127_fu_3090_p3;
        window_group_1_7_va_14_fu_360 <= window_group_1_7_va_162_fu_3362_p3;
        window_group_1_7_va_16_fu_368 <= window_group_1_7_va_88_fu_2792_p3;
        window_group_1_7_va_17_fu_372 <= window_group_1_7_va_123_fu_3059_p3;
        window_group_1_7_va_18_fu_376 <= window_group_1_7_va_158_fu_3330_p3;
        window_group_1_7_va_1_fu_308 <= window_group_1_7_va_133_fu_3136_p3;
        window_group_1_7_va_20_fu_384 <= window_group_1_7_va_83_fu_2753_p3;
        window_group_1_7_va_21_fu_388 <= window_group_1_7_va_118_fu_3020_p3;
        window_group_1_7_va_22_fu_392 <= window_group_1_7_va_153_fu_3290_p3;
        window_group_1_7_va_24_fu_400 <= window_group_1_7_va_77_fu_2707_p3;
        window_group_1_7_va_25_fu_404 <= window_group_1_7_va_112_fu_2974_p3;
        window_group_1_7_va_26_fu_408 <= window_group_1_7_va_147_fu_3243_p3;
        window_group_1_7_va_28_fu_416 <= window_group_1_7_va_70_fu_2654_p3;
        window_group_1_7_va_29_fu_420 <= window_group_1_7_va_105_fu_2921_p3;
        window_group_1_7_va_2_fu_312 <= window_group_1_7_va_168_fu_3410_p3;
        window_group_1_7_va_30_fu_424 <= window_group_1_7_va_140_fu_3189_p3;
        window_group_1_7_va_4_fu_320 <= window_group_1_7_va_97_fu_2861_p3;
        window_group_1_7_va_5_fu_324 <= window_group_1_7_va_132_fu_3128_p3;
        window_group_1_7_va_6_fu_328 <= window_group_1_7_va_167_fu_3402_p3;
        window_group_1_7_va_8_fu_336 <= window_group_1_7_va_95_fu_2846_p3;
        window_group_1_7_va_9_fu_340 <= window_group_1_7_va_130_fu_3113_p3;
        window_group_1_7_va_fu_304 <= window_group_1_7_va_98_fu_2869_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (select_ln27_1_reg_5490_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        window_group_0_7_va_11_fu_220 <= window_group_0_7_va_200_fu_4055_p3;
        window_group_0_7_va_15_fu_236 <= window_group_0_7_va_197_fu_4034_p3;
        window_group_0_7_va_19_fu_252 <= window_group_0_7_va_193_fu_4006_p3;
        window_group_0_7_va_23_fu_268 <= window_group_0_7_va_188_fu_3971_p3;
        window_group_0_7_va_27_fu_284 <= window_group_0_7_va_182_fu_3929_p3;
        window_group_0_7_va_31_fu_300 <= window_group_0_7_va_175_fu_3880_p3;
        window_group_0_7_va_3_fu_188 <= window_group_0_7_va_203_fu_4076_p3;
        window_group_0_7_va_7_fu_204 <= window_group_0_7_va_202_fu_4069_p3;
        window_group_1_7_va_11_fu_348 <= window_group_1_7_va_200_fu_4300_p3;
        window_group_1_7_va_15_fu_364 <= window_group_1_7_va_197_fu_4279_p3;
        window_group_1_7_va_19_fu_380 <= window_group_1_7_va_193_fu_4251_p3;
        window_group_1_7_va_23_fu_396 <= window_group_1_7_va_188_fu_4216_p3;
        window_group_1_7_va_27_fu_412 <= window_group_1_7_va_182_fu_4174_p3;
        window_group_1_7_va_31_fu_428 <= window_group_1_7_va_175_fu_4125_p3;
        window_group_1_7_va_3_fu_316 <= window_group_1_7_va_203_fu_4321_p3;
        window_group_1_7_va_7_fu_332 <= window_group_1_7_va_202_fu_4314_p3;
    end
end

always @ (*) begin
    if ((icmp_ln21_fu_942_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state4 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state4 = 1'b0;
    end
end

always @ (*) begin
    if ((~((outStream_V_dest_V_1_state == 2'd1) | (outStream_V_id_V_1_state == 2'd1) | (outStream_V_last_V_1_state == 2'd1) | (outStream_V_user_V_1_state == 2'd1) | (outStream_V_strb_V_1_state == 2'd1) | (outStream_V_keep_V_1_state == 2'd1) | (outStream_V_data_1_state == 2'd1) | ((outStream_V_dest_V_1_state == 2'd3) & (outStream_TREADY == 1'b0)) | ((outStream_V_id_V_1_state == 2'd3) & (outStream_TREADY == 1'b0)) | ((outStream_V_last_V_1_state == 2'd3) & (outStream_TREADY == 1'b0)) | ((outStream_V_user_V_1_state == 2'd3) & (outStream_TREADY == 1'b0)) | ((outStream_V_strb_V_1_state == 2'd3) & (outStream_TREADY == 1'b0)) | ((outStream_V_keep_V_1_state == 2'd3) & (outStream_TREADY == 1'b0)) | ((outStream_V_data_1_state == 2'd3) & (outStream_TREADY == 1'b0))) & (1'b1 == ap_CS_fsm_state13))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (icmp_ln21_reg_5346 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ap_phi_mux_col_stride_0_phi_fu_731_p4 = select_ln27_5_reg_5504;
    end else begin
        ap_phi_mux_col_stride_0_phi_fu_731_p4 = col_stride_0_reg_727;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (icmp_ln21_reg_5346 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ap_phi_mux_indvar_flatten187_phi_fu_696_p4 = select_ln25_7_reg_5570;
    end else begin
        ap_phi_mux_indvar_flatten187_phi_fu_696_p4 = indvar_flatten187_reg_692;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (icmp_ln21_reg_5346 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ap_phi_mux_indvar_flatten461_phi_fu_673_p4 = select_ln23_8_reg_5575;
    end else begin
        ap_phi_mux_indvar_flatten461_phi_fu_673_p4 = indvar_flatten461_reg_669;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (icmp_ln21_reg_5346 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ap_phi_mux_indvar_flatten823_phi_fu_650_p4 = add_ln21_reg_5350;
    end else begin
        ap_phi_mux_indvar_flatten823_phi_fu_650_p4 = indvar_flatten823_reg_646;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (icmp_ln21_reg_5346 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ap_phi_mux_indvar_flatten_phi_fu_719_p4 = select_ln27_6_reg_5565;
    end else begin
        ap_phi_mux_indvar_flatten_phi_fu_719_p4 = indvar_flatten_reg_715;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (icmp_ln21_reg_5346 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ap_phi_mux_input_ch_idx_0_phi_fu_742_p4 = input_ch_idx_reg_5560;
    end else begin
        ap_phi_mux_input_ch_idx_0_phi_fu_742_p4 = input_ch_idx_0_reg_738;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (icmp_ln21_reg_5346 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ap_phi_mux_out_col_0_phi_fu_708_p4 = select_ln25_5_reg_5480;
    end else begin
        ap_phi_mux_out_col_0_phi_fu_708_p4 = out_col_0_reg_704;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (icmp_ln21_reg_5346 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ap_phi_mux_out_row_0_phi_fu_661_p4 = select_ln21_4_reg_5470;
    end else begin
        ap_phi_mux_out_row_0_phi_fu_661_p4 = out_row_0_reg_657;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (icmp_ln21_reg_5346 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ap_phi_mux_row_stride_0_phi_fu_685_p4 = select_ln23_6_reg_5475;
    end else begin
        ap_phi_mux_row_stride_0_phi_fu_685_p4 = row_stride_0_reg_681;
    end
end

always @ (*) begin
    if ((~((outStream_V_dest_V_1_state == 2'd1) | (outStream_V_id_V_1_state == 2'd1) | (outStream_V_last_V_1_state == 2'd1) | (outStream_V_user_V_1_state == 2'd1) | (outStream_V_strb_V_1_state == 2'd1) | (outStream_V_keep_V_1_state == 2'd1) | (outStream_V_data_1_state == 2'd1) | ((outStream_V_dest_V_1_state == 2'd3) & (outStream_TREADY == 1'b0)) | ((outStream_V_id_V_1_state == 2'd3) & (outStream_TREADY == 1'b0)) | ((outStream_V_last_V_1_state == 2'd3) & (outStream_TREADY == 1'b0)) | ((outStream_V_user_V_1_state == 2'd3) & (outStream_TREADY == 1'b0)) | ((outStream_V_strb_V_1_state == 2'd3) & (outStream_TREADY == 1'b0)) | ((outStream_V_keep_V_1_state == 2'd3) & (outStream_TREADY == 1'b0)) | ((outStream_V_data_1_state == 2'd3) & (outStream_TREADY == 1'b0))) & (1'b1 == ap_CS_fsm_state13))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001_ignoreCallOp800))) begin
        call_ln79_write_output_fu_750_ap_ce = 1'b1;
    end else begin
        call_ln79_write_output_fu_750_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (icmp_ln21_reg_5346 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        inStream_TDATA_blk_n = inStream_V_data_0_state[1'd0];
    end else begin
        inStream_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln21_reg_5346 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        inStream_V_data_0_ack_out = 1'b1;
    end else begin
        inStream_V_data_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if ((inStream_V_data_0_sel == 1'b1)) begin
        inStream_V_data_0_data_out = inStream_V_data_0_payload_B;
    end else begin
        inStream_V_data_0_data_out = inStream_V_data_0_payload_A;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln21_reg_5346 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        inStream_V_dest_V_0_ack_out = 1'b1;
    end else begin
        inStream_V_dest_V_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if ((inStream_V_dest_V_0_sel == 1'b1)) begin
        inStream_V_dest_V_0_data_out = inStream_V_dest_V_0_payload_B;
    end else begin
        inStream_V_dest_V_0_data_out = inStream_V_dest_V_0_payload_A;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln21_reg_5346 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        inStream_V_id_V_0_ack_out = 1'b1;
    end else begin
        inStream_V_id_V_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if ((inStream_V_id_V_0_sel == 1'b1)) begin
        inStream_V_id_V_0_data_out = inStream_V_id_V_0_payload_B;
    end else begin
        inStream_V_id_V_0_data_out = inStream_V_id_V_0_payload_A;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln21_reg_5346 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        inStream_V_keep_V_0_ack_out = 1'b1;
    end else begin
        inStream_V_keep_V_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if ((inStream_V_keep_V_0_sel == 1'b1)) begin
        inStream_V_keep_V_0_data_out = inStream_V_keep_V_0_payload_B;
    end else begin
        inStream_V_keep_V_0_data_out = inStream_V_keep_V_0_payload_A;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln21_reg_5346 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        inStream_V_strb_V_0_ack_out = 1'b1;
    end else begin
        inStream_V_strb_V_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if ((inStream_V_strb_V_0_sel == 1'b1)) begin
        inStream_V_strb_V_0_data_out = inStream_V_strb_V_0_payload_B;
    end else begin
        inStream_V_strb_V_0_data_out = inStream_V_strb_V_0_payload_A;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln21_reg_5346 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        inStream_V_user_V_0_ack_out = 1'b1;
    end else begin
        inStream_V_user_V_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if ((inStream_V_user_V_0_sel == 1'b1)) begin
        inStream_V_user_V_0_data_out = inStream_V_user_V_0_payload_B;
    end else begin
        inStream_V_user_V_0_data_out = inStream_V_user_V_0_payload_A;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            line_buff_group_0_va_1_address0 = line_buff_group_0_va_5_reg_5591;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            line_buff_group_0_va_1_address0 = sext_ln203_fu_1591_p1;
        end else begin
            line_buff_group_0_va_1_address0 = 'bx;
        end
    end else begin
        line_buff_group_0_va_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            line_buff_group_0_va_1_address1 = line_buff_group_0_va_7_reg_5616;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            line_buff_group_0_va_1_address1 = sext_ln107_fu_1602_p1;
        end else begin
            line_buff_group_0_va_1_address1 = 'bx;
        end
    end else begin
        line_buff_group_0_va_1_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1)))) begin
        line_buff_group_0_va_1_ce0 = 1'b1;
    end else begin
        line_buff_group_0_va_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        line_buff_group_0_va_1_ce1 = 1'b1;
    end else begin
        line_buff_group_0_va_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln21_reg_5346_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        line_buff_group_0_va_1_we0 = 1'b1;
    end else begin
        line_buff_group_0_va_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        line_buff_group_0_va_address0 = sext_ln107_fu_1602_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        line_buff_group_0_va_address0 = sext_ln203_reg_5580;
    end else begin
        line_buff_group_0_va_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1)))) begin
        line_buff_group_0_va_ce0 = 1'b1;
    end else begin
        line_buff_group_0_va_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        line_buff_group_0_va_ce1 = 1'b1;
    end else begin
        line_buff_group_0_va_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln21_reg_5346_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        line_buff_group_0_va_we0 = 1'b1;
    end else begin
        line_buff_group_0_va_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            line_buff_group_1_va_1_address0 = line_buff_group_1_va_5_reg_5596;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            line_buff_group_1_va_1_address0 = sext_ln203_fu_1591_p1;
        end else begin
            line_buff_group_1_va_1_address0 = 'bx;
        end
    end else begin
        line_buff_group_1_va_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            line_buff_group_1_va_1_address1 = line_buff_group_1_va_7_reg_5636;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            line_buff_group_1_va_1_address1 = sext_ln107_fu_1602_p1;
        end else begin
            line_buff_group_1_va_1_address1 = 'bx;
        end
    end else begin
        line_buff_group_1_va_1_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1)))) begin
        line_buff_group_1_va_1_ce0 = 1'b1;
    end else begin
        line_buff_group_1_va_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        line_buff_group_1_va_1_ce1 = 1'b1;
    end else begin
        line_buff_group_1_va_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln21_reg_5346_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        line_buff_group_1_va_1_we0 = 1'b1;
    end else begin
        line_buff_group_1_va_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        line_buff_group_1_va_address0 = sext_ln107_fu_1602_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        line_buff_group_1_va_address0 = sext_ln203_reg_5580;
    end else begin
        line_buff_group_1_va_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1)))) begin
        line_buff_group_1_va_ce0 = 1'b1;
    end else begin
        line_buff_group_1_va_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        line_buff_group_1_va_ce1 = 1'b1;
    end else begin
        line_buff_group_1_va_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln21_reg_5346_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        line_buff_group_1_va_we0 = 1'b1;
    end else begin
        line_buff_group_1_va_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (select_ln27_1_reg_5490_pp0_iter3_reg == 1'd1) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        outStream_TDATA_blk_n = call_ln79_write_output_fu_750_outStream_TDATA_blk_n;
    end else begin
        outStream_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((outStream_V_data_1_sel == 1'b1)) begin
        outStream_V_data_1_data_out = outStream_V_data_1_payload_B;
    end else begin
        outStream_V_data_1_data_out = outStream_V_data_1_payload_A;
    end
end

always @ (*) begin
    if ((outStream_V_dest_V_1_sel == 1'b1)) begin
        outStream_V_dest_V_1_data_out = outStream_V_dest_V_1_payload_B;
    end else begin
        outStream_V_dest_V_1_data_out = outStream_V_dest_V_1_payload_A;
    end
end

always @ (*) begin
    if ((outStream_V_id_V_1_sel == 1'b1)) begin
        outStream_V_id_V_1_data_out = outStream_V_id_V_1_payload_B;
    end else begin
        outStream_V_id_V_1_data_out = outStream_V_id_V_1_payload_A;
    end
end

always @ (*) begin
    if ((outStream_V_keep_V_1_sel == 1'b1)) begin
        outStream_V_keep_V_1_data_out = outStream_V_keep_V_1_payload_B;
    end else begin
        outStream_V_keep_V_1_data_out = outStream_V_keep_V_1_payload_A;
    end
end

always @ (*) begin
    if ((outStream_V_last_V_1_sel == 1'b1)) begin
        outStream_V_last_V_1_data_out = outStream_V_last_V_1_payload_B;
    end else begin
        outStream_V_last_V_1_data_out = outStream_V_last_V_1_payload_A;
    end
end

always @ (*) begin
    if ((outStream_V_strb_V_1_sel == 1'b1)) begin
        outStream_V_strb_V_1_data_out = outStream_V_strb_V_1_payload_B;
    end else begin
        outStream_V_strb_V_1_data_out = outStream_V_strb_V_1_payload_A;
    end
end

always @ (*) begin
    if ((outStream_V_user_V_1_sel == 1'b1)) begin
        outStream_V_user_V_1_data_out = outStream_V_user_V_1_payload_B;
    end else begin
        outStream_V_user_V_1_data_out = outStream_V_user_V_1_payload_A;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln9_fu_796_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((icmp_ln10_fu_814_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((icmp_ln21_fu_942_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone)) & ~((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if ((((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone)) | ((icmp_ln21_fu_942_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_state13 : begin
            if ((~((outStream_V_dest_V_1_state == 2'd1) | (outStream_V_id_V_1_state == 2'd1) | (outStream_V_last_V_1_state == 2'd1) | (outStream_V_user_V_1_state == 2'd1) | (outStream_V_strb_V_1_state == 2'd1) | (outStream_V_keep_V_1_state == 2'd1) | (outStream_V_data_1_state == 2'd1) | ((outStream_V_dest_V_1_state == 2'd3) & (outStream_TREADY == 1'b0)) | ((outStream_V_id_V_1_state == 2'd3) & (outStream_TREADY == 1'b0)) | ((outStream_V_last_V_1_state == 2'd3) & (outStream_TREADY == 1'b0)) | ((outStream_V_user_V_1_state == 2'd3) & (outStream_TREADY == 1'b0)) | ((outStream_V_strb_V_1_state == 2'd3) & (outStream_TREADY == 1'b0)) | ((outStream_V_keep_V_1_state == 2'd3) & (outStream_TREADY == 1'b0)) | ((outStream_V_data_1_state == 2'd3) & (outStream_TREADY == 1'b0))) & (1'b1 == ap_CS_fsm_state13))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln107_1_fu_1597_p2 = (mul_ln203_reg_5544 + zext_ln27_3_fu_1583_p1);

assign add_ln107_fu_1511_p2 = (mul_ln203_fu_1505_p2 + select_ln27_3_fu_1431_p3);

assign add_ln10_fu_802_p2 = (phi_ln10_reg_624 + 3'd1);

assign add_ln203_fu_1586_p2 = (mul_ln203_reg_5544 + zext_ln27_2_fu_1580_p1);

assign add_ln21_fu_948_p2 = (21'd1 + ap_phi_mux_indvar_flatten823_phi_fu_650_p4);

assign add_ln23_1_fu_1567_p2 = (indvar_flatten461_reg_669 + 14'd1);

assign add_ln25_1_fu_1554_p2 = (indvar_flatten187_reg_692 + 13'd1);

assign add_ln25_2_fu_1293_p2 = (9'd1 + trunc_ln107_1_fu_1289_p1);

assign add_ln27_1_fu_1541_p2 = (indvar_flatten_reg_715 + 6'd1);

assign add_ln27_3_fu_1443_p2 = (9'd1 + trunc_ln107_2_fu_1439_p1);

assign add_ln27_fu_936_p2 = (9'd1 + trunc_ln107_fu_932_p1);

assign add_ln34_1_fu_1337_p2 = (zext_ln27_1_fu_1334_p1 + select_ln25_1_fu_1229_p3);

assign add_ln38_1_fu_1263_p2 = ($signed(10'd1023) + $signed(zext_ln34_1_fu_1248_p1));

assign add_ln38_2_fu_1359_p2 = ($signed(10'd1023) + $signed(zext_ln34_2_fu_1343_p1));

assign add_ln627_1_fu_808_p2 = (phi_mul838_reg_635 + 12'd418);

assign add_ln627_fu_790_p2 = (phi_mul_reg_613 + 12'd418);

assign add_ln9_fu_784_p2 = (phi_ln9_reg_602 + 3'd1);

assign and_ln21_1_fu_1148_p2 = (xor_ln21_reg_5376 & icmp_ln68_1_reg_5321);

assign and_ln21_2_fu_1152_p2 = (xor_ln21_reg_5376 & and_ln59_1_reg_5336);

assign and_ln21_3_fu_1156_p2 = (xor_ln21_reg_5376 & icmp_ln29_reg_5384);

assign and_ln21_4_fu_1008_p2 = (xor_ln21_fu_990_p2 & icmp_ln27_fu_1002_p2);

assign and_ln21_5_fu_1020_p2 = (xor_ln21_fu_990_p2 & icmp_ln25_fu_1014_p2);

assign and_ln21_fu_1144_p2 = (xor_ln21_reg_5376 & icmp_ln59_reg_5311);

assign and_ln23_1_fu_1195_p2 = (or_ln23_1_reg_5421 & and_ln21_2_fu_1152_p2);

assign and_ln23_2_fu_1212_p2 = (or_ln23_1_reg_5421 & and_ln21_3_fu_1156_p2);

assign and_ln23_3_fu_1078_p2 = (or_ln23_1_fu_1072_p2 & and_ln21_4_fu_1008_p2);

assign and_ln23_fu_1190_p2 = (or_ln23_1_reg_5421 & and_ln21_1_fu_1148_p2);

assign and_ln25_1_fu_1306_p2 = (xor_ln25_reg_5458 & and_ln23_2_fu_1212_p2);

assign and_ln25_fu_1277_p2 = (xor_ln25_reg_5458 & and_ln23_1_fu_1195_p2);

assign and_ln37_1_fu_1257_p2 = (select_ln23_1_fu_1166_p3 & icmp_ln37_4_fu_1252_p2);

assign and_ln37_2_fu_1353_p2 = (select_ln23_1_fu_1166_p3 & icmp_ln37_5_fu_1347_p2);

assign and_ln37_fu_894_p2 = (icmp_ln37_fu_848_p2 & icmp_ln37_1_fu_888_p2);

assign and_ln59_1_fu_926_p2 = (and_ln59_fu_920_p2 & and_ln37_fu_894_p2);

assign and_ln59_2_fu_1378_p2 = (select_ln23_2_fu_1177_p3 & icmp_ln59_3_fu_1373_p2);

assign and_ln59_3_fu_1384_p2 = (and_ln59_2_fu_1378_p2 & and_ln37_2_fu_1353_p2);

assign and_ln59_fu_920_p2 = (icmp_ln59_fu_854_p2 & icmp_ln59_1_fu_914_p2);

assign and_ln68_1_fu_1529_p2 = (select_ln21_2_fu_1127_p3 & and_ln68_fu_1523_p2);

assign and_ln68_fu_1523_p2 = (select_ln25_2_fu_1241_p3 & icmp_ln68_2_fu_1517_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((select_ln27_1_reg_5490_pp0_iter3_reg == 1'd1) & (call_ln79_write_output_fu_750_outStream_TDATA_blk_n == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b1));
end

assign ap_block_pp0_stage0_11001_ignoreCallOp800 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((select_ln27_1_reg_5490_pp0_iter3_reg == 1'd1) & (call_ln79_write_output_fu_750_outStream_TDATA_blk_n == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b1));
end

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage1_11001 = ((icmp_ln21_reg_5346 == 1'd0) & (inStream_V_data_0_vld_out == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage1_subdone = ((icmp_ln21_reg_5346 == 1'd0) & (inStream_V_data_0_vld_out == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_block_state10_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter3_ignore_call427 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage1_iter3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state12_pp0_stage0_iter4 = ((select_ln27_1_reg_5490_pp0_iter3_reg == 1'd1) & (call_ln79_write_output_fu_750_outStream_TDATA_blk_n == 1'b0));
end

assign ap_block_state12_pp0_stage0_iter4_ignore_call427 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state13 = ((outStream_V_dest_V_1_state == 2'd1) | (outStream_V_id_V_1_state == 2'd1) | (outStream_V_last_V_1_state == 2'd1) | (outStream_V_user_V_1_state == 2'd1) | (outStream_V_strb_V_1_state == 2'd1) | (outStream_V_keep_V_1_state == 2'd1) | (outStream_V_data_1_state == 2'd1) | ((outStream_V_dest_V_1_state == 2'd3) & (outStream_TREADY == 1'b0)) | ((outStream_V_id_V_1_state == 2'd3) & (outStream_TREADY == 1'b0)) | ((outStream_V_last_V_1_state == 2'd3) & (outStream_TREADY == 1'b0)) | ((outStream_V_user_V_1_state == 2'd3) & (outStream_TREADY == 1'b0)) | ((outStream_V_strb_V_1_state == 2'd3) & (outStream_TREADY == 1'b0)) | ((outStream_V_keep_V_1_state == 2'd3) & (outStream_TREADY == 1'b0)) | ((outStream_V_data_1_state == 2'd3) & (outStream_TREADY == 1'b0)));
end

assign ap_block_state4_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter0_ignore_call427 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state5_pp0_stage1_iter0 = ((icmp_ln21_reg_5346 == 1'd0) & (inStream_V_data_0_vld_out == 1'b0));
end

assign ap_block_state6_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter1_ignore_call427 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter2_ignore_call427 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign call_ln79_write_output_fu_750_ap_start = call_ln79_write_output_fu_750_ap_start_reg;

assign call_ln79_write_output_fu_750_outStream_TREADY = ((outStream_V_dest_V_1_ack_in & ap_CS_fsm_pp0_stage0) | (outStream_V_id_V_1_ack_in & ap_CS_fsm_pp0_stage0) | (outStream_V_last_V_1_ack_in & ap_CS_fsm_pp0_stage0) | (outStream_V_user_V_1_ack_in & ap_CS_fsm_pp0_stage0) | (outStream_V_strb_V_1_ack_in & ap_CS_fsm_pp0_stage0) | (outStream_V_keep_V_1_ack_in & ap_CS_fsm_pp0_stage0) | (outStream_V_data_1_ack_in & ap_CS_fsm_pp0_stage0));

assign call_ln79_write_output_fu_750_val_output_1_V = ((icmp_ln1494_5_fu_4769_p2[0:0] === 1'b1) ? tmp_8_reg_5930 : select_ln123_4_reg_5924);

assign col_idx_fu_878_p2 = (zext_ln27_fu_874_p1 + shl_ln1_fu_860_p3);

assign col_stride_fu_1116_p2 = (2'd1 + select_ln25_fu_1102_p3);

assign conv_count_1_fu_906_p3 = ((and_ln37_fu_894_p2[0:0] === 1'b1) ? conv_count_fu_900_p2 : 10'd0);

assign conv_count_fu_900_p2 = ($signed(10'd1023) + $signed(zext_ln34_fu_884_p1));

assign curr_input_data_sub_s_fu_1487_p1 = inStream_V_data_0_data_out[15:0];

assign icmp_ln10_fu_814_p2 = ((phi_ln10_reg_624 == 3'd7) ? 1'b1 : 1'b0);

assign icmp_ln1494_1_fu_4333_p2 = (($signed(tmp_3_reg_5885) > $signed(select_ln123_fu_4328_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1494_2_fu_4366_p2 = (($signed(tmp_4_fu_4345_p10) > $signed(select_ln123_1_fu_4338_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1494_3_fu_4372_p2 = (($signed(tmp_6_reg_5897) > $signed(tmp_5_reg_5891)) ? 1'b1 : 1'b0);

assign icmp_ln1494_4_fu_4382_p2 = (($signed(tmp_7_reg_5903) > $signed(select_ln123_3_fu_4376_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1494_5_fu_4769_p2 = (($signed(tmp_8_reg_5930) > $signed(select_ln123_4_reg_5924)) ? 1'b1 : 1'b0);

assign icmp_ln1494_fu_3460_p2 = (($signed(tmp_2_fu_3439_p10) > $signed(tmp_1_fu_3418_p10)) ? 1'b1 : 1'b0);

assign icmp_ln203_1_fu_1625_p2 = ((trunc_ln203_fu_1616_p1 == 3'd5) ? 1'b1 : 1'b0);

assign icmp_ln203_2_fu_1788_p2 = ((trunc_ln203_reg_5665 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln203_3_fu_1801_p2 = ((trunc_ln203_reg_5665 == 3'd3) ? 1'b1 : 1'b0);

assign icmp_ln203_4_fu_1814_p2 = ((trunc_ln203_reg_5665 == 3'd2) ? 1'b1 : 1'b0);

assign icmp_ln203_5_fu_1827_p2 = ((trunc_ln203_reg_5665 == 3'd1) ? 1'b1 : 1'b0);

assign icmp_ln203_6_fu_1840_p2 = ((trunc_ln203_reg_5665 == 3'd0) ? 1'b1 : 1'b0);

assign icmp_ln203_fu_1619_p2 = ((trunc_ln203_fu_1616_p1 == 3'd6) ? 1'b1 : 1'b0);

assign icmp_ln21_fu_942_p2 = ((ap_phi_mux_indvar_flatten823_phi_fu_650_p4 == 21'd1384448) ? 1'b1 : 1'b0);

assign icmp_ln23_fu_960_p2 = ((ap_phi_mux_indvar_flatten461_phi_fu_673_p4 == 14'd6656) ? 1'b1 : 1'b0);

assign icmp_ln25_fu_1014_p2 = ((ap_phi_mux_indvar_flatten187_phi_fu_696_p4 == 13'd3328) ? 1'b1 : 1'b0);

assign icmp_ln27_fu_1002_p2 = ((ap_phi_mux_indvar_flatten_phi_fu_719_p4 == 6'd16) ? 1'b1 : 1'b0);

assign icmp_ln29_fu_996_p2 = ((ap_phi_mux_input_ch_idx_0_phi_fu_742_p4 == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln37_1_fu_888_p2 = ((col_idx_fu_878_p2 != 9'd0) ? 1'b1 : 1'b0);

assign icmp_ln37_2_fu_1133_p2 = ((out_row_reg_5355 != 8'd0) ? 1'b1 : 1'b0);

assign icmp_ln37_3_fu_1060_p2 = ((select_ln21_1_fu_982_p3 != sext_ln37_1_fu_1056_p1) ? 1'b1 : 1'b0);

assign icmp_ln37_4_fu_1252_p2 = ((out_col_reg_5439 != 8'd0) ? 1'b1 : 1'b0);

assign icmp_ln37_5_fu_1347_p2 = ((add_ln34_1_fu_1337_p2 != 9'd0) ? 1'b1 : 1'b0);

assign icmp_ln37_fu_848_p2 = ((shl_ln_fu_820_p3 != sext_ln37_fu_844_p1) ? 1'b1 : 1'b0);

assign icmp_ln59_1_fu_914_p2 = ((ap_phi_mux_col_stride_0_phi_fu_731_p4 == 2'd1) ? 1'b1 : 1'b0);

assign icmp_ln59_2_fu_1172_p2 = ((select_ln21_reg_5370 == 2'd0) ? 1'b1 : 1'b0);

assign icmp_ln59_3_fu_1373_p2 = ((select_ln25_reg_5452 == 2'd0) ? 1'b1 : 1'b0);

assign icmp_ln59_fu_854_p2 = ((ap_phi_mux_row_stride_0_phi_fu_685_p4 == 2'd1) ? 1'b1 : 1'b0);

assign icmp_ln68_1_fu_868_p2 = ((ap_phi_mux_out_col_0_phi_fu_708_p4 == 8'd207) ? 1'b1 : 1'b0);

assign icmp_ln68_2_fu_1517_p2 = ((select_ln27_fu_1326_p3 == 4'd7) ? 1'b1 : 1'b0);

assign icmp_ln68_3_fu_1122_p2 = ((out_row_reg_5355 == 8'd207) ? 1'b1 : 1'b0);

assign icmp_ln68_4_fu_1236_p2 = ((out_col_reg_5439 == 8'd207) ? 1'b1 : 1'b0);

assign icmp_ln68_fu_828_p2 = ((ap_phi_mux_out_row_0_phi_fu_661_p4 == 8'd207) ? 1'b1 : 1'b0);

assign icmp_ln9_fu_796_p2 = ((phi_ln9_reg_602 == 3'd7) ? 1'b1 : 1'b0);

assign inStream_TREADY = inStream_V_dest_V_0_state[1'd1];

assign inStream_V_data_0_ack_in = inStream_V_data_0_state[1'd1];

assign inStream_V_data_0_load_A = (inStream_V_data_0_state_cmp_full & ~inStream_V_data_0_sel_wr);

assign inStream_V_data_0_load_B = (inStream_V_data_0_state_cmp_full & inStream_V_data_0_sel_wr);

assign inStream_V_data_0_sel = inStream_V_data_0_sel_rd;

assign inStream_V_data_0_state_cmp_full = ((inStream_V_data_0_state != 2'd1) ? 1'b1 : 1'b0);

assign inStream_V_data_0_vld_in = inStream_TVALID;

assign inStream_V_data_0_vld_out = inStream_V_data_0_state[1'd0];

assign inStream_V_dest_V_0_ack_in = inStream_V_dest_V_0_state[1'd1];

assign inStream_V_dest_V_0_load_A = (inStream_V_dest_V_0_state_cmp_full & ~inStream_V_dest_V_0_sel_wr);

assign inStream_V_dest_V_0_load_B = (inStream_V_dest_V_0_state_cmp_full & inStream_V_dest_V_0_sel_wr);

assign inStream_V_dest_V_0_sel = inStream_V_dest_V_0_sel_rd;

assign inStream_V_dest_V_0_state_cmp_full = ((inStream_V_dest_V_0_state != 2'd1) ? 1'b1 : 1'b0);

assign inStream_V_dest_V_0_vld_in = inStream_TVALID;

assign inStream_V_dest_V_0_vld_out = inStream_V_dest_V_0_state[1'd0];

assign inStream_V_id_V_0_ack_in = inStream_V_id_V_0_state[1'd1];

assign inStream_V_id_V_0_load_A = (inStream_V_id_V_0_state_cmp_full & ~inStream_V_id_V_0_sel_wr);

assign inStream_V_id_V_0_load_B = (inStream_V_id_V_0_state_cmp_full & inStream_V_id_V_0_sel_wr);

assign inStream_V_id_V_0_sel = inStream_V_id_V_0_sel_rd;

assign inStream_V_id_V_0_state_cmp_full = ((inStream_V_id_V_0_state != 2'd1) ? 1'b1 : 1'b0);

assign inStream_V_id_V_0_vld_in = inStream_TVALID;

assign inStream_V_id_V_0_vld_out = inStream_V_id_V_0_state[1'd0];

assign inStream_V_keep_V_0_ack_in = inStream_V_keep_V_0_state[1'd1];

assign inStream_V_keep_V_0_load_A = (inStream_V_keep_V_0_state_cmp_full & ~inStream_V_keep_V_0_sel_wr);

assign inStream_V_keep_V_0_load_B = (inStream_V_keep_V_0_state_cmp_full & inStream_V_keep_V_0_sel_wr);

assign inStream_V_keep_V_0_sel = inStream_V_keep_V_0_sel_rd;

assign inStream_V_keep_V_0_state_cmp_full = ((inStream_V_keep_V_0_state != 2'd1) ? 1'b1 : 1'b0);

assign inStream_V_keep_V_0_vld_in = inStream_TVALID;

assign inStream_V_keep_V_0_vld_out = inStream_V_keep_V_0_state[1'd0];

assign inStream_V_strb_V_0_ack_in = inStream_V_strb_V_0_state[1'd1];

assign inStream_V_strb_V_0_load_A = (inStream_V_strb_V_0_state_cmp_full & ~inStream_V_strb_V_0_sel_wr);

assign inStream_V_strb_V_0_load_B = (inStream_V_strb_V_0_state_cmp_full & inStream_V_strb_V_0_sel_wr);

assign inStream_V_strb_V_0_sel = inStream_V_strb_V_0_sel_rd;

assign inStream_V_strb_V_0_state_cmp_full = ((inStream_V_strb_V_0_state != 2'd1) ? 1'b1 : 1'b0);

assign inStream_V_strb_V_0_vld_in = inStream_TVALID;

assign inStream_V_strb_V_0_vld_out = inStream_V_strb_V_0_state[1'd0];

assign inStream_V_user_V_0_ack_in = inStream_V_user_V_0_state[1'd1];

assign inStream_V_user_V_0_load_A = (inStream_V_user_V_0_state_cmp_full & ~inStream_V_user_V_0_sel_wr);

assign inStream_V_user_V_0_load_B = (inStream_V_user_V_0_state_cmp_full & inStream_V_user_V_0_sel_wr);

assign inStream_V_user_V_0_sel = inStream_V_user_V_0_sel_rd;

assign inStream_V_user_V_0_state_cmp_full = ((inStream_V_user_V_0_state != 2'd1) ? 1'b1 : 1'b0);

assign inStream_V_user_V_0_vld_in = inStream_TVALID;

assign inStream_V_user_V_0_vld_out = inStream_V_user_V_0_state[1'd0];

assign input_ch_idx_fu_1535_p2 = (select_ln27_fu_1326_p3 + 4'd1);

assign line_buff_group_0_va_address1 = sext_ln107_1_fu_1609_p1;

assign line_buff_group_1_va_address1 = sext_ln107_1_fu_1609_p1;

assign mul_ln203_fu_1505_p1 = mul_ln203_fu_1505_p10;

assign mul_ln203_fu_1505_p10 = select_ln27_fu_1326_p3;

assign mul_ln203_fu_1505_p2 = (13'd418 * mul_ln203_fu_1505_p1);

assign or_ln23_1_fu_1072_p2 = (xor_ln23_fu_1066_p2 | icmp_ln23_fu_960_p2);

assign or_ln23_fu_1032_p2 = (icmp_ln23_fu_960_p2 | and_ln21_5_fu_1020_p2);

assign or_ln25_1_fu_1096_p2 = (or_ln25_fu_1090_p2 | icmp_ln23_fu_960_p2);

assign or_ln25_fu_1090_p2 = (and_ln23_3_fu_1078_p2 | and_ln21_5_fu_1020_p2);

assign or_ln27_1_fu_1321_p2 = (or_ln27_fu_1316_p2 | or_ln23_reg_5401);

assign or_ln27_fu_1316_p2 = (and_ln25_1_fu_1306_p2 | and_ln23_3_reg_5428);

assign outStream_TDATA = outStream_V_data_1_data_out;

assign outStream_TDEST = outStream_V_dest_V_1_data_out;

assign outStream_TID = outStream_V_id_V_1_data_out;

assign outStream_TKEEP = outStream_V_keep_V_1_data_out;

assign outStream_TLAST = outStream_V_last_V_1_data_out;

assign outStream_TSTRB = outStream_V_strb_V_1_data_out;

assign outStream_TUSER = outStream_V_user_V_1_data_out;

assign outStream_TVALID = outStream_V_dest_V_1_state[1'd0];

assign outStream_V_data_1_ack_in = outStream_V_data_1_state[1'd1];

assign outStream_V_data_1_ack_out = outStream_TREADY;

assign outStream_V_data_1_load_A = (outStream_V_data_1_state_cmp_full & ~outStream_V_data_1_sel_wr);

assign outStream_V_data_1_load_B = (outStream_V_data_1_state_cmp_full & outStream_V_data_1_sel_wr);

assign outStream_V_data_1_sel = outStream_V_data_1_sel_rd;

assign outStream_V_data_1_state_cmp_full = ((outStream_V_data_1_state != 2'd1) ? 1'b1 : 1'b0);

assign outStream_V_data_1_vld_in = call_ln79_write_output_fu_750_outStream_TVALID;

assign outStream_V_data_1_vld_out = outStream_V_data_1_state[1'd0];

assign outStream_V_dest_V_1_ack_in = outStream_V_dest_V_1_state[1'd1];

assign outStream_V_dest_V_1_ack_out = outStream_TREADY;

assign outStream_V_dest_V_1_load_A = (outStream_V_dest_V_1_state_cmp_full & ~outStream_V_dest_V_1_sel_wr);

assign outStream_V_dest_V_1_load_B = (outStream_V_dest_V_1_state_cmp_full & outStream_V_dest_V_1_sel_wr);

assign outStream_V_dest_V_1_sel = outStream_V_dest_V_1_sel_rd;

assign outStream_V_dest_V_1_state_cmp_full = ((outStream_V_dest_V_1_state != 2'd1) ? 1'b1 : 1'b0);

assign outStream_V_dest_V_1_vld_in = call_ln79_write_output_fu_750_outStream_TVALID;

assign outStream_V_dest_V_1_vld_out = outStream_V_dest_V_1_state[1'd0];

assign outStream_V_id_V_1_ack_in = outStream_V_id_V_1_state[1'd1];

assign outStream_V_id_V_1_ack_out = outStream_TREADY;

assign outStream_V_id_V_1_load_A = (outStream_V_id_V_1_state_cmp_full & ~outStream_V_id_V_1_sel_wr);

assign outStream_V_id_V_1_load_B = (outStream_V_id_V_1_state_cmp_full & outStream_V_id_V_1_sel_wr);

assign outStream_V_id_V_1_sel = outStream_V_id_V_1_sel_rd;

assign outStream_V_id_V_1_state_cmp_full = ((outStream_V_id_V_1_state != 2'd1) ? 1'b1 : 1'b0);

assign outStream_V_id_V_1_vld_in = call_ln79_write_output_fu_750_outStream_TVALID;

assign outStream_V_id_V_1_vld_out = outStream_V_id_V_1_state[1'd0];

assign outStream_V_keep_V_1_ack_in = outStream_V_keep_V_1_state[1'd1];

assign outStream_V_keep_V_1_ack_out = outStream_TREADY;

assign outStream_V_keep_V_1_load_A = (outStream_V_keep_V_1_state_cmp_full & ~outStream_V_keep_V_1_sel_wr);

assign outStream_V_keep_V_1_load_B = (outStream_V_keep_V_1_state_cmp_full & outStream_V_keep_V_1_sel_wr);

assign outStream_V_keep_V_1_sel = outStream_V_keep_V_1_sel_rd;

assign outStream_V_keep_V_1_state_cmp_full = ((outStream_V_keep_V_1_state != 2'd1) ? 1'b1 : 1'b0);

assign outStream_V_keep_V_1_vld_in = call_ln79_write_output_fu_750_outStream_TVALID;

assign outStream_V_keep_V_1_vld_out = outStream_V_keep_V_1_state[1'd0];

assign outStream_V_last_V_1_ack_in = outStream_V_last_V_1_state[1'd1];

assign outStream_V_last_V_1_ack_out = outStream_TREADY;

assign outStream_V_last_V_1_load_A = (outStream_V_last_V_1_state_cmp_full & ~outStream_V_last_V_1_sel_wr);

assign outStream_V_last_V_1_load_B = (outStream_V_last_V_1_state_cmp_full & outStream_V_last_V_1_sel_wr);

assign outStream_V_last_V_1_sel = outStream_V_last_V_1_sel_rd;

assign outStream_V_last_V_1_state_cmp_full = ((outStream_V_last_V_1_state != 2'd1) ? 1'b1 : 1'b0);

assign outStream_V_last_V_1_vld_in = call_ln79_write_output_fu_750_outStream_TVALID;

assign outStream_V_last_V_1_vld_out = outStream_V_last_V_1_state[1'd0];

assign outStream_V_strb_V_1_ack_in = outStream_V_strb_V_1_state[1'd1];

assign outStream_V_strb_V_1_ack_out = outStream_TREADY;

assign outStream_V_strb_V_1_load_A = (outStream_V_strb_V_1_state_cmp_full & ~outStream_V_strb_V_1_sel_wr);

assign outStream_V_strb_V_1_load_B = (outStream_V_strb_V_1_state_cmp_full & outStream_V_strb_V_1_sel_wr);

assign outStream_V_strb_V_1_sel = outStream_V_strb_V_1_sel_rd;

assign outStream_V_strb_V_1_state_cmp_full = ((outStream_V_strb_V_1_state != 2'd1) ? 1'b1 : 1'b0);

assign outStream_V_strb_V_1_vld_in = call_ln79_write_output_fu_750_outStream_TVALID;

assign outStream_V_strb_V_1_vld_out = outStream_V_strb_V_1_state[1'd0];

assign outStream_V_user_V_1_ack_in = outStream_V_user_V_1_state[1'd1];

assign outStream_V_user_V_1_ack_out = outStream_TREADY;

assign outStream_V_user_V_1_load_A = (outStream_V_user_V_1_state_cmp_full & ~outStream_V_user_V_1_sel_wr);

assign outStream_V_user_V_1_load_B = (outStream_V_user_V_1_state_cmp_full & outStream_V_user_V_1_sel_wr);

assign outStream_V_user_V_1_sel = outStream_V_user_V_1_sel_rd;

assign outStream_V_user_V_1_state_cmp_full = ((outStream_V_user_V_1_state != 2'd1) ? 1'b1 : 1'b0);

assign outStream_V_user_V_1_vld_in = call_ln79_write_output_fu_750_outStream_TVALID;

assign outStream_V_user_V_1_vld_out = outStream_V_user_V_1_state[1'd0];

assign out_col_fu_1084_p2 = (8'd1 + select_ln23_fu_1038_p3);

assign out_row_fu_954_p2 = (8'd1 + ap_phi_mux_out_row_0_phi_fu_661_p4);

assign row_stride_fu_1026_p2 = (2'd1 + select_ln21_fu_966_p3);

assign select_ln123_1_fu_4338_p3 = ((icmp_ln1494_1_fu_4333_p2[0:0] === 1'b1) ? tmp_3_reg_5885 : select_ln123_fu_4328_p3);

assign select_ln123_3_fu_4376_p3 = ((icmp_ln1494_3_fu_4372_p2[0:0] === 1'b1) ? tmp_6_reg_5897 : tmp_5_reg_5891);

assign select_ln123_4_fu_4387_p3 = ((icmp_ln1494_4_fu_4382_p2[0:0] === 1'b1) ? tmp_7_reg_5903 : select_ln123_3_fu_4376_p3);

assign select_ln123_fu_4328_p3 = ((icmp_ln1494_reg_5880[0:0] === 1'b1) ? tmp_2_reg_5875 : tmp_1_reg_5870);

assign select_ln21_1_fu_982_p3 = ((icmp_ln23_fu_960_p2[0:0] === 1'b1) ? shl_ln33_mid1_fu_974_p3 : shl_ln_fu_820_p3);

assign select_ln21_2_fu_1127_p3 = ((icmp_ln23_reg_5362[0:0] === 1'b1) ? icmp_ln68_3_fu_1122_p2 : icmp_ln68_reg_5301);

assign select_ln21_3_fu_1138_p3 = ((icmp_ln23_reg_5362[0:0] === 1'b1) ? icmp_ln37_2_fu_1133_p2 : icmp_ln37_reg_5306);

assign select_ln21_4_fu_1160_p3 = ((icmp_ln23_reg_5362[0:0] === 1'b1) ? out_row_reg_5355 : out_row_0_reg_657);

assign select_ln21_fu_966_p3 = ((icmp_ln23_fu_960_p2[0:0] === 1'b1) ? 2'd0 : ap_phi_mux_row_stride_0_phi_fu_685_p4);

assign select_ln23_1_fu_1166_p3 = ((and_ln21_5_reg_5389[0:0] === 1'b1) ? icmp_ln37_3_reg_5416 : select_ln21_3_fu_1138_p3);

assign select_ln23_2_fu_1177_p3 = ((and_ln21_5_reg_5389[0:0] === 1'b1) ? icmp_ln59_2_fu_1172_p2 : and_ln21_fu_1144_p2);

assign select_ln23_3_fu_1184_p3 = ((or_ln23_reg_5401[0:0] === 1'b1) ? 9'd0 : shl_ln1_reg_5316);

assign select_ln23_4_fu_1200_p3 = ((or_ln23_reg_5401[0:0] === 1'b1) ? 9'd0 : col_idx_reg_5326);

assign select_ln23_5_fu_1206_p3 = ((or_ln23_reg_5401[0:0] === 1'b1) ? 9'd1 : add_ln27_reg_5341);

assign select_ln23_6_fu_1217_p3 = ((and_ln21_5_reg_5389[0:0] === 1'b1) ? row_stride_reg_5396 : select_ln21_reg_5370);

assign select_ln23_7_fu_1417_p3 = ((or_ln23_reg_5401[0:0] === 1'b1) ? 13'd0 : sext_ln27_2_fu_1414_p1);

assign select_ln23_8_fu_1573_p3 = ((icmp_ln23_reg_5362[0:0] === 1'b1) ? 14'd1 : add_ln23_1_fu_1567_p2);

assign select_ln23_fu_1038_p3 = ((or_ln23_fu_1032_p2[0:0] === 1'b1) ? 8'd0 : ap_phi_mux_out_col_0_phi_fu_708_p4);

assign select_ln25_1_fu_1229_p3 = ((and_ln23_3_reg_5428[0:0] === 1'b1) ? shl_ln34_mid1_fu_1222_p3 : select_ln23_3_fu_1184_p3);

assign select_ln25_2_fu_1241_p3 = ((and_ln23_3_reg_5428[0:0] === 1'b1) ? icmp_ln68_4_fu_1236_p2 : and_ln23_fu_1190_p2);

assign select_ln25_3_fu_1282_p3 = ((and_ln23_3_reg_5428[0:0] === 1'b1) ? shl_ln34_mid1_fu_1222_p3 : select_ln23_4_fu_1200_p3);

assign select_ln25_4_fu_1299_p3 = ((and_ln23_3_reg_5428[0:0] === 1'b1) ? add_ln25_2_fu_1293_p2 : select_ln23_5_fu_1206_p3);

assign select_ln25_5_fu_1311_p3 = ((and_ln23_3_reg_5428[0:0] === 1'b1) ? out_col_reg_5439 : select_ln23_reg_5411);

assign select_ln25_6_fu_1424_p3 = ((and_ln23_3_reg_5428[0:0] === 1'b1) ? sext_ln27_1_fu_1410_p1 : select_ln23_7_fu_1417_p3);

assign select_ln25_7_fu_1560_p3 = ((or_ln23_reg_5401[0:0] === 1'b1) ? 13'd1 : add_ln25_1_fu_1554_p2);

assign select_ln25_fu_1102_p3 = ((or_ln25_1_fu_1096_p2[0:0] === 1'b1) ? 2'd0 : ap_phi_mux_col_stride_0_phi_fu_731_p4);

assign select_ln27_1_fu_1390_p3 = ((and_ln25_1_fu_1306_p2[0:0] === 1'b1) ? and_ln59_3_fu_1384_p2 : and_ln25_fu_1277_p2);

assign select_ln27_2_fu_1398_p3 = ((and_ln25_1_fu_1306_p2[0:0] === 1'b1) ? add_ln34_1_fu_1337_p2 : select_ln25_3_fu_1282_p3);

assign select_ln27_3_fu_1431_p3 = ((and_ln25_1_fu_1306_p2[0:0] === 1'b1) ? sext_ln27_fu_1406_p1 : select_ln25_6_fu_1424_p3);

assign select_ln27_4_fu_1449_p3 = ((and_ln25_1_fu_1306_p2[0:0] === 1'b1) ? add_ln27_3_fu_1443_p2 : select_ln25_4_fu_1299_p3);

assign select_ln27_5_fu_1457_p3 = ((and_ln25_1_fu_1306_p2[0:0] === 1'b1) ? col_stride_reg_5464 : select_ln25_reg_5452);

assign select_ln27_6_fu_1547_p3 = ((or_ln25_1_reg_5447[0:0] === 1'b1) ? 6'd1 : add_ln27_1_fu_1541_p2);

assign select_ln27_fu_1326_p3 = ((or_ln27_1_fu_1321_p2[0:0] === 1'b1) ? 4'd0 : input_ch_idx_0_reg_738);

assign select_ln37_1_fu_1269_p3 = ((and_ln37_1_fu_1257_p2[0:0] === 1'b1) ? add_ln38_1_fu_1263_p2 : 10'd0);

assign select_ln37_2_fu_1365_p3 = ((and_ln37_2_fu_1353_p2[0:0] === 1'b1) ? add_ln38_2_fu_1359_p2 : 10'd0);

assign sext_ln107_1_fu_1609_p1 = $signed(add_ln107_1_reg_5586);

assign sext_ln107_fu_1602_p1 = $signed(add_ln107_reg_5550_pp0_iter1_reg);

assign sext_ln203_fu_1591_p1 = $signed(add_ln203_fu_1586_p2);

assign sext_ln27_1_fu_1410_p1 = select_ln37_1_fu_1269_p3;

assign sext_ln27_2_fu_1414_p1 = conv_count_1_reg_5331;

assign sext_ln27_fu_1406_p1 = select_ln37_2_fu_1365_p3;

assign sext_ln37_1_fu_1056_p1 = $signed(sub_ln37_1_fu_1050_p2);

assign sext_ln37_fu_844_p1 = $signed(sub_ln37_fu_838_p2);

assign shl_ln1_fu_860_p3 = {{ap_phi_mux_out_col_0_phi_fu_708_p4}, {1'd0}};

assign shl_ln33_mid1_fu_974_p3 = {{out_row_fu_954_p2}, {1'd0}};

assign shl_ln34_mid1_fu_1222_p3 = {{out_col_reg_5439}, {1'd0}};

assign shl_ln_fu_820_p3 = {{ap_phi_mux_out_row_0_phi_fu_661_p4}, {1'd0}};

assign sub_ln37_1_fu_1050_p2 = (3'd0 - zext_ln37_1_fu_1046_p1);

assign sub_ln37_fu_838_p2 = (3'd0 - zext_ln37_fu_834_p1);

assign tmp_1_fu_3418_p1 = ((icmp_ln203_6_fu_1840_p2[0:0] === 1'b1) ? window_group_0_6_va_reg_5641 : window_group_0_7_va_fu_176);

assign tmp_1_fu_3418_p2 = ((icmp_ln203_6_fu_1840_p2[0:0] === 1'b1) ? window_group_0_7_va_4_fu_192 : window_group_0_7_va_96_fu_2045_p3);

assign tmp_1_fu_3418_p3 = ((icmp_ln203_6_fu_1840_p2[0:0] === 1'b1) ? window_group_0_7_va_8_fu_208 : window_group_0_7_va_94_fu_2029_p3);

assign tmp_1_fu_3418_p4 = ((icmp_ln203_6_fu_1840_p2[0:0] === 1'b1) ? window_group_0_7_va_12_fu_224 : window_group_0_7_va_91_fu_2006_p3);

assign tmp_1_fu_3418_p5 = ((icmp_ln203_6_fu_1840_p2[0:0] === 1'b1) ? window_group_0_7_va_16_fu_240 : window_group_0_7_va_87_fu_1975_p3);

assign tmp_1_fu_3418_p6 = ((icmp_ln203_6_fu_1840_p2[0:0] === 1'b1) ? window_group_0_7_va_20_fu_256 : window_group_0_7_va_82_fu_1936_p3);

assign tmp_1_fu_3418_p7 = ((icmp_ln203_6_fu_1840_p2[0:0] === 1'b1) ? window_group_0_7_va_24_fu_272 : window_group_0_7_va_76_fu_1890_p3);

assign tmp_1_fu_3418_p8 = ((icmp_ln203_6_fu_1840_p2[0:0] === 1'b1) ? window_group_0_7_va_28_fu_288 : window_group_0_7_va_69_fu_1832_p3);

assign tmp_2_fu_3439_p1 = ((icmp_ln203_6_fu_1840_p2[0:0] === 1'b1) ? window_group_0_6_va_1_reg_5653 : window_group_0_7_va_1_fu_180);

assign tmp_2_fu_3439_p2 = ((icmp_ln203_6_fu_1840_p2[0:0] === 1'b1) ? window_group_0_7_va_5_fu_196 : window_group_0_7_va_131_fu_2312_p3);

assign tmp_2_fu_3439_p3 = ((icmp_ln203_6_fu_1840_p2[0:0] === 1'b1) ? window_group_0_7_va_9_fu_212 : window_group_0_7_va_129_fu_2296_p3);

assign tmp_2_fu_3439_p4 = ((icmp_ln203_6_fu_1840_p2[0:0] === 1'b1) ? window_group_0_7_va_13_fu_228 : window_group_0_7_va_126_fu_2273_p3);

assign tmp_2_fu_3439_p5 = ((icmp_ln203_6_fu_1840_p2[0:0] === 1'b1) ? window_group_0_7_va_17_fu_244 : window_group_0_7_va_122_fu_2242_p3);

assign tmp_2_fu_3439_p6 = ((icmp_ln203_6_fu_1840_p2[0:0] === 1'b1) ? window_group_0_7_va_21_fu_260 : window_group_0_7_va_117_fu_2203_p3);

assign tmp_2_fu_3439_p7 = ((icmp_ln203_6_fu_1840_p2[0:0] === 1'b1) ? window_group_0_7_va_25_fu_276 : window_group_0_7_va_111_fu_2157_p3);

assign tmp_2_fu_3439_p8 = ((icmp_ln203_6_fu_1840_p2[0:0] === 1'b1) ? window_group_0_7_va_29_fu_292 : window_group_0_7_va_104_fu_2104_p3);

assign tmp_3_fu_3466_p1 = ((icmp_ln203_6_fu_1840_p2[0:0] === 1'b1) ? reg_776 : window_group_0_7_va_2_fu_184);

assign tmp_3_fu_3466_p2 = ((icmp_ln203_6_fu_1840_p2[0:0] === 1'b1) ? window_group_0_7_va_6_fu_200 : window_group_0_7_va_166_fu_2585_p3);

assign tmp_3_fu_3466_p3 = ((icmp_ln203_6_fu_1840_p2[0:0] === 1'b1) ? window_group_0_7_va_10_fu_216 : window_group_0_7_va_164_fu_2569_p3);

assign tmp_3_fu_3466_p4 = ((icmp_ln203_6_fu_1840_p2[0:0] === 1'b1) ? window_group_0_7_va_14_fu_232 : window_group_0_7_va_161_fu_2545_p3);

assign tmp_3_fu_3466_p5 = ((icmp_ln203_6_fu_1840_p2[0:0] === 1'b1) ? window_group_0_7_va_18_fu_248 : window_group_0_7_va_157_fu_2513_p3);

assign tmp_3_fu_3466_p6 = ((icmp_ln203_6_fu_1840_p2[0:0] === 1'b1) ? window_group_0_7_va_22_fu_264 : window_group_0_7_va_152_fu_2473_p3);

assign tmp_3_fu_3466_p7 = ((icmp_ln203_6_fu_1840_p2[0:0] === 1'b1) ? window_group_0_7_va_26_fu_280 : window_group_0_7_va_146_fu_2426_p3);

assign tmp_3_fu_3466_p8 = ((icmp_ln203_6_fu_1840_p2[0:0] === 1'b1) ? window_group_0_7_va_30_fu_296 : window_group_0_7_va_139_fu_2372_p3);

assign tmp_4_fu_4345_p1 = ((icmp_ln203_6_reg_5842[0:0] === 1'b1) ? reg_776 : window_group_0_7_va_3_fu_188);

assign tmp_4_fu_4345_p2 = ((icmp_ln203_6_reg_5842[0:0] === 1'b1) ? window_group_0_7_va_7_fu_204 : window_group_0_7_va_201_fu_4062_p3);

assign tmp_4_fu_4345_p3 = ((icmp_ln203_6_reg_5842[0:0] === 1'b1) ? window_group_0_7_va_11_fu_220 : window_group_0_7_va_199_fu_4048_p3);

assign tmp_4_fu_4345_p4 = ((icmp_ln203_6_reg_5842[0:0] === 1'b1) ? window_group_0_7_va_15_fu_236 : window_group_0_7_va_196_fu_4027_p3);

assign tmp_4_fu_4345_p5 = ((icmp_ln203_6_reg_5842[0:0] === 1'b1) ? window_group_0_7_va_19_fu_252 : window_group_0_7_va_192_fu_3999_p3);

assign tmp_4_fu_4345_p6 = ((icmp_ln203_6_reg_5842[0:0] === 1'b1) ? window_group_0_7_va_23_fu_268 : window_group_0_7_va_187_fu_3964_p3);

assign tmp_4_fu_4345_p7 = ((icmp_ln203_6_reg_5842[0:0] === 1'b1) ? window_group_0_7_va_27_fu_284 : window_group_0_7_va_181_fu_3922_p3);

assign tmp_4_fu_4345_p8 = ((icmp_ln203_6_reg_5842[0:0] === 1'b1) ? window_group_0_7_va_31_fu_300 : window_group_0_7_va_174_fu_3873_p3);

assign tmp_5_fu_3487_p1 = ((icmp_ln203_6_fu_1840_p2[0:0] === 1'b1) ? window_group_1_6_va_reg_5736 : window_group_1_7_va_fu_304);

assign tmp_5_fu_3487_p2 = ((icmp_ln203_6_fu_1840_p2[0:0] === 1'b1) ? window_group_1_7_va_4_fu_320 : window_group_1_7_va_96_fu_2854_p3);

assign tmp_5_fu_3487_p3 = ((icmp_ln203_6_fu_1840_p2[0:0] === 1'b1) ? window_group_1_7_va_8_fu_336 : window_group_1_7_va_94_fu_2838_p3);

assign tmp_5_fu_3487_p4 = ((icmp_ln203_6_fu_1840_p2[0:0] === 1'b1) ? window_group_1_7_va_12_fu_352 : window_group_1_7_va_91_fu_2815_p3);

assign tmp_5_fu_3487_p5 = ((icmp_ln203_6_fu_1840_p2[0:0] === 1'b1) ? window_group_1_7_va_16_fu_368 : window_group_1_7_va_87_fu_2784_p3);

assign tmp_5_fu_3487_p6 = ((icmp_ln203_6_fu_1840_p2[0:0] === 1'b1) ? window_group_1_7_va_20_fu_384 : window_group_1_7_va_82_fu_2745_p3);

assign tmp_5_fu_3487_p7 = ((icmp_ln203_6_fu_1840_p2[0:0] === 1'b1) ? window_group_1_7_va_24_fu_400 : window_group_1_7_va_76_fu_2699_p3);

assign tmp_5_fu_3487_p8 = ((icmp_ln203_6_fu_1840_p2[0:0] === 1'b1) ? window_group_1_7_va_28_fu_416 : window_group_1_7_va_69_fu_2646_p3);

assign tmp_6_fu_3508_p1 = ((icmp_ln203_6_fu_1840_p2[0:0] === 1'b1) ? window_group_1_6_va_1_reg_5748 : window_group_1_7_va_1_fu_308);

assign tmp_6_fu_3508_p2 = ((icmp_ln203_6_fu_1840_p2[0:0] === 1'b1) ? window_group_1_7_va_5_fu_324 : window_group_1_7_va_131_fu_3121_p3);

assign tmp_6_fu_3508_p3 = ((icmp_ln203_6_fu_1840_p2[0:0] === 1'b1) ? window_group_1_7_va_9_fu_340 : window_group_1_7_va_129_fu_3105_p3);

assign tmp_6_fu_3508_p4 = ((icmp_ln203_6_fu_1840_p2[0:0] === 1'b1) ? window_group_1_7_va_13_fu_356 : window_group_1_7_va_126_fu_3082_p3);

assign tmp_6_fu_3508_p5 = ((icmp_ln203_6_fu_1840_p2[0:0] === 1'b1) ? window_group_1_7_va_17_fu_372 : window_group_1_7_va_122_fu_3051_p3);

assign tmp_6_fu_3508_p6 = ((icmp_ln203_6_fu_1840_p2[0:0] === 1'b1) ? window_group_1_7_va_21_fu_388 : window_group_1_7_va_117_fu_3012_p3);

assign tmp_6_fu_3508_p7 = ((icmp_ln203_6_fu_1840_p2[0:0] === 1'b1) ? window_group_1_7_va_25_fu_404 : window_group_1_7_va_111_fu_2966_p3);

assign tmp_6_fu_3508_p8 = ((icmp_ln203_6_fu_1840_p2[0:0] === 1'b1) ? window_group_1_7_va_29_fu_420 : window_group_1_7_va_104_fu_2913_p3);

assign tmp_7_fu_3529_p1 = ((icmp_ln203_6_fu_1840_p2[0:0] === 1'b1) ? reg_780 : window_group_1_7_va_2_fu_312);

assign tmp_7_fu_3529_p2 = ((icmp_ln203_6_fu_1840_p2[0:0] === 1'b1) ? window_group_1_7_va_6_fu_328 : window_group_1_7_va_166_fu_3394_p3);

assign tmp_7_fu_3529_p3 = ((icmp_ln203_6_fu_1840_p2[0:0] === 1'b1) ? window_group_1_7_va_10_fu_344 : window_group_1_7_va_164_fu_3378_p3);

assign tmp_7_fu_3529_p4 = ((icmp_ln203_6_fu_1840_p2[0:0] === 1'b1) ? window_group_1_7_va_14_fu_360 : window_group_1_7_va_161_fu_3354_p3);

assign tmp_7_fu_3529_p5 = ((icmp_ln203_6_fu_1840_p2[0:0] === 1'b1) ? window_group_1_7_va_18_fu_376 : window_group_1_7_va_157_fu_3322_p3);

assign tmp_7_fu_3529_p6 = ((icmp_ln203_6_fu_1840_p2[0:0] === 1'b1) ? window_group_1_7_va_22_fu_392 : window_group_1_7_va_152_fu_3282_p3);

assign tmp_7_fu_3529_p7 = ((icmp_ln203_6_fu_1840_p2[0:0] === 1'b1) ? window_group_1_7_va_26_fu_408 : window_group_1_7_va_146_fu_3235_p3);

assign tmp_7_fu_3529_p8 = ((icmp_ln203_6_fu_1840_p2[0:0] === 1'b1) ? window_group_1_7_va_30_fu_424 : window_group_1_7_va_139_fu_3181_p3);

assign tmp_8_fu_4394_p1 = ((icmp_ln203_6_reg_5842[0:0] === 1'b1) ? reg_780 : window_group_1_7_va_3_fu_316);

assign tmp_8_fu_4394_p2 = ((icmp_ln203_6_reg_5842[0:0] === 1'b1) ? window_group_1_7_va_7_fu_332 : window_group_1_7_va_201_fu_4307_p3);

assign tmp_8_fu_4394_p3 = ((icmp_ln203_6_reg_5842[0:0] === 1'b1) ? window_group_1_7_va_11_fu_348 : window_group_1_7_va_199_fu_4293_p3);

assign tmp_8_fu_4394_p4 = ((icmp_ln203_6_reg_5842[0:0] === 1'b1) ? window_group_1_7_va_15_fu_364 : window_group_1_7_va_196_fu_4272_p3);

assign tmp_8_fu_4394_p5 = ((icmp_ln203_6_reg_5842[0:0] === 1'b1) ? window_group_1_7_va_19_fu_380 : window_group_1_7_va_192_fu_4244_p3);

assign tmp_8_fu_4394_p6 = ((icmp_ln203_6_reg_5842[0:0] === 1'b1) ? window_group_1_7_va_23_fu_396 : window_group_1_7_va_187_fu_4209_p3);

assign tmp_8_fu_4394_p7 = ((icmp_ln203_6_reg_5842[0:0] === 1'b1) ? window_group_1_7_va_27_fu_412 : window_group_1_7_va_181_fu_4167_p3);

assign tmp_8_fu_4394_p8 = ((icmp_ln203_6_reg_5842[0:0] === 1'b1) ? window_group_1_7_va_31_fu_428 : window_group_1_7_va_174_fu_4118_p3);

assign tmp_9_fu_4780_p1 = ((icmp_ln203_6_reg_5842[0:0] === 1'b1) ? val_output_0_7_V_78_fu_4519_p3 : val_output_0_7_V_1_fu_432);

assign tmp_9_fu_4780_p2 = ((icmp_ln203_6_reg_5842[0:0] === 1'b1) ? val_output_0_7_V_6_fu_436 : val_output_0_7_V_75_fu_4748_p3);

assign tmp_9_fu_4780_p3 = ((icmp_ln203_6_reg_5842[0:0] === 1'b1) ? val_output_0_7_V_35_fu_440 : val_output_0_7_V_73_fu_4734_p3);

assign tmp_9_fu_4780_p4 = ((icmp_ln203_6_reg_5842[0:0] === 1'b1) ? val_output_0_7_V_30_fu_444 : val_output_0_7_V_70_fu_4713_p3);

assign tmp_9_fu_4780_p5 = ((icmp_ln203_6_reg_5842[0:0] === 1'b1) ? val_output_0_7_V_24_fu_448 : val_output_0_7_V_66_fu_4685_p3);

assign tmp_9_fu_4780_p6 = ((icmp_ln203_6_reg_5842[0:0] === 1'b1) ? val_output_0_7_V_17_fu_452 : val_output_0_7_V_61_fu_4650_p3);

assign tmp_9_fu_4780_p7 = ((icmp_ln203_6_reg_5842[0:0] === 1'b1) ? val_output_0_7_V_39_fu_456 : val_output_0_7_V_55_fu_4608_p3);

assign tmp_9_fu_4780_p8 = ((icmp_ln203_6_reg_5842[0:0] === 1'b1) ? val_output_0_7_V_4_fu_460 : val_output_0_7_V_48_fu_4559_p3);

assign trunc_ln107_1_fu_1289_p1 = select_ln37_1_fu_1269_p3[8:0];

assign trunc_ln107_2_fu_1439_p1 = select_ln37_2_fu_1365_p3[8:0];

assign trunc_ln107_fu_932_p1 = conv_count_1_fu_906_p3[8:0];

assign trunc_ln203_fu_1616_p1 = select_ln27_reg_5485_pp0_iter1_reg[2:0];

assign val_output_0_7_V_44_fu_4531_p3 = ((icmp_ln203_1_reg_5705_pp0_iter3_reg[0:0] === 1'b1) ? val_output_0_7_V_4_fu_460 : val_output_0_7_V_fu_4524_p3);

assign val_output_0_7_V_45_fu_4538_p3 = ((icmp_ln203_2_reg_5760[0:0] === 1'b1) ? val_output_0_7_V_4_fu_460 : val_output_0_7_V_44_fu_4531_p3);

assign val_output_0_7_V_46_fu_4545_p3 = ((icmp_ln203_3_reg_5776[0:0] === 1'b1) ? val_output_0_7_V_4_fu_460 : val_output_0_7_V_45_fu_4538_p3);

assign val_output_0_7_V_47_fu_4552_p3 = ((icmp_ln203_4_reg_5795[0:0] === 1'b1) ? val_output_0_7_V_4_fu_460 : val_output_0_7_V_46_fu_4545_p3);

assign val_output_0_7_V_48_fu_4559_p3 = ((icmp_ln203_5_reg_5817[0:0] === 1'b1) ? val_output_0_7_V_4_fu_460 : val_output_0_7_V_47_fu_4552_p3);

assign val_output_0_7_V_49_fu_4566_p3 = ((icmp_ln203_6_reg_5842[0:0] === 1'b1) ? val_output_0_7_V_4_fu_460 : val_output_0_7_V_48_fu_4559_p3);

assign val_output_0_7_V_50_fu_4573_p3 = ((icmp_ln203_reg_5683_pp0_iter3_reg[0:0] === 1'b1) ? val_output_0_7_V_78_fu_4519_p3 : val_output_0_7_V_39_fu_456);

assign val_output_0_7_V_51_fu_4580_p3 = ((icmp_ln203_1_reg_5705_pp0_iter3_reg[0:0] === 1'b1) ? val_output_0_7_V_39_fu_456 : val_output_0_7_V_50_fu_4573_p3);

assign val_output_0_7_V_52_fu_4587_p3 = ((icmp_ln203_2_reg_5760[0:0] === 1'b1) ? val_output_0_7_V_39_fu_456 : val_output_0_7_V_51_fu_4580_p3);

assign val_output_0_7_V_53_fu_4594_p3 = ((icmp_ln203_3_reg_5776[0:0] === 1'b1) ? val_output_0_7_V_39_fu_456 : val_output_0_7_V_52_fu_4587_p3);

assign val_output_0_7_V_54_fu_4601_p3 = ((icmp_ln203_4_reg_5795[0:0] === 1'b1) ? val_output_0_7_V_39_fu_456 : val_output_0_7_V_53_fu_4594_p3);

assign val_output_0_7_V_55_fu_4608_p3 = ((icmp_ln203_5_reg_5817[0:0] === 1'b1) ? val_output_0_7_V_39_fu_456 : val_output_0_7_V_54_fu_4601_p3);

assign val_output_0_7_V_56_fu_4615_p3 = ((icmp_ln203_6_reg_5842[0:0] === 1'b1) ? val_output_0_7_V_39_fu_456 : val_output_0_7_V_55_fu_4608_p3);

assign val_output_0_7_V_57_fu_4622_p3 = ((icmp_ln203_1_reg_5705_pp0_iter3_reg[0:0] === 1'b1) ? val_output_0_7_V_78_fu_4519_p3 : val_output_0_7_V_17_fu_452);

assign val_output_0_7_V_58_fu_4629_p3 = ((icmp_ln203_2_reg_5760[0:0] === 1'b1) ? val_output_0_7_V_17_fu_452 : val_output_0_7_V_57_fu_4622_p3);

assign val_output_0_7_V_59_fu_4636_p3 = ((icmp_ln203_3_reg_5776[0:0] === 1'b1) ? val_output_0_7_V_17_fu_452 : val_output_0_7_V_58_fu_4629_p3);

assign val_output_0_7_V_60_fu_4643_p3 = ((icmp_ln203_4_reg_5795[0:0] === 1'b1) ? val_output_0_7_V_17_fu_452 : val_output_0_7_V_59_fu_4636_p3);

assign val_output_0_7_V_61_fu_4650_p3 = ((icmp_ln203_5_reg_5817[0:0] === 1'b1) ? val_output_0_7_V_17_fu_452 : val_output_0_7_V_60_fu_4643_p3);

assign val_output_0_7_V_62_fu_4657_p3 = ((icmp_ln203_6_reg_5842[0:0] === 1'b1) ? val_output_0_7_V_17_fu_452 : val_output_0_7_V_61_fu_4650_p3);

assign val_output_0_7_V_63_fu_4664_p3 = ((icmp_ln203_2_reg_5760[0:0] === 1'b1) ? val_output_0_7_V_78_fu_4519_p3 : val_output_0_7_V_24_fu_448);

assign val_output_0_7_V_64_fu_4671_p3 = ((icmp_ln203_3_reg_5776[0:0] === 1'b1) ? val_output_0_7_V_24_fu_448 : val_output_0_7_V_63_fu_4664_p3);

assign val_output_0_7_V_65_fu_4678_p3 = ((icmp_ln203_4_reg_5795[0:0] === 1'b1) ? val_output_0_7_V_24_fu_448 : val_output_0_7_V_64_fu_4671_p3);

assign val_output_0_7_V_66_fu_4685_p3 = ((icmp_ln203_5_reg_5817[0:0] === 1'b1) ? val_output_0_7_V_24_fu_448 : val_output_0_7_V_65_fu_4678_p3);

assign val_output_0_7_V_67_fu_4692_p3 = ((icmp_ln203_6_reg_5842[0:0] === 1'b1) ? val_output_0_7_V_24_fu_448 : val_output_0_7_V_66_fu_4685_p3);

assign val_output_0_7_V_68_fu_4699_p3 = ((icmp_ln203_3_reg_5776[0:0] === 1'b1) ? val_output_0_7_V_78_fu_4519_p3 : val_output_0_7_V_30_fu_444);

assign val_output_0_7_V_69_fu_4706_p3 = ((icmp_ln203_4_reg_5795[0:0] === 1'b1) ? val_output_0_7_V_30_fu_444 : val_output_0_7_V_68_fu_4699_p3);

assign val_output_0_7_V_70_fu_4713_p3 = ((icmp_ln203_5_reg_5817[0:0] === 1'b1) ? val_output_0_7_V_30_fu_444 : val_output_0_7_V_69_fu_4706_p3);

assign val_output_0_7_V_71_fu_4720_p3 = ((icmp_ln203_6_reg_5842[0:0] === 1'b1) ? val_output_0_7_V_30_fu_444 : val_output_0_7_V_70_fu_4713_p3);

assign val_output_0_7_V_72_fu_4727_p3 = ((icmp_ln203_4_reg_5795[0:0] === 1'b1) ? val_output_0_7_V_78_fu_4519_p3 : val_output_0_7_V_35_fu_440);

assign val_output_0_7_V_73_fu_4734_p3 = ((icmp_ln203_5_reg_5817[0:0] === 1'b1) ? val_output_0_7_V_35_fu_440 : val_output_0_7_V_72_fu_4727_p3);

assign val_output_0_7_V_74_fu_4741_p3 = ((icmp_ln203_6_reg_5842[0:0] === 1'b1) ? val_output_0_7_V_35_fu_440 : val_output_0_7_V_73_fu_4734_p3);

assign val_output_0_7_V_75_fu_4748_p3 = ((icmp_ln203_5_reg_5817[0:0] === 1'b1) ? val_output_0_7_V_78_fu_4519_p3 : val_output_0_7_V_6_fu_436);

assign val_output_0_7_V_76_fu_4755_p3 = ((icmp_ln203_6_reg_5842[0:0] === 1'b1) ? val_output_0_7_V_6_fu_436 : val_output_0_7_V_75_fu_4748_p3);

assign val_output_0_7_V_77_fu_4762_p3 = ((icmp_ln203_6_reg_5842[0:0] === 1'b1) ? val_output_0_7_V_78_fu_4519_p3 : val_output_0_7_V_1_fu_432);

assign val_output_0_7_V_78_fu_4519_p3 = ((icmp_ln1494_2_reg_5919[0:0] === 1'b1) ? tmp_4_reg_5914 : select_ln123_1_reg_5909);

assign val_output_0_7_V_fu_4524_p3 = ((icmp_ln203_reg_5683_pp0_iter3_reg[0:0] === 1'b1) ? val_output_0_7_V_4_fu_460 : val_output_0_7_V_78_fu_4519_p3);

assign window_group_0_7_va_100_fu_2073_p3 = ((icmp_ln203_1_reg_5705[0:0] === 1'b1) ? window_group_0_7_va_29_fu_292 : window_group_0_7_va_99_fu_2067_p3);

assign window_group_0_7_va_101_fu_2080_p3 = ((icmp_ln203_2_fu_1788_p2[0:0] === 1'b1) ? window_group_0_7_va_29_fu_292 : window_group_0_7_va_100_fu_2073_p3);

assign window_group_0_7_va_102_fu_2088_p3 = ((icmp_ln203_3_fu_1801_p2[0:0] === 1'b1) ? window_group_0_7_va_29_fu_292 : window_group_0_7_va_101_fu_2080_p3);

assign window_group_0_7_va_103_fu_2096_p3 = ((icmp_ln203_4_fu_1814_p2[0:0] === 1'b1) ? window_group_0_7_va_29_fu_292 : window_group_0_7_va_102_fu_2088_p3);

assign window_group_0_7_va_104_fu_2104_p3 = ((icmp_ln203_5_fu_1827_p2[0:0] === 1'b1) ? window_group_0_7_va_29_fu_292 : window_group_0_7_va_103_fu_2096_p3);

assign window_group_0_7_va_105_fu_2112_p3 = ((icmp_ln203_6_fu_1840_p2[0:0] === 1'b1) ? window_group_0_7_va_29_fu_292 : window_group_0_7_va_104_fu_2104_p3);

assign window_group_0_7_va_106_fu_2120_p3 = ((icmp_ln203_reg_5683[0:0] === 1'b1) ? window_group_0_6_va_1_reg_5653 : window_group_0_7_va_25_fu_276);

assign window_group_0_7_va_107_fu_2126_p3 = ((icmp_ln203_1_reg_5705[0:0] === 1'b1) ? window_group_0_7_va_25_fu_276 : window_group_0_7_va_106_fu_2120_p3);

assign window_group_0_7_va_108_fu_2133_p3 = ((icmp_ln203_2_fu_1788_p2[0:0] === 1'b1) ? window_group_0_7_va_25_fu_276 : window_group_0_7_va_107_fu_2126_p3);

assign window_group_0_7_va_109_fu_2141_p3 = ((icmp_ln203_3_fu_1801_p2[0:0] === 1'b1) ? window_group_0_7_va_25_fu_276 : window_group_0_7_va_108_fu_2133_p3);

assign window_group_0_7_va_110_fu_2149_p3 = ((icmp_ln203_4_fu_1814_p2[0:0] === 1'b1) ? window_group_0_7_va_25_fu_276 : window_group_0_7_va_109_fu_2141_p3);

assign window_group_0_7_va_111_fu_2157_p3 = ((icmp_ln203_5_fu_1827_p2[0:0] === 1'b1) ? window_group_0_7_va_25_fu_276 : window_group_0_7_va_110_fu_2149_p3);

assign window_group_0_7_va_112_fu_2165_p3 = ((icmp_ln203_6_fu_1840_p2[0:0] === 1'b1) ? window_group_0_7_va_25_fu_276 : window_group_0_7_va_111_fu_2157_p3);

assign window_group_0_7_va_113_fu_2173_p3 = ((icmp_ln203_1_reg_5705[0:0] === 1'b1) ? window_group_0_6_va_1_reg_5653 : window_group_0_7_va_21_fu_260);

assign window_group_0_7_va_114_fu_2179_p3 = ((icmp_ln203_2_fu_1788_p2[0:0] === 1'b1) ? window_group_0_7_va_21_fu_260 : window_group_0_7_va_113_fu_2173_p3);

assign window_group_0_7_va_115_fu_2187_p3 = ((icmp_ln203_3_fu_1801_p2[0:0] === 1'b1) ? window_group_0_7_va_21_fu_260 : window_group_0_7_va_114_fu_2179_p3);

assign window_group_0_7_va_116_fu_2195_p3 = ((icmp_ln203_4_fu_1814_p2[0:0] === 1'b1) ? window_group_0_7_va_21_fu_260 : window_group_0_7_va_115_fu_2187_p3);

assign window_group_0_7_va_117_fu_2203_p3 = ((icmp_ln203_5_fu_1827_p2[0:0] === 1'b1) ? window_group_0_7_va_21_fu_260 : window_group_0_7_va_116_fu_2195_p3);

assign window_group_0_7_va_118_fu_2211_p3 = ((icmp_ln203_6_fu_1840_p2[0:0] === 1'b1) ? window_group_0_7_va_21_fu_260 : window_group_0_7_va_117_fu_2203_p3);

assign window_group_0_7_va_119_fu_2219_p3 = ((icmp_ln203_2_fu_1788_p2[0:0] === 1'b1) ? window_group_0_6_va_1_reg_5653 : window_group_0_7_va_17_fu_244);

assign window_group_0_7_va_120_fu_2226_p3 = ((icmp_ln203_3_fu_1801_p2[0:0] === 1'b1) ? window_group_0_7_va_17_fu_244 : window_group_0_7_va_119_fu_2219_p3);

assign window_group_0_7_va_121_fu_2234_p3 = ((icmp_ln203_4_fu_1814_p2[0:0] === 1'b1) ? window_group_0_7_va_17_fu_244 : window_group_0_7_va_120_fu_2226_p3);

assign window_group_0_7_va_122_fu_2242_p3 = ((icmp_ln203_5_fu_1827_p2[0:0] === 1'b1) ? window_group_0_7_va_17_fu_244 : window_group_0_7_va_121_fu_2234_p3);

assign window_group_0_7_va_123_fu_2250_p3 = ((icmp_ln203_6_fu_1840_p2[0:0] === 1'b1) ? window_group_0_7_va_17_fu_244 : window_group_0_7_va_122_fu_2242_p3);

assign window_group_0_7_va_124_fu_2258_p3 = ((icmp_ln203_3_fu_1801_p2[0:0] === 1'b1) ? window_group_0_6_va_1_reg_5653 : window_group_0_7_va_13_fu_228);

assign window_group_0_7_va_125_fu_2265_p3 = ((icmp_ln203_4_fu_1814_p2[0:0] === 1'b1) ? window_group_0_7_va_13_fu_228 : window_group_0_7_va_124_fu_2258_p3);

assign window_group_0_7_va_126_fu_2273_p3 = ((icmp_ln203_5_fu_1827_p2[0:0] === 1'b1) ? window_group_0_7_va_13_fu_228 : window_group_0_7_va_125_fu_2265_p3);

assign window_group_0_7_va_127_fu_2281_p3 = ((icmp_ln203_6_fu_1840_p2[0:0] === 1'b1) ? window_group_0_7_va_13_fu_228 : window_group_0_7_va_126_fu_2273_p3);

assign window_group_0_7_va_128_fu_2289_p3 = ((icmp_ln203_4_fu_1814_p2[0:0] === 1'b1) ? window_group_0_6_va_1_reg_5653 : window_group_0_7_va_9_fu_212);

assign window_group_0_7_va_129_fu_2296_p3 = ((icmp_ln203_5_fu_1827_p2[0:0] === 1'b1) ? window_group_0_7_va_9_fu_212 : window_group_0_7_va_128_fu_2289_p3);

assign window_group_0_7_va_130_fu_2304_p3 = ((icmp_ln203_6_fu_1840_p2[0:0] === 1'b1) ? window_group_0_7_va_9_fu_212 : window_group_0_7_va_129_fu_2296_p3);

assign window_group_0_7_va_131_fu_2312_p3 = ((icmp_ln203_5_fu_1827_p2[0:0] === 1'b1) ? window_group_0_6_va_1_reg_5653 : window_group_0_7_va_5_fu_196);

assign window_group_0_7_va_132_fu_2319_p3 = ((icmp_ln203_6_fu_1840_p2[0:0] === 1'b1) ? window_group_0_7_va_5_fu_196 : window_group_0_7_va_131_fu_2312_p3);

assign window_group_0_7_va_133_fu_2327_p3 = ((icmp_ln203_6_fu_1840_p2[0:0] === 1'b1) ? window_group_0_6_va_1_reg_5653 : window_group_0_7_va_1_fu_180);

assign window_group_0_7_va_134_fu_2334_p3 = ((icmp_ln203_reg_5683[0:0] === 1'b1) ? window_group_0_7_va_30_fu_296 : reg_776);

assign window_group_0_7_va_135_fu_2341_p3 = ((icmp_ln203_1_reg_5705[0:0] === 1'b1) ? window_group_0_7_va_30_fu_296 : window_group_0_7_va_134_fu_2334_p3);

assign window_group_0_7_va_136_fu_2348_p3 = ((icmp_ln203_2_fu_1788_p2[0:0] === 1'b1) ? window_group_0_7_va_30_fu_296 : window_group_0_7_va_135_fu_2341_p3);

assign window_group_0_7_va_137_fu_2356_p3 = ((icmp_ln203_3_fu_1801_p2[0:0] === 1'b1) ? window_group_0_7_va_30_fu_296 : window_group_0_7_va_136_fu_2348_p3);

assign window_group_0_7_va_138_fu_2364_p3 = ((icmp_ln203_4_fu_1814_p2[0:0] === 1'b1) ? window_group_0_7_va_30_fu_296 : window_group_0_7_va_137_fu_2356_p3);

assign window_group_0_7_va_139_fu_2372_p3 = ((icmp_ln203_5_fu_1827_p2[0:0] === 1'b1) ? window_group_0_7_va_30_fu_296 : window_group_0_7_va_138_fu_2364_p3);

assign window_group_0_7_va_140_fu_2380_p3 = ((icmp_ln203_6_fu_1840_p2[0:0] === 1'b1) ? window_group_0_7_va_30_fu_296 : window_group_0_7_va_139_fu_2372_p3);

assign window_group_0_7_va_141_fu_2388_p3 = ((icmp_ln203_reg_5683[0:0] === 1'b1) ? reg_776 : window_group_0_7_va_26_fu_280);

assign window_group_0_7_va_142_fu_2395_p3 = ((icmp_ln203_1_reg_5705[0:0] === 1'b1) ? window_group_0_7_va_26_fu_280 : window_group_0_7_va_141_fu_2388_p3);

assign window_group_0_7_va_143_fu_2402_p3 = ((icmp_ln203_2_fu_1788_p2[0:0] === 1'b1) ? window_group_0_7_va_26_fu_280 : window_group_0_7_va_142_fu_2395_p3);

assign window_group_0_7_va_144_fu_2410_p3 = ((icmp_ln203_3_fu_1801_p2[0:0] === 1'b1) ? window_group_0_7_va_26_fu_280 : window_group_0_7_va_143_fu_2402_p3);

assign window_group_0_7_va_145_fu_2418_p3 = ((icmp_ln203_4_fu_1814_p2[0:0] === 1'b1) ? window_group_0_7_va_26_fu_280 : window_group_0_7_va_144_fu_2410_p3);

assign window_group_0_7_va_146_fu_2426_p3 = ((icmp_ln203_5_fu_1827_p2[0:0] === 1'b1) ? window_group_0_7_va_26_fu_280 : window_group_0_7_va_145_fu_2418_p3);

assign window_group_0_7_va_147_fu_2434_p3 = ((icmp_ln203_6_fu_1840_p2[0:0] === 1'b1) ? window_group_0_7_va_26_fu_280 : window_group_0_7_va_146_fu_2426_p3);

assign window_group_0_7_va_148_fu_2442_p3 = ((icmp_ln203_1_reg_5705[0:0] === 1'b1) ? reg_776 : window_group_0_7_va_22_fu_264);

assign window_group_0_7_va_149_fu_2449_p3 = ((icmp_ln203_2_fu_1788_p2[0:0] === 1'b1) ? window_group_0_7_va_22_fu_264 : window_group_0_7_va_148_fu_2442_p3);

assign window_group_0_7_va_150_fu_2457_p3 = ((icmp_ln203_3_fu_1801_p2[0:0] === 1'b1) ? window_group_0_7_va_22_fu_264 : window_group_0_7_va_149_fu_2449_p3);

assign window_group_0_7_va_151_fu_2465_p3 = ((icmp_ln203_4_fu_1814_p2[0:0] === 1'b1) ? window_group_0_7_va_22_fu_264 : window_group_0_7_va_150_fu_2457_p3);

assign window_group_0_7_va_152_fu_2473_p3 = ((icmp_ln203_5_fu_1827_p2[0:0] === 1'b1) ? window_group_0_7_va_22_fu_264 : window_group_0_7_va_151_fu_2465_p3);

assign window_group_0_7_va_153_fu_2481_p3 = ((icmp_ln203_6_fu_1840_p2[0:0] === 1'b1) ? window_group_0_7_va_22_fu_264 : window_group_0_7_va_152_fu_2473_p3);

assign window_group_0_7_va_154_fu_2489_p3 = ((icmp_ln203_2_fu_1788_p2[0:0] === 1'b1) ? reg_776 : window_group_0_7_va_18_fu_248);

assign window_group_0_7_va_155_fu_2497_p3 = ((icmp_ln203_3_fu_1801_p2[0:0] === 1'b1) ? window_group_0_7_va_18_fu_248 : window_group_0_7_va_154_fu_2489_p3);

assign window_group_0_7_va_156_fu_2505_p3 = ((icmp_ln203_4_fu_1814_p2[0:0] === 1'b1) ? window_group_0_7_va_18_fu_248 : window_group_0_7_va_155_fu_2497_p3);

assign window_group_0_7_va_157_fu_2513_p3 = ((icmp_ln203_5_fu_1827_p2[0:0] === 1'b1) ? window_group_0_7_va_18_fu_248 : window_group_0_7_va_156_fu_2505_p3);

assign window_group_0_7_va_158_fu_2521_p3 = ((icmp_ln203_6_fu_1840_p2[0:0] === 1'b1) ? window_group_0_7_va_18_fu_248 : window_group_0_7_va_157_fu_2513_p3);

assign window_group_0_7_va_159_fu_2529_p3 = ((icmp_ln203_3_fu_1801_p2[0:0] === 1'b1) ? reg_776 : window_group_0_7_va_14_fu_232);

assign window_group_0_7_va_160_fu_2537_p3 = ((icmp_ln203_4_fu_1814_p2[0:0] === 1'b1) ? window_group_0_7_va_14_fu_232 : window_group_0_7_va_159_fu_2529_p3);

assign window_group_0_7_va_161_fu_2545_p3 = ((icmp_ln203_5_fu_1827_p2[0:0] === 1'b1) ? window_group_0_7_va_14_fu_232 : window_group_0_7_va_160_fu_2537_p3);

assign window_group_0_7_va_162_fu_2553_p3 = ((icmp_ln203_6_fu_1840_p2[0:0] === 1'b1) ? window_group_0_7_va_14_fu_232 : window_group_0_7_va_161_fu_2545_p3);

assign window_group_0_7_va_163_fu_2561_p3 = ((icmp_ln203_4_fu_1814_p2[0:0] === 1'b1) ? reg_776 : window_group_0_7_va_10_fu_216);

assign window_group_0_7_va_164_fu_2569_p3 = ((icmp_ln203_5_fu_1827_p2[0:0] === 1'b1) ? window_group_0_7_va_10_fu_216 : window_group_0_7_va_163_fu_2561_p3);

assign window_group_0_7_va_165_fu_2577_p3 = ((icmp_ln203_6_fu_1840_p2[0:0] === 1'b1) ? window_group_0_7_va_10_fu_216 : window_group_0_7_va_164_fu_2569_p3);

assign window_group_0_7_va_166_fu_2585_p3 = ((icmp_ln203_5_fu_1827_p2[0:0] === 1'b1) ? reg_776 : window_group_0_7_va_6_fu_200);

assign window_group_0_7_va_167_fu_2593_p3 = ((icmp_ln203_6_fu_1840_p2[0:0] === 1'b1) ? window_group_0_7_va_6_fu_200 : window_group_0_7_va_166_fu_2585_p3);

assign window_group_0_7_va_168_fu_2601_p3 = ((icmp_ln203_6_fu_1840_p2[0:0] === 1'b1) ? reg_776 : window_group_0_7_va_2_fu_184);

assign window_group_0_7_va_169_fu_3838_p3 = ((icmp_ln203_reg_5683[0:0] === 1'b1) ? window_group_0_7_va_31_fu_300 : reg_776);

assign window_group_0_7_va_170_fu_3845_p3 = ((icmp_ln203_1_reg_5705[0:0] === 1'b1) ? window_group_0_7_va_31_fu_300 : window_group_0_7_va_169_fu_3838_p3);

assign window_group_0_7_va_171_fu_3852_p3 = ((icmp_ln203_2_reg_5760[0:0] === 1'b1) ? window_group_0_7_va_31_fu_300 : window_group_0_7_va_170_fu_3845_p3);

assign window_group_0_7_va_172_fu_3859_p3 = ((icmp_ln203_3_reg_5776[0:0] === 1'b1) ? window_group_0_7_va_31_fu_300 : window_group_0_7_va_171_fu_3852_p3);

assign window_group_0_7_va_173_fu_3866_p3 = ((icmp_ln203_4_reg_5795[0:0] === 1'b1) ? window_group_0_7_va_31_fu_300 : window_group_0_7_va_172_fu_3859_p3);

assign window_group_0_7_va_174_fu_3873_p3 = ((icmp_ln203_5_reg_5817[0:0] === 1'b1) ? window_group_0_7_va_31_fu_300 : window_group_0_7_va_173_fu_3866_p3);

assign window_group_0_7_va_175_fu_3880_p3 = ((icmp_ln203_6_reg_5842[0:0] === 1'b1) ? window_group_0_7_va_31_fu_300 : window_group_0_7_va_174_fu_3873_p3);

assign window_group_0_7_va_176_fu_3887_p3 = ((icmp_ln203_reg_5683[0:0] === 1'b1) ? reg_776 : window_group_0_7_va_27_fu_284);

assign window_group_0_7_va_177_fu_3894_p3 = ((icmp_ln203_1_reg_5705[0:0] === 1'b1) ? window_group_0_7_va_27_fu_284 : window_group_0_7_va_176_fu_3887_p3);

assign window_group_0_7_va_178_fu_3901_p3 = ((icmp_ln203_2_reg_5760[0:0] === 1'b1) ? window_group_0_7_va_27_fu_284 : window_group_0_7_va_177_fu_3894_p3);

assign window_group_0_7_va_179_fu_3908_p3 = ((icmp_ln203_3_reg_5776[0:0] === 1'b1) ? window_group_0_7_va_27_fu_284 : window_group_0_7_va_178_fu_3901_p3);

assign window_group_0_7_va_180_fu_3915_p3 = ((icmp_ln203_4_reg_5795[0:0] === 1'b1) ? window_group_0_7_va_27_fu_284 : window_group_0_7_va_179_fu_3908_p3);

assign window_group_0_7_va_181_fu_3922_p3 = ((icmp_ln203_5_reg_5817[0:0] === 1'b1) ? window_group_0_7_va_27_fu_284 : window_group_0_7_va_180_fu_3915_p3);

assign window_group_0_7_va_182_fu_3929_p3 = ((icmp_ln203_6_reg_5842[0:0] === 1'b1) ? window_group_0_7_va_27_fu_284 : window_group_0_7_va_181_fu_3922_p3);

assign window_group_0_7_va_183_fu_3936_p3 = ((icmp_ln203_1_reg_5705[0:0] === 1'b1) ? reg_776 : window_group_0_7_va_23_fu_268);

assign window_group_0_7_va_184_fu_3943_p3 = ((icmp_ln203_2_reg_5760[0:0] === 1'b1) ? window_group_0_7_va_23_fu_268 : window_group_0_7_va_183_fu_3936_p3);

assign window_group_0_7_va_185_fu_3950_p3 = ((icmp_ln203_3_reg_5776[0:0] === 1'b1) ? window_group_0_7_va_23_fu_268 : window_group_0_7_va_184_fu_3943_p3);

assign window_group_0_7_va_186_fu_3957_p3 = ((icmp_ln203_4_reg_5795[0:0] === 1'b1) ? window_group_0_7_va_23_fu_268 : window_group_0_7_va_185_fu_3950_p3);

assign window_group_0_7_va_187_fu_3964_p3 = ((icmp_ln203_5_reg_5817[0:0] === 1'b1) ? window_group_0_7_va_23_fu_268 : window_group_0_7_va_186_fu_3957_p3);

assign window_group_0_7_va_188_fu_3971_p3 = ((icmp_ln203_6_reg_5842[0:0] === 1'b1) ? window_group_0_7_va_23_fu_268 : window_group_0_7_va_187_fu_3964_p3);

assign window_group_0_7_va_189_fu_3978_p3 = ((icmp_ln203_2_reg_5760[0:0] === 1'b1) ? reg_776 : window_group_0_7_va_19_fu_252);

assign window_group_0_7_va_190_fu_3985_p3 = ((icmp_ln203_3_reg_5776[0:0] === 1'b1) ? window_group_0_7_va_19_fu_252 : window_group_0_7_va_189_fu_3978_p3);

assign window_group_0_7_va_191_fu_3992_p3 = ((icmp_ln203_4_reg_5795[0:0] === 1'b1) ? window_group_0_7_va_19_fu_252 : window_group_0_7_va_190_fu_3985_p3);

assign window_group_0_7_va_192_fu_3999_p3 = ((icmp_ln203_5_reg_5817[0:0] === 1'b1) ? window_group_0_7_va_19_fu_252 : window_group_0_7_va_191_fu_3992_p3);

assign window_group_0_7_va_193_fu_4006_p3 = ((icmp_ln203_6_reg_5842[0:0] === 1'b1) ? window_group_0_7_va_19_fu_252 : window_group_0_7_va_192_fu_3999_p3);

assign window_group_0_7_va_194_fu_4013_p3 = ((icmp_ln203_3_reg_5776[0:0] === 1'b1) ? reg_776 : window_group_0_7_va_15_fu_236);

assign window_group_0_7_va_195_fu_4020_p3 = ((icmp_ln203_4_reg_5795[0:0] === 1'b1) ? window_group_0_7_va_15_fu_236 : window_group_0_7_va_194_fu_4013_p3);

assign window_group_0_7_va_196_fu_4027_p3 = ((icmp_ln203_5_reg_5817[0:0] === 1'b1) ? window_group_0_7_va_15_fu_236 : window_group_0_7_va_195_fu_4020_p3);

assign window_group_0_7_va_197_fu_4034_p3 = ((icmp_ln203_6_reg_5842[0:0] === 1'b1) ? window_group_0_7_va_15_fu_236 : window_group_0_7_va_196_fu_4027_p3);

assign window_group_0_7_va_198_fu_4041_p3 = ((icmp_ln203_4_reg_5795[0:0] === 1'b1) ? reg_776 : window_group_0_7_va_11_fu_220);

assign window_group_0_7_va_199_fu_4048_p3 = ((icmp_ln203_5_reg_5817[0:0] === 1'b1) ? window_group_0_7_va_11_fu_220 : window_group_0_7_va_198_fu_4041_p3);

assign window_group_0_7_va_200_fu_4055_p3 = ((icmp_ln203_6_reg_5842[0:0] === 1'b1) ? window_group_0_7_va_11_fu_220 : window_group_0_7_va_199_fu_4048_p3);

assign window_group_0_7_va_201_fu_4062_p3 = ((icmp_ln203_5_reg_5817[0:0] === 1'b1) ? reg_776 : window_group_0_7_va_7_fu_204);

assign window_group_0_7_va_202_fu_4069_p3 = ((icmp_ln203_6_reg_5842[0:0] === 1'b1) ? window_group_0_7_va_7_fu_204 : window_group_0_7_va_201_fu_4062_p3);

assign window_group_0_7_va_203_fu_4076_p3 = ((icmp_ln203_6_reg_5842[0:0] === 1'b1) ? reg_776 : window_group_0_7_va_3_fu_188);

assign window_group_0_7_va_64_fu_1775_p3 = ((icmp_ln203_reg_5683[0:0] === 1'b1) ? window_group_0_7_va_28_fu_288 : window_group_0_6_va_reg_5641);

assign window_group_0_7_va_65_fu_1781_p3 = ((icmp_ln203_1_reg_5705[0:0] === 1'b1) ? window_group_0_7_va_28_fu_288 : window_group_0_7_va_64_fu_1775_p3);

assign window_group_0_7_va_66_fu_1793_p3 = ((icmp_ln203_2_fu_1788_p2[0:0] === 1'b1) ? window_group_0_7_va_28_fu_288 : window_group_0_7_va_65_fu_1781_p3);

assign window_group_0_7_va_67_fu_1806_p3 = ((icmp_ln203_3_fu_1801_p2[0:0] === 1'b1) ? window_group_0_7_va_28_fu_288 : window_group_0_7_va_66_fu_1793_p3);

assign window_group_0_7_va_68_fu_1819_p3 = ((icmp_ln203_4_fu_1814_p2[0:0] === 1'b1) ? window_group_0_7_va_28_fu_288 : window_group_0_7_va_67_fu_1806_p3);

assign window_group_0_7_va_69_fu_1832_p3 = ((icmp_ln203_5_fu_1827_p2[0:0] === 1'b1) ? window_group_0_7_va_28_fu_288 : window_group_0_7_va_68_fu_1819_p3);

assign window_group_0_7_va_70_fu_1845_p3 = ((icmp_ln203_6_fu_1840_p2[0:0] === 1'b1) ? window_group_0_7_va_28_fu_288 : window_group_0_7_va_69_fu_1832_p3);

assign window_group_0_7_va_71_fu_1853_p3 = ((icmp_ln203_reg_5683[0:0] === 1'b1) ? window_group_0_6_va_reg_5641 : window_group_0_7_va_24_fu_272);

assign window_group_0_7_va_72_fu_1859_p3 = ((icmp_ln203_1_reg_5705[0:0] === 1'b1) ? window_group_0_7_va_24_fu_272 : window_group_0_7_va_71_fu_1853_p3);

assign window_group_0_7_va_73_fu_1866_p3 = ((icmp_ln203_2_fu_1788_p2[0:0] === 1'b1) ? window_group_0_7_va_24_fu_272 : window_group_0_7_va_72_fu_1859_p3);

assign window_group_0_7_va_74_fu_1874_p3 = ((icmp_ln203_3_fu_1801_p2[0:0] === 1'b1) ? window_group_0_7_va_24_fu_272 : window_group_0_7_va_73_fu_1866_p3);

assign window_group_0_7_va_75_fu_1882_p3 = ((icmp_ln203_4_fu_1814_p2[0:0] === 1'b1) ? window_group_0_7_va_24_fu_272 : window_group_0_7_va_74_fu_1874_p3);

assign window_group_0_7_va_76_fu_1890_p3 = ((icmp_ln203_5_fu_1827_p2[0:0] === 1'b1) ? window_group_0_7_va_24_fu_272 : window_group_0_7_va_75_fu_1882_p3);

assign window_group_0_7_va_77_fu_1898_p3 = ((icmp_ln203_6_fu_1840_p2[0:0] === 1'b1) ? window_group_0_7_va_24_fu_272 : window_group_0_7_va_76_fu_1890_p3);

assign window_group_0_7_va_78_fu_1906_p3 = ((icmp_ln203_1_reg_5705[0:0] === 1'b1) ? window_group_0_6_va_reg_5641 : window_group_0_7_va_20_fu_256);

assign window_group_0_7_va_79_fu_1912_p3 = ((icmp_ln203_2_fu_1788_p2[0:0] === 1'b1) ? window_group_0_7_va_20_fu_256 : window_group_0_7_va_78_fu_1906_p3);

assign window_group_0_7_va_80_fu_1920_p3 = ((icmp_ln203_3_fu_1801_p2[0:0] === 1'b1) ? window_group_0_7_va_20_fu_256 : window_group_0_7_va_79_fu_1912_p3);

assign window_group_0_7_va_81_fu_1928_p3 = ((icmp_ln203_4_fu_1814_p2[0:0] === 1'b1) ? window_group_0_7_va_20_fu_256 : window_group_0_7_va_80_fu_1920_p3);

assign window_group_0_7_va_82_fu_1936_p3 = ((icmp_ln203_5_fu_1827_p2[0:0] === 1'b1) ? window_group_0_7_va_20_fu_256 : window_group_0_7_va_81_fu_1928_p3);

assign window_group_0_7_va_83_fu_1944_p3 = ((icmp_ln203_6_fu_1840_p2[0:0] === 1'b1) ? window_group_0_7_va_20_fu_256 : window_group_0_7_va_82_fu_1936_p3);

assign window_group_0_7_va_84_fu_1952_p3 = ((icmp_ln203_2_fu_1788_p2[0:0] === 1'b1) ? window_group_0_6_va_reg_5641 : window_group_0_7_va_16_fu_240);

assign window_group_0_7_va_85_fu_1959_p3 = ((icmp_ln203_3_fu_1801_p2[0:0] === 1'b1) ? window_group_0_7_va_16_fu_240 : window_group_0_7_va_84_fu_1952_p3);

assign window_group_0_7_va_86_fu_1967_p3 = ((icmp_ln203_4_fu_1814_p2[0:0] === 1'b1) ? window_group_0_7_va_16_fu_240 : window_group_0_7_va_85_fu_1959_p3);

assign window_group_0_7_va_87_fu_1975_p3 = ((icmp_ln203_5_fu_1827_p2[0:0] === 1'b1) ? window_group_0_7_va_16_fu_240 : window_group_0_7_va_86_fu_1967_p3);

assign window_group_0_7_va_88_fu_1983_p3 = ((icmp_ln203_6_fu_1840_p2[0:0] === 1'b1) ? window_group_0_7_va_16_fu_240 : window_group_0_7_va_87_fu_1975_p3);

assign window_group_0_7_va_89_fu_1991_p3 = ((icmp_ln203_3_fu_1801_p2[0:0] === 1'b1) ? window_group_0_6_va_reg_5641 : window_group_0_7_va_12_fu_224);

assign window_group_0_7_va_90_fu_1998_p3 = ((icmp_ln203_4_fu_1814_p2[0:0] === 1'b1) ? window_group_0_7_va_12_fu_224 : window_group_0_7_va_89_fu_1991_p3);

assign window_group_0_7_va_91_fu_2006_p3 = ((icmp_ln203_5_fu_1827_p2[0:0] === 1'b1) ? window_group_0_7_va_12_fu_224 : window_group_0_7_va_90_fu_1998_p3);

assign window_group_0_7_va_92_fu_2014_p3 = ((icmp_ln203_6_fu_1840_p2[0:0] === 1'b1) ? window_group_0_7_va_12_fu_224 : window_group_0_7_va_91_fu_2006_p3);

assign window_group_0_7_va_93_fu_2022_p3 = ((icmp_ln203_4_fu_1814_p2[0:0] === 1'b1) ? window_group_0_6_va_reg_5641 : window_group_0_7_va_8_fu_208);

assign window_group_0_7_va_94_fu_2029_p3 = ((icmp_ln203_5_fu_1827_p2[0:0] === 1'b1) ? window_group_0_7_va_8_fu_208 : window_group_0_7_va_93_fu_2022_p3);

assign window_group_0_7_va_95_fu_2037_p3 = ((icmp_ln203_6_fu_1840_p2[0:0] === 1'b1) ? window_group_0_7_va_8_fu_208 : window_group_0_7_va_94_fu_2029_p3);

assign window_group_0_7_va_96_fu_2045_p3 = ((icmp_ln203_5_fu_1827_p2[0:0] === 1'b1) ? window_group_0_6_va_reg_5641 : window_group_0_7_va_4_fu_192);

assign window_group_0_7_va_97_fu_2052_p3 = ((icmp_ln203_6_fu_1840_p2[0:0] === 1'b1) ? window_group_0_7_va_4_fu_192 : window_group_0_7_va_96_fu_2045_p3);

assign window_group_0_7_va_98_fu_2060_p3 = ((icmp_ln203_6_fu_1840_p2[0:0] === 1'b1) ? window_group_0_6_va_reg_5641 : window_group_0_7_va_fu_176);

assign window_group_0_7_va_99_fu_2067_p3 = ((icmp_ln203_reg_5683[0:0] === 1'b1) ? window_group_0_7_va_29_fu_292 : window_group_0_6_va_1_reg_5653);

assign window_group_1_7_va_100_fu_2882_p3 = ((icmp_ln203_1_reg_5705[0:0] === 1'b1) ? window_group_1_7_va_29_fu_420 : window_group_1_7_va_99_fu_2876_p3);

assign window_group_1_7_va_101_fu_2889_p3 = ((icmp_ln203_2_fu_1788_p2[0:0] === 1'b1) ? window_group_1_7_va_29_fu_420 : window_group_1_7_va_100_fu_2882_p3);

assign window_group_1_7_va_102_fu_2897_p3 = ((icmp_ln203_3_fu_1801_p2[0:0] === 1'b1) ? window_group_1_7_va_29_fu_420 : window_group_1_7_va_101_fu_2889_p3);

assign window_group_1_7_va_103_fu_2905_p3 = ((icmp_ln203_4_fu_1814_p2[0:0] === 1'b1) ? window_group_1_7_va_29_fu_420 : window_group_1_7_va_102_fu_2897_p3);

assign window_group_1_7_va_104_fu_2913_p3 = ((icmp_ln203_5_fu_1827_p2[0:0] === 1'b1) ? window_group_1_7_va_29_fu_420 : window_group_1_7_va_103_fu_2905_p3);

assign window_group_1_7_va_105_fu_2921_p3 = ((icmp_ln203_6_fu_1840_p2[0:0] === 1'b1) ? window_group_1_7_va_29_fu_420 : window_group_1_7_va_104_fu_2913_p3);

assign window_group_1_7_va_106_fu_2929_p3 = ((icmp_ln203_reg_5683[0:0] === 1'b1) ? window_group_1_6_va_1_reg_5748 : window_group_1_7_va_25_fu_404);

assign window_group_1_7_va_107_fu_2935_p3 = ((icmp_ln203_1_reg_5705[0:0] === 1'b1) ? window_group_1_7_va_25_fu_404 : window_group_1_7_va_106_fu_2929_p3);

assign window_group_1_7_va_108_fu_2942_p3 = ((icmp_ln203_2_fu_1788_p2[0:0] === 1'b1) ? window_group_1_7_va_25_fu_404 : window_group_1_7_va_107_fu_2935_p3);

assign window_group_1_7_va_109_fu_2950_p3 = ((icmp_ln203_3_fu_1801_p2[0:0] === 1'b1) ? window_group_1_7_va_25_fu_404 : window_group_1_7_va_108_fu_2942_p3);

assign window_group_1_7_va_110_fu_2958_p3 = ((icmp_ln203_4_fu_1814_p2[0:0] === 1'b1) ? window_group_1_7_va_25_fu_404 : window_group_1_7_va_109_fu_2950_p3);

assign window_group_1_7_va_111_fu_2966_p3 = ((icmp_ln203_5_fu_1827_p2[0:0] === 1'b1) ? window_group_1_7_va_25_fu_404 : window_group_1_7_va_110_fu_2958_p3);

assign window_group_1_7_va_112_fu_2974_p3 = ((icmp_ln203_6_fu_1840_p2[0:0] === 1'b1) ? window_group_1_7_va_25_fu_404 : window_group_1_7_va_111_fu_2966_p3);

assign window_group_1_7_va_113_fu_2982_p3 = ((icmp_ln203_1_reg_5705[0:0] === 1'b1) ? window_group_1_6_va_1_reg_5748 : window_group_1_7_va_21_fu_388);

assign window_group_1_7_va_114_fu_2988_p3 = ((icmp_ln203_2_fu_1788_p2[0:0] === 1'b1) ? window_group_1_7_va_21_fu_388 : window_group_1_7_va_113_fu_2982_p3);

assign window_group_1_7_va_115_fu_2996_p3 = ((icmp_ln203_3_fu_1801_p2[0:0] === 1'b1) ? window_group_1_7_va_21_fu_388 : window_group_1_7_va_114_fu_2988_p3);

assign window_group_1_7_va_116_fu_3004_p3 = ((icmp_ln203_4_fu_1814_p2[0:0] === 1'b1) ? window_group_1_7_va_21_fu_388 : window_group_1_7_va_115_fu_2996_p3);

assign window_group_1_7_va_117_fu_3012_p3 = ((icmp_ln203_5_fu_1827_p2[0:0] === 1'b1) ? window_group_1_7_va_21_fu_388 : window_group_1_7_va_116_fu_3004_p3);

assign window_group_1_7_va_118_fu_3020_p3 = ((icmp_ln203_6_fu_1840_p2[0:0] === 1'b1) ? window_group_1_7_va_21_fu_388 : window_group_1_7_va_117_fu_3012_p3);

assign window_group_1_7_va_119_fu_3028_p3 = ((icmp_ln203_2_fu_1788_p2[0:0] === 1'b1) ? window_group_1_6_va_1_reg_5748 : window_group_1_7_va_17_fu_372);

assign window_group_1_7_va_120_fu_3035_p3 = ((icmp_ln203_3_fu_1801_p2[0:0] === 1'b1) ? window_group_1_7_va_17_fu_372 : window_group_1_7_va_119_fu_3028_p3);

assign window_group_1_7_va_121_fu_3043_p3 = ((icmp_ln203_4_fu_1814_p2[0:0] === 1'b1) ? window_group_1_7_va_17_fu_372 : window_group_1_7_va_120_fu_3035_p3);

assign window_group_1_7_va_122_fu_3051_p3 = ((icmp_ln203_5_fu_1827_p2[0:0] === 1'b1) ? window_group_1_7_va_17_fu_372 : window_group_1_7_va_121_fu_3043_p3);

assign window_group_1_7_va_123_fu_3059_p3 = ((icmp_ln203_6_fu_1840_p2[0:0] === 1'b1) ? window_group_1_7_va_17_fu_372 : window_group_1_7_va_122_fu_3051_p3);

assign window_group_1_7_va_124_fu_3067_p3 = ((icmp_ln203_3_fu_1801_p2[0:0] === 1'b1) ? window_group_1_6_va_1_reg_5748 : window_group_1_7_va_13_fu_356);

assign window_group_1_7_va_125_fu_3074_p3 = ((icmp_ln203_4_fu_1814_p2[0:0] === 1'b1) ? window_group_1_7_va_13_fu_356 : window_group_1_7_va_124_fu_3067_p3);

assign window_group_1_7_va_126_fu_3082_p3 = ((icmp_ln203_5_fu_1827_p2[0:0] === 1'b1) ? window_group_1_7_va_13_fu_356 : window_group_1_7_va_125_fu_3074_p3);

assign window_group_1_7_va_127_fu_3090_p3 = ((icmp_ln203_6_fu_1840_p2[0:0] === 1'b1) ? window_group_1_7_va_13_fu_356 : window_group_1_7_va_126_fu_3082_p3);

assign window_group_1_7_va_128_fu_3098_p3 = ((icmp_ln203_4_fu_1814_p2[0:0] === 1'b1) ? window_group_1_6_va_1_reg_5748 : window_group_1_7_va_9_fu_340);

assign window_group_1_7_va_129_fu_3105_p3 = ((icmp_ln203_5_fu_1827_p2[0:0] === 1'b1) ? window_group_1_7_va_9_fu_340 : window_group_1_7_va_128_fu_3098_p3);

assign window_group_1_7_va_130_fu_3113_p3 = ((icmp_ln203_6_fu_1840_p2[0:0] === 1'b1) ? window_group_1_7_va_9_fu_340 : window_group_1_7_va_129_fu_3105_p3);

assign window_group_1_7_va_131_fu_3121_p3 = ((icmp_ln203_5_fu_1827_p2[0:0] === 1'b1) ? window_group_1_6_va_1_reg_5748 : window_group_1_7_va_5_fu_324);

assign window_group_1_7_va_132_fu_3128_p3 = ((icmp_ln203_6_fu_1840_p2[0:0] === 1'b1) ? window_group_1_7_va_5_fu_324 : window_group_1_7_va_131_fu_3121_p3);

assign window_group_1_7_va_133_fu_3136_p3 = ((icmp_ln203_6_fu_1840_p2[0:0] === 1'b1) ? window_group_1_6_va_1_reg_5748 : window_group_1_7_va_1_fu_308);

assign window_group_1_7_va_134_fu_3143_p3 = ((icmp_ln203_reg_5683[0:0] === 1'b1) ? window_group_1_7_va_30_fu_424 : reg_780);

assign window_group_1_7_va_135_fu_3150_p3 = ((icmp_ln203_1_reg_5705[0:0] === 1'b1) ? window_group_1_7_va_30_fu_424 : window_group_1_7_va_134_fu_3143_p3);

assign window_group_1_7_va_136_fu_3157_p3 = ((icmp_ln203_2_fu_1788_p2[0:0] === 1'b1) ? window_group_1_7_va_30_fu_424 : window_group_1_7_va_135_fu_3150_p3);

assign window_group_1_7_va_137_fu_3165_p3 = ((icmp_ln203_3_fu_1801_p2[0:0] === 1'b1) ? window_group_1_7_va_30_fu_424 : window_group_1_7_va_136_fu_3157_p3);

assign window_group_1_7_va_138_fu_3173_p3 = ((icmp_ln203_4_fu_1814_p2[0:0] === 1'b1) ? window_group_1_7_va_30_fu_424 : window_group_1_7_va_137_fu_3165_p3);

assign window_group_1_7_va_139_fu_3181_p3 = ((icmp_ln203_5_fu_1827_p2[0:0] === 1'b1) ? window_group_1_7_va_30_fu_424 : window_group_1_7_va_138_fu_3173_p3);

assign window_group_1_7_va_140_fu_3189_p3 = ((icmp_ln203_6_fu_1840_p2[0:0] === 1'b1) ? window_group_1_7_va_30_fu_424 : window_group_1_7_va_139_fu_3181_p3);

assign window_group_1_7_va_141_fu_3197_p3 = ((icmp_ln203_reg_5683[0:0] === 1'b1) ? reg_780 : window_group_1_7_va_26_fu_408);

assign window_group_1_7_va_142_fu_3204_p3 = ((icmp_ln203_1_reg_5705[0:0] === 1'b1) ? window_group_1_7_va_26_fu_408 : window_group_1_7_va_141_fu_3197_p3);

assign window_group_1_7_va_143_fu_3211_p3 = ((icmp_ln203_2_fu_1788_p2[0:0] === 1'b1) ? window_group_1_7_va_26_fu_408 : window_group_1_7_va_142_fu_3204_p3);

assign window_group_1_7_va_144_fu_3219_p3 = ((icmp_ln203_3_fu_1801_p2[0:0] === 1'b1) ? window_group_1_7_va_26_fu_408 : window_group_1_7_va_143_fu_3211_p3);

assign window_group_1_7_va_145_fu_3227_p3 = ((icmp_ln203_4_fu_1814_p2[0:0] === 1'b1) ? window_group_1_7_va_26_fu_408 : window_group_1_7_va_144_fu_3219_p3);

assign window_group_1_7_va_146_fu_3235_p3 = ((icmp_ln203_5_fu_1827_p2[0:0] === 1'b1) ? window_group_1_7_va_26_fu_408 : window_group_1_7_va_145_fu_3227_p3);

assign window_group_1_7_va_147_fu_3243_p3 = ((icmp_ln203_6_fu_1840_p2[0:0] === 1'b1) ? window_group_1_7_va_26_fu_408 : window_group_1_7_va_146_fu_3235_p3);

assign window_group_1_7_va_148_fu_3251_p3 = ((icmp_ln203_1_reg_5705[0:0] === 1'b1) ? reg_780 : window_group_1_7_va_22_fu_392);

assign window_group_1_7_va_149_fu_3258_p3 = ((icmp_ln203_2_fu_1788_p2[0:0] === 1'b1) ? window_group_1_7_va_22_fu_392 : window_group_1_7_va_148_fu_3251_p3);

assign window_group_1_7_va_150_fu_3266_p3 = ((icmp_ln203_3_fu_1801_p2[0:0] === 1'b1) ? window_group_1_7_va_22_fu_392 : window_group_1_7_va_149_fu_3258_p3);

assign window_group_1_7_va_151_fu_3274_p3 = ((icmp_ln203_4_fu_1814_p2[0:0] === 1'b1) ? window_group_1_7_va_22_fu_392 : window_group_1_7_va_150_fu_3266_p3);

assign window_group_1_7_va_152_fu_3282_p3 = ((icmp_ln203_5_fu_1827_p2[0:0] === 1'b1) ? window_group_1_7_va_22_fu_392 : window_group_1_7_va_151_fu_3274_p3);

assign window_group_1_7_va_153_fu_3290_p3 = ((icmp_ln203_6_fu_1840_p2[0:0] === 1'b1) ? window_group_1_7_va_22_fu_392 : window_group_1_7_va_152_fu_3282_p3);

assign window_group_1_7_va_154_fu_3298_p3 = ((icmp_ln203_2_fu_1788_p2[0:0] === 1'b1) ? reg_780 : window_group_1_7_va_18_fu_376);

assign window_group_1_7_va_155_fu_3306_p3 = ((icmp_ln203_3_fu_1801_p2[0:0] === 1'b1) ? window_group_1_7_va_18_fu_376 : window_group_1_7_va_154_fu_3298_p3);

assign window_group_1_7_va_156_fu_3314_p3 = ((icmp_ln203_4_fu_1814_p2[0:0] === 1'b1) ? window_group_1_7_va_18_fu_376 : window_group_1_7_va_155_fu_3306_p3);

assign window_group_1_7_va_157_fu_3322_p3 = ((icmp_ln203_5_fu_1827_p2[0:0] === 1'b1) ? window_group_1_7_va_18_fu_376 : window_group_1_7_va_156_fu_3314_p3);

assign window_group_1_7_va_158_fu_3330_p3 = ((icmp_ln203_6_fu_1840_p2[0:0] === 1'b1) ? window_group_1_7_va_18_fu_376 : window_group_1_7_va_157_fu_3322_p3);

assign window_group_1_7_va_159_fu_3338_p3 = ((icmp_ln203_3_fu_1801_p2[0:0] === 1'b1) ? reg_780 : window_group_1_7_va_14_fu_360);

assign window_group_1_7_va_160_fu_3346_p3 = ((icmp_ln203_4_fu_1814_p2[0:0] === 1'b1) ? window_group_1_7_va_14_fu_360 : window_group_1_7_va_159_fu_3338_p3);

assign window_group_1_7_va_161_fu_3354_p3 = ((icmp_ln203_5_fu_1827_p2[0:0] === 1'b1) ? window_group_1_7_va_14_fu_360 : window_group_1_7_va_160_fu_3346_p3);

assign window_group_1_7_va_162_fu_3362_p3 = ((icmp_ln203_6_fu_1840_p2[0:0] === 1'b1) ? window_group_1_7_va_14_fu_360 : window_group_1_7_va_161_fu_3354_p3);

assign window_group_1_7_va_163_fu_3370_p3 = ((icmp_ln203_4_fu_1814_p2[0:0] === 1'b1) ? reg_780 : window_group_1_7_va_10_fu_344);

assign window_group_1_7_va_164_fu_3378_p3 = ((icmp_ln203_5_fu_1827_p2[0:0] === 1'b1) ? window_group_1_7_va_10_fu_344 : window_group_1_7_va_163_fu_3370_p3);

assign window_group_1_7_va_165_fu_3386_p3 = ((icmp_ln203_6_fu_1840_p2[0:0] === 1'b1) ? window_group_1_7_va_10_fu_344 : window_group_1_7_va_164_fu_3378_p3);

assign window_group_1_7_va_166_fu_3394_p3 = ((icmp_ln203_5_fu_1827_p2[0:0] === 1'b1) ? reg_780 : window_group_1_7_va_6_fu_328);

assign window_group_1_7_va_167_fu_3402_p3 = ((icmp_ln203_6_fu_1840_p2[0:0] === 1'b1) ? window_group_1_7_va_6_fu_328 : window_group_1_7_va_166_fu_3394_p3);

assign window_group_1_7_va_168_fu_3410_p3 = ((icmp_ln203_6_fu_1840_p2[0:0] === 1'b1) ? reg_780 : window_group_1_7_va_2_fu_312);

assign window_group_1_7_va_169_fu_4083_p3 = ((icmp_ln203_reg_5683[0:0] === 1'b1) ? window_group_1_7_va_31_fu_428 : reg_780);

assign window_group_1_7_va_170_fu_4090_p3 = ((icmp_ln203_1_reg_5705[0:0] === 1'b1) ? window_group_1_7_va_31_fu_428 : window_group_1_7_va_169_fu_4083_p3);

assign window_group_1_7_va_171_fu_4097_p3 = ((icmp_ln203_2_reg_5760[0:0] === 1'b1) ? window_group_1_7_va_31_fu_428 : window_group_1_7_va_170_fu_4090_p3);

assign window_group_1_7_va_172_fu_4104_p3 = ((icmp_ln203_3_reg_5776[0:0] === 1'b1) ? window_group_1_7_va_31_fu_428 : window_group_1_7_va_171_fu_4097_p3);

assign window_group_1_7_va_173_fu_4111_p3 = ((icmp_ln203_4_reg_5795[0:0] === 1'b1) ? window_group_1_7_va_31_fu_428 : window_group_1_7_va_172_fu_4104_p3);

assign window_group_1_7_va_174_fu_4118_p3 = ((icmp_ln203_5_reg_5817[0:0] === 1'b1) ? window_group_1_7_va_31_fu_428 : window_group_1_7_va_173_fu_4111_p3);

assign window_group_1_7_va_175_fu_4125_p3 = ((icmp_ln203_6_reg_5842[0:0] === 1'b1) ? window_group_1_7_va_31_fu_428 : window_group_1_7_va_174_fu_4118_p3);

assign window_group_1_7_va_176_fu_4132_p3 = ((icmp_ln203_reg_5683[0:0] === 1'b1) ? reg_780 : window_group_1_7_va_27_fu_412);

assign window_group_1_7_va_177_fu_4139_p3 = ((icmp_ln203_1_reg_5705[0:0] === 1'b1) ? window_group_1_7_va_27_fu_412 : window_group_1_7_va_176_fu_4132_p3);

assign window_group_1_7_va_178_fu_4146_p3 = ((icmp_ln203_2_reg_5760[0:0] === 1'b1) ? window_group_1_7_va_27_fu_412 : window_group_1_7_va_177_fu_4139_p3);

assign window_group_1_7_va_179_fu_4153_p3 = ((icmp_ln203_3_reg_5776[0:0] === 1'b1) ? window_group_1_7_va_27_fu_412 : window_group_1_7_va_178_fu_4146_p3);

assign window_group_1_7_va_180_fu_4160_p3 = ((icmp_ln203_4_reg_5795[0:0] === 1'b1) ? window_group_1_7_va_27_fu_412 : window_group_1_7_va_179_fu_4153_p3);

assign window_group_1_7_va_181_fu_4167_p3 = ((icmp_ln203_5_reg_5817[0:0] === 1'b1) ? window_group_1_7_va_27_fu_412 : window_group_1_7_va_180_fu_4160_p3);

assign window_group_1_7_va_182_fu_4174_p3 = ((icmp_ln203_6_reg_5842[0:0] === 1'b1) ? window_group_1_7_va_27_fu_412 : window_group_1_7_va_181_fu_4167_p3);

assign window_group_1_7_va_183_fu_4181_p3 = ((icmp_ln203_1_reg_5705[0:0] === 1'b1) ? reg_780 : window_group_1_7_va_23_fu_396);

assign window_group_1_7_va_184_fu_4188_p3 = ((icmp_ln203_2_reg_5760[0:0] === 1'b1) ? window_group_1_7_va_23_fu_396 : window_group_1_7_va_183_fu_4181_p3);

assign window_group_1_7_va_185_fu_4195_p3 = ((icmp_ln203_3_reg_5776[0:0] === 1'b1) ? window_group_1_7_va_23_fu_396 : window_group_1_7_va_184_fu_4188_p3);

assign window_group_1_7_va_186_fu_4202_p3 = ((icmp_ln203_4_reg_5795[0:0] === 1'b1) ? window_group_1_7_va_23_fu_396 : window_group_1_7_va_185_fu_4195_p3);

assign window_group_1_7_va_187_fu_4209_p3 = ((icmp_ln203_5_reg_5817[0:0] === 1'b1) ? window_group_1_7_va_23_fu_396 : window_group_1_7_va_186_fu_4202_p3);

assign window_group_1_7_va_188_fu_4216_p3 = ((icmp_ln203_6_reg_5842[0:0] === 1'b1) ? window_group_1_7_va_23_fu_396 : window_group_1_7_va_187_fu_4209_p3);

assign window_group_1_7_va_189_fu_4223_p3 = ((icmp_ln203_2_reg_5760[0:0] === 1'b1) ? reg_780 : window_group_1_7_va_19_fu_380);

assign window_group_1_7_va_190_fu_4230_p3 = ((icmp_ln203_3_reg_5776[0:0] === 1'b1) ? window_group_1_7_va_19_fu_380 : window_group_1_7_va_189_fu_4223_p3);

assign window_group_1_7_va_191_fu_4237_p3 = ((icmp_ln203_4_reg_5795[0:0] === 1'b1) ? window_group_1_7_va_19_fu_380 : window_group_1_7_va_190_fu_4230_p3);

assign window_group_1_7_va_192_fu_4244_p3 = ((icmp_ln203_5_reg_5817[0:0] === 1'b1) ? window_group_1_7_va_19_fu_380 : window_group_1_7_va_191_fu_4237_p3);

assign window_group_1_7_va_193_fu_4251_p3 = ((icmp_ln203_6_reg_5842[0:0] === 1'b1) ? window_group_1_7_va_19_fu_380 : window_group_1_7_va_192_fu_4244_p3);

assign window_group_1_7_va_194_fu_4258_p3 = ((icmp_ln203_3_reg_5776[0:0] === 1'b1) ? reg_780 : window_group_1_7_va_15_fu_364);

assign window_group_1_7_va_195_fu_4265_p3 = ((icmp_ln203_4_reg_5795[0:0] === 1'b1) ? window_group_1_7_va_15_fu_364 : window_group_1_7_va_194_fu_4258_p3);

assign window_group_1_7_va_196_fu_4272_p3 = ((icmp_ln203_5_reg_5817[0:0] === 1'b1) ? window_group_1_7_va_15_fu_364 : window_group_1_7_va_195_fu_4265_p3);

assign window_group_1_7_va_197_fu_4279_p3 = ((icmp_ln203_6_reg_5842[0:0] === 1'b1) ? window_group_1_7_va_15_fu_364 : window_group_1_7_va_196_fu_4272_p3);

assign window_group_1_7_va_198_fu_4286_p3 = ((icmp_ln203_4_reg_5795[0:0] === 1'b1) ? reg_780 : window_group_1_7_va_11_fu_348);

assign window_group_1_7_va_199_fu_4293_p3 = ((icmp_ln203_5_reg_5817[0:0] === 1'b1) ? window_group_1_7_va_11_fu_348 : window_group_1_7_va_198_fu_4286_p3);

assign window_group_1_7_va_200_fu_4300_p3 = ((icmp_ln203_6_reg_5842[0:0] === 1'b1) ? window_group_1_7_va_11_fu_348 : window_group_1_7_va_199_fu_4293_p3);

assign window_group_1_7_va_201_fu_4307_p3 = ((icmp_ln203_5_reg_5817[0:0] === 1'b1) ? reg_780 : window_group_1_7_va_7_fu_332);

assign window_group_1_7_va_202_fu_4314_p3 = ((icmp_ln203_6_reg_5842[0:0] === 1'b1) ? window_group_1_7_va_7_fu_332 : window_group_1_7_va_201_fu_4307_p3);

assign window_group_1_7_va_203_fu_4321_p3 = ((icmp_ln203_6_reg_5842[0:0] === 1'b1) ? reg_780 : window_group_1_7_va_3_fu_316);

assign window_group_1_7_va_64_fu_2609_p3 = ((icmp_ln203_reg_5683[0:0] === 1'b1) ? window_group_1_7_va_28_fu_416 : window_group_1_6_va_reg_5736);

assign window_group_1_7_va_65_fu_2615_p3 = ((icmp_ln203_1_reg_5705[0:0] === 1'b1) ? window_group_1_7_va_28_fu_416 : window_group_1_7_va_64_fu_2609_p3);

assign window_group_1_7_va_66_fu_2622_p3 = ((icmp_ln203_2_fu_1788_p2[0:0] === 1'b1) ? window_group_1_7_va_28_fu_416 : window_group_1_7_va_65_fu_2615_p3);

assign window_group_1_7_va_67_fu_2630_p3 = ((icmp_ln203_3_fu_1801_p2[0:0] === 1'b1) ? window_group_1_7_va_28_fu_416 : window_group_1_7_va_66_fu_2622_p3);

assign window_group_1_7_va_68_fu_2638_p3 = ((icmp_ln203_4_fu_1814_p2[0:0] === 1'b1) ? window_group_1_7_va_28_fu_416 : window_group_1_7_va_67_fu_2630_p3);

assign window_group_1_7_va_69_fu_2646_p3 = ((icmp_ln203_5_fu_1827_p2[0:0] === 1'b1) ? window_group_1_7_va_28_fu_416 : window_group_1_7_va_68_fu_2638_p3);

assign window_group_1_7_va_70_fu_2654_p3 = ((icmp_ln203_6_fu_1840_p2[0:0] === 1'b1) ? window_group_1_7_va_28_fu_416 : window_group_1_7_va_69_fu_2646_p3);

assign window_group_1_7_va_71_fu_2662_p3 = ((icmp_ln203_reg_5683[0:0] === 1'b1) ? window_group_1_6_va_reg_5736 : window_group_1_7_va_24_fu_400);

assign window_group_1_7_va_72_fu_2668_p3 = ((icmp_ln203_1_reg_5705[0:0] === 1'b1) ? window_group_1_7_va_24_fu_400 : window_group_1_7_va_71_fu_2662_p3);

assign window_group_1_7_va_73_fu_2675_p3 = ((icmp_ln203_2_fu_1788_p2[0:0] === 1'b1) ? window_group_1_7_va_24_fu_400 : window_group_1_7_va_72_fu_2668_p3);

assign window_group_1_7_va_74_fu_2683_p3 = ((icmp_ln203_3_fu_1801_p2[0:0] === 1'b1) ? window_group_1_7_va_24_fu_400 : window_group_1_7_va_73_fu_2675_p3);

assign window_group_1_7_va_75_fu_2691_p3 = ((icmp_ln203_4_fu_1814_p2[0:0] === 1'b1) ? window_group_1_7_va_24_fu_400 : window_group_1_7_va_74_fu_2683_p3);

assign window_group_1_7_va_76_fu_2699_p3 = ((icmp_ln203_5_fu_1827_p2[0:0] === 1'b1) ? window_group_1_7_va_24_fu_400 : window_group_1_7_va_75_fu_2691_p3);

assign window_group_1_7_va_77_fu_2707_p3 = ((icmp_ln203_6_fu_1840_p2[0:0] === 1'b1) ? window_group_1_7_va_24_fu_400 : window_group_1_7_va_76_fu_2699_p3);

assign window_group_1_7_va_78_fu_2715_p3 = ((icmp_ln203_1_reg_5705[0:0] === 1'b1) ? window_group_1_6_va_reg_5736 : window_group_1_7_va_20_fu_384);

assign window_group_1_7_va_79_fu_2721_p3 = ((icmp_ln203_2_fu_1788_p2[0:0] === 1'b1) ? window_group_1_7_va_20_fu_384 : window_group_1_7_va_78_fu_2715_p3);

assign window_group_1_7_va_80_fu_2729_p3 = ((icmp_ln203_3_fu_1801_p2[0:0] === 1'b1) ? window_group_1_7_va_20_fu_384 : window_group_1_7_va_79_fu_2721_p3);

assign window_group_1_7_va_81_fu_2737_p3 = ((icmp_ln203_4_fu_1814_p2[0:0] === 1'b1) ? window_group_1_7_va_20_fu_384 : window_group_1_7_va_80_fu_2729_p3);

assign window_group_1_7_va_82_fu_2745_p3 = ((icmp_ln203_5_fu_1827_p2[0:0] === 1'b1) ? window_group_1_7_va_20_fu_384 : window_group_1_7_va_81_fu_2737_p3);

assign window_group_1_7_va_83_fu_2753_p3 = ((icmp_ln203_6_fu_1840_p2[0:0] === 1'b1) ? window_group_1_7_va_20_fu_384 : window_group_1_7_va_82_fu_2745_p3);

assign window_group_1_7_va_84_fu_2761_p3 = ((icmp_ln203_2_fu_1788_p2[0:0] === 1'b1) ? window_group_1_6_va_reg_5736 : window_group_1_7_va_16_fu_368);

assign window_group_1_7_va_85_fu_2768_p3 = ((icmp_ln203_3_fu_1801_p2[0:0] === 1'b1) ? window_group_1_7_va_16_fu_368 : window_group_1_7_va_84_fu_2761_p3);

assign window_group_1_7_va_86_fu_2776_p3 = ((icmp_ln203_4_fu_1814_p2[0:0] === 1'b1) ? window_group_1_7_va_16_fu_368 : window_group_1_7_va_85_fu_2768_p3);

assign window_group_1_7_va_87_fu_2784_p3 = ((icmp_ln203_5_fu_1827_p2[0:0] === 1'b1) ? window_group_1_7_va_16_fu_368 : window_group_1_7_va_86_fu_2776_p3);

assign window_group_1_7_va_88_fu_2792_p3 = ((icmp_ln203_6_fu_1840_p2[0:0] === 1'b1) ? window_group_1_7_va_16_fu_368 : window_group_1_7_va_87_fu_2784_p3);

assign window_group_1_7_va_89_fu_2800_p3 = ((icmp_ln203_3_fu_1801_p2[0:0] === 1'b1) ? window_group_1_6_va_reg_5736 : window_group_1_7_va_12_fu_352);

assign window_group_1_7_va_90_fu_2807_p3 = ((icmp_ln203_4_fu_1814_p2[0:0] === 1'b1) ? window_group_1_7_va_12_fu_352 : window_group_1_7_va_89_fu_2800_p3);

assign window_group_1_7_va_91_fu_2815_p3 = ((icmp_ln203_5_fu_1827_p2[0:0] === 1'b1) ? window_group_1_7_va_12_fu_352 : window_group_1_7_va_90_fu_2807_p3);

assign window_group_1_7_va_92_fu_2823_p3 = ((icmp_ln203_6_fu_1840_p2[0:0] === 1'b1) ? window_group_1_7_va_12_fu_352 : window_group_1_7_va_91_fu_2815_p3);

assign window_group_1_7_va_93_fu_2831_p3 = ((icmp_ln203_4_fu_1814_p2[0:0] === 1'b1) ? window_group_1_6_va_reg_5736 : window_group_1_7_va_8_fu_336);

assign window_group_1_7_va_94_fu_2838_p3 = ((icmp_ln203_5_fu_1827_p2[0:0] === 1'b1) ? window_group_1_7_va_8_fu_336 : window_group_1_7_va_93_fu_2831_p3);

assign window_group_1_7_va_95_fu_2846_p3 = ((icmp_ln203_6_fu_1840_p2[0:0] === 1'b1) ? window_group_1_7_va_8_fu_336 : window_group_1_7_va_94_fu_2838_p3);

assign window_group_1_7_va_96_fu_2854_p3 = ((icmp_ln203_5_fu_1827_p2[0:0] === 1'b1) ? window_group_1_6_va_reg_5736 : window_group_1_7_va_4_fu_320);

assign window_group_1_7_va_97_fu_2861_p3 = ((icmp_ln203_6_fu_1840_p2[0:0] === 1'b1) ? window_group_1_7_va_4_fu_320 : window_group_1_7_va_96_fu_2854_p3);

assign window_group_1_7_va_98_fu_2869_p3 = ((icmp_ln203_6_fu_1840_p2[0:0] === 1'b1) ? window_group_1_6_va_reg_5736 : window_group_1_7_va_fu_304);

assign window_group_1_7_va_99_fu_2876_p3 = ((icmp_ln203_reg_5683[0:0] === 1'b1) ? window_group_1_7_va_29_fu_420 : window_group_1_6_va_1_reg_5748);

assign xor_ln21_fu_990_p2 = (icmp_ln23_fu_960_p2 ^ 1'd1);

assign xor_ln23_fu_1066_p2 = (icmp_ln25_fu_1014_p2 ^ 1'd1);

assign xor_ln25_fu_1110_p2 = (1'd1 ^ and_ln23_3_fu_1078_p2);

assign zext_ln27_1_fu_1334_p1 = col_stride_reg_5464;

assign zext_ln27_2_fu_1580_p1 = select_ln27_2_reg_5494;

assign zext_ln27_3_fu_1583_p1 = select_ln27_4_reg_5499;

assign zext_ln27_fu_874_p1 = ap_phi_mux_col_stride_0_phi_fu_731_p4;

assign zext_ln34_1_fu_1248_p1 = shl_ln34_mid1_fu_1222_p3;

assign zext_ln34_2_fu_1343_p1 = add_ln34_1_fu_1337_p2;

assign zext_ln34_fu_884_p1 = col_idx_fu_878_p2;

assign zext_ln37_1_fu_1046_p1 = row_stride_fu_1026_p2;

assign zext_ln37_fu_834_p1 = ap_phi_mux_row_stride_0_phi_fu_685_p4;

always @ (posedge ap_clk) begin
    shl_ln1_reg_5316[0] <= 1'b0;
end

endmodule //yolo_max_pool_top
