// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _window_macc_HH_
#define _window_macc_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "yolo_conv_top_mul_mul_16s_16s_32_1_0.h"
#include "yolo_conv_top_mac_muladd_16s_16s_32s_32_1_0.h"

namespace ap_rtl {

struct window_macc : public sc_module {
    // Port declarations 22
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_lv<16> > p_read;
    sc_in< sc_lv<16> > p_read1;
    sc_in< sc_lv<16> > p_read2;
    sc_in< sc_lv<16> > p_read3;
    sc_in< sc_lv<16> > p_read4;
    sc_in< sc_lv<16> > p_read5;
    sc_in< sc_lv<16> > p_read6;
    sc_in< sc_lv<16> > p_read7;
    sc_in< sc_lv<16> > p_read8;
    sc_in< sc_lv<16> > p_read9;
    sc_in< sc_lv<16> > p_read10;
    sc_in< sc_lv<16> > p_read11;
    sc_in< sc_lv<16> > p_read12;
    sc_in< sc_lv<16> > p_read13;
    sc_in< sc_lv<16> > p_read14;
    sc_in< sc_lv<16> > p_read15;
    sc_in< sc_lv<16> > p_read16;
    sc_in< sc_lv<16> > p_read17;
    sc_out< sc_lv<32> > ap_return;
    sc_in< sc_logic > ap_ce;


    // Module declarations
    window_macc(sc_module_name name);
    SC_HAS_PROCESS(window_macc);

    ~window_macc();

    sc_trace_file* mVcdFile;

    yolo_conv_top_mul_mul_16s_16s_32_1_0<1,1,16,16,32>* yolo_conv_top_mul_mul_16s_16s_32_1_0_U6;
    yolo_conv_top_mul_mul_16s_16s_32_1_0<1,1,16,16,32>* yolo_conv_top_mul_mul_16s_16s_32_1_0_U7;
    yolo_conv_top_mul_mul_16s_16s_32_1_0<1,1,16,16,32>* yolo_conv_top_mul_mul_16s_16s_32_1_0_U8;
    yolo_conv_top_mul_mul_16s_16s_32_1_0<1,1,16,16,32>* yolo_conv_top_mul_mul_16s_16s_32_1_0_U9;
    yolo_conv_top_mac_muladd_16s_16s_32s_32_1_0<1,1,16,16,32,32>* yolo_conv_top_mac_muladd_16s_16s_32s_32_1_0_U10;
    yolo_conv_top_mac_muladd_16s_16s_32s_32_1_0<1,1,16,16,32,32>* yolo_conv_top_mac_muladd_16s_16s_32s_32_1_0_U11;
    yolo_conv_top_mac_muladd_16s_16s_32s_32_1_0<1,1,16,16,32,32>* yolo_conv_top_mac_muladd_16s_16s_32s_32_1_0_U12;
    yolo_conv_top_mac_muladd_16s_16s_32s_32_1_0<1,1,16,16,32,32>* yolo_conv_top_mac_muladd_16s_16s_32s_32_1_0_U13;
    yolo_conv_top_mac_muladd_16s_16s_32s_32_1_0<1,1,16,16,32,32>* yolo_conv_top_mac_muladd_16s_16s_32s_32_1_0_U14;
    sc_signal< sc_lv<16> > p_read_1_reg_281;
    sc_signal< bool > ap_block_state1_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter1;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter2;
    sc_signal< bool > ap_block_state4_pp0_stage0_iter3;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<16> > p_read_3_reg_286;
    sc_signal< sc_lv<16> > p_read_3_reg_286_pp0_iter1_reg;
    sc_signal< sc_lv<16> > p_read_4_reg_291;
    sc_signal< sc_lv<16> > p_read_6_reg_296;
    sc_signal< sc_lv<16> > p_read_9_reg_301;
    sc_signal< sc_lv<16> > p_read_10_reg_306;
    sc_signal< sc_lv<16> > p_read_12_reg_311;
    sc_signal< sc_lv<16> > p_read_12_reg_311_pp0_iter1_reg;
    sc_signal< sc_lv<16> > p_read_13_reg_316;
    sc_signal< sc_lv<16> > p_read_15_reg_321;
    sc_signal< sc_lv<16> > p_read18_reg_326;
    sc_signal< sc_lv<32> > mul_ln1118_1_fu_221_p2;
    sc_signal< sc_lv<32> > mul_ln1118_1_reg_331;
    sc_signal< sc_lv<32> > mul_ln1118_2_fu_227_p2;
    sc_signal< sc_lv<32> > mul_ln1118_2_reg_336;
    sc_signal< sc_lv<32> > mul_ln1118_4_fu_233_p2;
    sc_signal< sc_lv<32> > mul_ln1118_4_reg_341;
    sc_signal< sc_lv<32> > mul_ln1118_7_fu_239_p2;
    sc_signal< sc_lv<32> > mul_ln1118_7_reg_346;
    sc_signal< sc_lv<32> > grp_fu_245_p3;
    sc_signal< sc_lv<32> > add_ln703_reg_351;
    sc_signal< sc_lv<32> > add_ln703_reg_351_pp0_iter2_reg;
    sc_signal< sc_lv<32> > grp_fu_252_p3;
    sc_signal< sc_lv<32> > add_ln703_1_reg_356;
    sc_signal< sc_lv<32> > add_ln703_1_reg_356_pp0_iter2_reg;
    sc_signal< sc_lv<32> > grp_fu_259_p3;
    sc_signal< sc_lv<32> > add_ln703_3_reg_361;
    sc_signal< sc_lv<32> > grp_fu_266_p3;
    sc_signal< sc_lv<32> > add_ln703_4_reg_366;
    sc_signal< sc_lv<32> > add_ln703_6_fu_208_p2;
    sc_signal< sc_lv<32> > add_ln703_6_reg_371;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<32> > grp_fu_273_p3;
    sc_signal< sc_lv<32> > add_ln703_2_fu_212_p2;
    sc_signal< sc_lv<32> > add_ln703_7_fu_216_p2;
    sc_signal< sc_logic > ap_ce_reg;
    sc_signal< sc_lv<16> > p_read_int_reg;
    sc_signal< sc_lv<16> > p_read1_int_reg;
    sc_signal< sc_lv<16> > p_read2_int_reg;
    sc_signal< sc_lv<16> > p_read3_int_reg;
    sc_signal< sc_lv<16> > p_read4_int_reg;
    sc_signal< sc_lv<16> > p_read5_int_reg;
    sc_signal< sc_lv<16> > p_read6_int_reg;
    sc_signal< sc_lv<16> > p_read7_int_reg;
    sc_signal< sc_lv<16> > p_read8_int_reg;
    sc_signal< sc_lv<16> > p_read9_int_reg;
    sc_signal< sc_lv<16> > p_read10_int_reg;
    sc_signal< sc_lv<16> > p_read11_int_reg;
    sc_signal< sc_lv<16> > p_read12_int_reg;
    sc_signal< sc_lv<16> > p_read13_int_reg;
    sc_signal< sc_lv<16> > p_read14_int_reg;
    sc_signal< sc_lv<16> > p_read15_int_reg;
    sc_signal< sc_lv<16> > p_read16_int_reg;
    sc_signal< sc_lv<16> > p_read17_int_reg;
    sc_signal< sc_lv<32> > ap_return_int_reg;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const bool ap_const_boolean_1;
    static const bool ap_const_boolean_0;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_add_ln703_2_fu_212_p2();
    void thread_add_ln703_6_fu_208_p2();
    void thread_add_ln703_7_fu_216_p2();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_state1_pp0_stage0_iter0();
    void thread_ap_block_state2_pp0_stage0_iter1();
    void thread_ap_block_state3_pp0_stage0_iter2();
    void thread_ap_block_state4_pp0_stage0_iter3();
    void thread_ap_return();
};

}

using namespace ap_rtl;

#endif
