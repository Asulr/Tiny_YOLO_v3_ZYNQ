// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _post_process_HH_
#define _post_process_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct post_process : public sc_module {
    // Port declarations 10
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_lv<32> > sub0_val_output_V;
    sc_in< sc_lv<32> > sub1_val_output_V;
    sc_in< sc_lv<32> > sub2_val_output_V;
    sc_in< sc_lv<32> > sub3_val_output_V;
    sc_in< sc_lv<4> > input_ch_idx;
    sc_in< sc_lv<32> > val_output_V;
    sc_out< sc_lv<32> > ap_return;
    sc_in< sc_logic > ap_ce;


    // Module declarations
    post_process(sc_module_name name);
    SC_HAS_PROCESS(post_process);

    ~post_process();

    sc_trace_file* mVcdFile;

    sc_signal< sc_lv<32> > sub0_val_output_V_re_reg_91;
    sc_signal< bool > ap_block_state1_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter1;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<32> > p_Val2_s_fu_62_p3;
    sc_signal< sc_lv<32> > p_Val2_s_reg_96;
    sc_signal< sc_lv<32> > add_ln703_10_fu_76_p2;
    sc_signal< sc_lv<32> > add_ln703_10_reg_101;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<1> > icmp_ln211_fu_56_p2;
    sc_signal< sc_lv<32> > add_ln703_9_fu_70_p2;
    sc_signal< sc_lv<32> > add_ln703_8_fu_82_p2;
    sc_signal< sc_lv<32> > add_ln703_fu_86_p2;
    sc_signal< sc_logic > ap_ce_reg;
    sc_signal< sc_lv<32> > ap_return_int_reg;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const bool ap_const_boolean_1;
    static const bool ap_const_boolean_0;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<32> ap_const_lv32_0;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_add_ln703_10_fu_76_p2();
    void thread_add_ln703_8_fu_82_p2();
    void thread_add_ln703_9_fu_70_p2();
    void thread_add_ln703_fu_86_p2();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_state1_pp0_stage0_iter0();
    void thread_ap_block_state2_pp0_stage0_iter1();
    void thread_ap_return();
    void thread_icmp_ln211_fu_56_p2();
    void thread_p_Val2_s_fu_62_p3();
};

}

using namespace ap_rtl;

#endif
