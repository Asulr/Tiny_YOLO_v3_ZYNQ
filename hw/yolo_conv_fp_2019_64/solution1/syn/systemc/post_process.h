// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _post_process_HH_
#define _post_process_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct post_process : public sc_module {
    // Port declarations 10
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_lv<16> > sub0_val_output_V;
    sc_in< sc_lv<16> > sub1_val_output_V;
    sc_in< sc_lv<16> > sub2_val_output_V;
    sc_in< sc_lv<16> > sub3_val_output_V;
    sc_in< sc_lv<4> > input_ch_idx;
    sc_in< sc_lv<16> > val_output_V;
    sc_out< sc_lv<16> > ap_return;
    sc_in< sc_logic > ap_ce;


    // Module declarations
    post_process(sc_module_name name);
    SC_HAS_PROCESS(post_process);

    ~post_process();

    sc_trace_file* mVcdFile;

    sc_signal< sc_lv<16> > sub3_val_output_V_re_reg_428;
    sc_signal< bool > ap_block_state1_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter1;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter2;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<16> > sub3_val_output_V_re_reg_428_pp0_iter1_reg;
    sc_signal< sc_lv<16> > sub2_val_output_V_re_reg_434;
    sc_signal< sc_lv<16> > sub1_val_output_V_re_reg_440;
    sc_signal< sc_lv<16> > p_Val2_4_fu_166_p3;
    sc_signal< sc_lv<16> > p_Val2_4_reg_446;
    sc_signal< sc_lv<1> > p_Result_7_reg_452;
    sc_signal< sc_lv<16> > p_Val2_9_fu_281_p2;
    sc_signal< sc_lv<16> > p_Val2_9_reg_459;
    sc_signal< sc_lv<1> > p_Result_8_reg_465;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<1> > icmp_ln211_fu_70_p2;
    sc_signal< sc_lv<16> > p_Val2_s_fu_76_p3;
    sc_signal< sc_lv<16> > rhs_V_fu_88_p0;
    sc_signal< sc_lv<17> > rhs_V_fu_88_p1;
    sc_signal< sc_lv<17> > lhs_V_fu_84_p1;
    sc_signal< sc_lv<17> > ret_V_fu_92_p2;
    sc_signal< sc_lv<16> > p_Val2_3_fu_106_p1;
    sc_signal< sc_lv<16> > p_Val2_3_fu_106_p2;
    sc_signal< sc_lv<1> > p_Result_4_fu_112_p3;
    sc_signal< sc_lv<1> > p_Result_s_fu_98_p3;
    sc_signal< sc_lv<1> > xor_ln786_fu_120_p2;
    sc_signal< sc_lv<1> > xor_ln340_fu_138_p2;
    sc_signal< sc_lv<1> > xor_ln340_16_fu_132_p2;
    sc_signal< sc_lv<1> > underflow_fu_126_p2;
    sc_signal< sc_lv<1> > or_ln340_fu_144_p2;
    sc_signal< sc_lv<16> > select_ln340_fu_150_p3;
    sc_signal< sc_lv<16> > select_ln388_fu_158_p3;
    sc_signal< sc_lv<17> > rhs_V_1_fu_177_p1;
    sc_signal< sc_lv<17> > lhs_V_1_fu_174_p1;
    sc_signal< sc_lv<17> > ret_V_1_fu_180_p2;
    sc_signal< sc_lv<16> > p_Val2_6_fu_194_p2;
    sc_signal< sc_lv<1> > p_Result_6_fu_198_p3;
    sc_signal< sc_lv<1> > p_Result_5_fu_186_p3;
    sc_signal< sc_lv<1> > xor_ln786_2_fu_206_p2;
    sc_signal< sc_lv<1> > xor_ln340_9_fu_224_p2;
    sc_signal< sc_lv<1> > xor_ln340_17_fu_218_p2;
    sc_signal< sc_lv<1> > underflow_1_fu_212_p2;
    sc_signal< sc_lv<1> > or_ln340_11_fu_230_p2;
    sc_signal< sc_lv<16> > select_ln340_9_fu_236_p3;
    sc_signal< sc_lv<16> > select_ln388_9_fu_244_p3;
    sc_signal< sc_lv<16> > p_Val2_7_fu_252_p3;
    sc_signal< sc_lv<17> > rhs_V_2_fu_264_p1;
    sc_signal< sc_lv<17> > lhs_V_2_fu_260_p1;
    sc_signal< sc_lv<17> > ret_V_2_fu_267_p2;
    sc_signal< sc_lv<1> > xor_ln786_3_fu_294_p2;
    sc_signal< sc_lv<1> > xor_ln340_10_fu_308_p2;
    sc_signal< sc_lv<1> > xor_ln340_18_fu_304_p2;
    sc_signal< sc_lv<1> > underflow_2_fu_299_p2;
    sc_signal< sc_lv<1> > or_ln340_12_fu_313_p2;
    sc_signal< sc_lv<16> > select_ln340_10_fu_318_p3;
    sc_signal< sc_lv<16> > select_ln388_10_fu_325_p3;
    sc_signal< sc_lv<16> > p_Val2_10_fu_332_p3;
    sc_signal< sc_lv<17> > rhs_V_3_fu_344_p1;
    sc_signal< sc_lv<17> > lhs_V_3_fu_340_p1;
    sc_signal< sc_lv<17> > ret_V_3_fu_347_p2;
    sc_signal< sc_lv<16> > p_Val2_12_fu_361_p2;
    sc_signal< sc_lv<1> > p_Result_10_fu_366_p3;
    sc_signal< sc_lv<1> > p_Result_9_fu_353_p3;
    sc_signal< sc_lv<1> > xor_ln786_4_fu_374_p2;
    sc_signal< sc_lv<1> > xor_ln340_11_fu_392_p2;
    sc_signal< sc_lv<1> > xor_ln340_19_fu_386_p2;
    sc_signal< sc_lv<1> > underflow_3_fu_380_p2;
    sc_signal< sc_lv<1> > or_ln340_13_fu_398_p2;
    sc_signal< sc_lv<16> > select_ln340_11_fu_404_p3;
    sc_signal< sc_lv<16> > select_ln388_11_fu_412_p3;
    sc_signal< sc_lv<16> > select_ln340_21_fu_420_p3;
    sc_signal< sc_logic > ap_ce_reg;
    sc_signal< sc_lv<16> > sub0_val_output_V_int_reg;
    sc_signal< sc_lv<16> > sub1_val_output_V_int_reg;
    sc_signal< sc_lv<16> > sub2_val_output_V_int_reg;
    sc_signal< sc_lv<16> > sub3_val_output_V_int_reg;
    sc_signal< sc_lv<4> > input_ch_idx_int_reg;
    sc_signal< sc_lv<16> > val_output_V_int_reg;
    sc_signal< sc_lv<16> > ap_return_int_reg;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const bool ap_const_boolean_1;
    static const bool ap_const_boolean_0;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<16> ap_const_lv16_0;
    static const sc_lv<32> ap_const_lv32_10;
    static const sc_lv<32> ap_const_lv32_F;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<16> ap_const_lv16_7FFF;
    static const sc_lv<16> ap_const_lv16_8000;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_state1_pp0_stage0_iter0();
    void thread_ap_block_state2_pp0_stage0_iter1();
    void thread_ap_block_state3_pp0_stage0_iter2();
    void thread_ap_return();
    void thread_icmp_ln211_fu_70_p2();
    void thread_lhs_V_1_fu_174_p1();
    void thread_lhs_V_2_fu_260_p1();
    void thread_lhs_V_3_fu_340_p1();
    void thread_lhs_V_fu_84_p1();
    void thread_or_ln340_11_fu_230_p2();
    void thread_or_ln340_12_fu_313_p2();
    void thread_or_ln340_13_fu_398_p2();
    void thread_or_ln340_fu_144_p2();
    void thread_p_Result_10_fu_366_p3();
    void thread_p_Result_4_fu_112_p3();
    void thread_p_Result_5_fu_186_p3();
    void thread_p_Result_6_fu_198_p3();
    void thread_p_Result_9_fu_353_p3();
    void thread_p_Result_s_fu_98_p3();
    void thread_p_Val2_10_fu_332_p3();
    void thread_p_Val2_12_fu_361_p2();
    void thread_p_Val2_3_fu_106_p1();
    void thread_p_Val2_3_fu_106_p2();
    void thread_p_Val2_4_fu_166_p3();
    void thread_p_Val2_6_fu_194_p2();
    void thread_p_Val2_7_fu_252_p3();
    void thread_p_Val2_9_fu_281_p2();
    void thread_p_Val2_s_fu_76_p3();
    void thread_ret_V_1_fu_180_p2();
    void thread_ret_V_2_fu_267_p2();
    void thread_ret_V_3_fu_347_p2();
    void thread_ret_V_fu_92_p2();
    void thread_rhs_V_1_fu_177_p1();
    void thread_rhs_V_2_fu_264_p1();
    void thread_rhs_V_3_fu_344_p1();
    void thread_rhs_V_fu_88_p0();
    void thread_rhs_V_fu_88_p1();
    void thread_select_ln340_10_fu_318_p3();
    void thread_select_ln340_11_fu_404_p3();
    void thread_select_ln340_21_fu_420_p3();
    void thread_select_ln340_9_fu_236_p3();
    void thread_select_ln340_fu_150_p3();
    void thread_select_ln388_10_fu_325_p3();
    void thread_select_ln388_11_fu_412_p3();
    void thread_select_ln388_9_fu_244_p3();
    void thread_select_ln388_fu_158_p3();
    void thread_underflow_1_fu_212_p2();
    void thread_underflow_2_fu_299_p2();
    void thread_underflow_3_fu_380_p2();
    void thread_underflow_fu_126_p2();
    void thread_xor_ln340_10_fu_308_p2();
    void thread_xor_ln340_11_fu_392_p2();
    void thread_xor_ln340_16_fu_132_p2();
    void thread_xor_ln340_17_fu_218_p2();
    void thread_xor_ln340_18_fu_304_p2();
    void thread_xor_ln340_19_fu_386_p2();
    void thread_xor_ln340_9_fu_224_p2();
    void thread_xor_ln340_fu_138_p2();
    void thread_xor_ln786_2_fu_206_p2();
    void thread_xor_ln786_3_fu_294_p2();
    void thread_xor_ln786_4_fu_374_p2();
    void thread_xor_ln786_fu_120_p2();
};

}

using namespace ap_rtl;

#endif
