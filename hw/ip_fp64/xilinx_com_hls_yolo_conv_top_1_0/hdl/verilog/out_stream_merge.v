// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module out_stream_merge (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        out_stream_group_8_V_V_dout,
        out_stream_group_8_V_V_empty_n,
        out_stream_group_8_V_V_read,
        out_stream_group_13_V_V_dout,
        out_stream_group_13_V_V_empty_n,
        out_stream_group_13_V_V_read,
        out_stream_group_14_V_V_dout,
        out_stream_group_14_V_V_empty_n,
        out_stream_group_14_V_V_read,
        out_stream_group_15_V_V_dout,
        out_stream_group_15_V_V_empty_n,
        out_stream_group_15_V_V_read,
        outStream_TREADY,
        ap_ce,
        out_stream_group_0_V_V_dout,
        out_stream_group_0_V_V_empty_n,
        out_stream_group_0_V_V_read,
        out_stream_group_1_V_V_dout,
        out_stream_group_1_V_V_empty_n,
        out_stream_group_1_V_V_read,
        out_stream_group_2_V_V_dout,
        out_stream_group_2_V_V_empty_n,
        out_stream_group_2_V_V_read,
        out_stream_group_3_V_V_dout,
        out_stream_group_3_V_V_empty_n,
        out_stream_group_3_V_V_read,
        out_stream_group_4_V_V_dout,
        out_stream_group_4_V_V_empty_n,
        out_stream_group_4_V_V_read,
        out_stream_group_5_V_V_dout,
        out_stream_group_5_V_V_empty_n,
        out_stream_group_5_V_V_read,
        out_stream_group_6_V_V_dout,
        out_stream_group_6_V_V_empty_n,
        out_stream_group_6_V_V_read,
        out_stream_group_7_V_V_dout,
        out_stream_group_7_V_V_empty_n,
        out_stream_group_7_V_V_read,
        out_stream_group_9_V_V_dout,
        out_stream_group_9_V_V_empty_n,
        out_stream_group_9_V_V_read,
        out_stream_group_10_V_V_dout,
        out_stream_group_10_V_V_empty_n,
        out_stream_group_10_V_V_read,
        out_stream_group_11_V_V_dout,
        out_stream_group_11_V_V_empty_n,
        out_stream_group_11_V_V_read,
        out_stream_group_12_V_V_dout,
        out_stream_group_12_V_V_empty_n,
        out_stream_group_12_V_V_read,
        outStream_TDATA,
        outStream_TVALID,
        outStream_TKEEP,
        outStream_TSTRB,
        outStream_TUSER,
        outStream_TLAST,
        outStream_TID,
        outStream_TDEST,
        curr_input_keep_V,
        curr_input_strb_V,
        curr_input_user_V,
        curr_input_id_V,
        curr_input_dest_V,
        last_V,
        out_stream_group_0_V_V_blk_n,
        out_stream_group_1_V_V_blk_n,
        out_stream_group_2_V_V_blk_n,
        out_stream_group_3_V_V_blk_n,
        out_stream_group_4_V_V_blk_n,
        out_stream_group_5_V_V_blk_n,
        out_stream_group_6_V_V_blk_n,
        out_stream_group_7_V_V_blk_n,
        out_stream_group_8_V_V_blk_n,
        out_stream_group_9_V_V_blk_n,
        out_stream_group_10_V_V_blk_n,
        out_stream_group_11_V_V_blk_n,
        out_stream_group_12_V_V_blk_n,
        out_stream_group_13_V_V_blk_n,
        out_stream_group_14_V_V_blk_n,
        out_stream_group_15_V_V_blk_n,
        outStream_TDATA_blk_n
);

parameter    ap_ST_fsm_pp0_stage0 = 4'd1;
parameter    ap_ST_fsm_pp0_stage1 = 4'd2;
parameter    ap_ST_fsm_pp0_stage2 = 4'd4;
parameter    ap_ST_fsm_pp0_stage3 = 4'd8;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [15:0] out_stream_group_8_V_V_dout;
input   out_stream_group_8_V_V_empty_n;
output   out_stream_group_8_V_V_read;
input  [15:0] out_stream_group_13_V_V_dout;
input   out_stream_group_13_V_V_empty_n;
output   out_stream_group_13_V_V_read;
input  [15:0] out_stream_group_14_V_V_dout;
input   out_stream_group_14_V_V_empty_n;
output   out_stream_group_14_V_V_read;
input  [15:0] out_stream_group_15_V_V_dout;
input   out_stream_group_15_V_V_empty_n;
output   out_stream_group_15_V_V_read;
input   outStream_TREADY;
input   ap_ce;
input  [15:0] out_stream_group_0_V_V_dout;
input   out_stream_group_0_V_V_empty_n;
output   out_stream_group_0_V_V_read;
input  [15:0] out_stream_group_1_V_V_dout;
input   out_stream_group_1_V_V_empty_n;
output   out_stream_group_1_V_V_read;
input  [15:0] out_stream_group_2_V_V_dout;
input   out_stream_group_2_V_V_empty_n;
output   out_stream_group_2_V_V_read;
input  [15:0] out_stream_group_3_V_V_dout;
input   out_stream_group_3_V_V_empty_n;
output   out_stream_group_3_V_V_read;
input  [15:0] out_stream_group_4_V_V_dout;
input   out_stream_group_4_V_V_empty_n;
output   out_stream_group_4_V_V_read;
input  [15:0] out_stream_group_5_V_V_dout;
input   out_stream_group_5_V_V_empty_n;
output   out_stream_group_5_V_V_read;
input  [15:0] out_stream_group_6_V_V_dout;
input   out_stream_group_6_V_V_empty_n;
output   out_stream_group_6_V_V_read;
input  [15:0] out_stream_group_7_V_V_dout;
input   out_stream_group_7_V_V_empty_n;
output   out_stream_group_7_V_V_read;
input  [15:0] out_stream_group_9_V_V_dout;
input   out_stream_group_9_V_V_empty_n;
output   out_stream_group_9_V_V_read;
input  [15:0] out_stream_group_10_V_V_dout;
input   out_stream_group_10_V_V_empty_n;
output   out_stream_group_10_V_V_read;
input  [15:0] out_stream_group_11_V_V_dout;
input   out_stream_group_11_V_V_empty_n;
output   out_stream_group_11_V_V_read;
input  [15:0] out_stream_group_12_V_V_dout;
input   out_stream_group_12_V_V_empty_n;
output   out_stream_group_12_V_V_read;
output  [63:0] outStream_TDATA;
output   outStream_TVALID;
output  [7:0] outStream_TKEEP;
output  [7:0] outStream_TSTRB;
output  [1:0] outStream_TUSER;
output  [0:0] outStream_TLAST;
output  [4:0] outStream_TID;
output  [5:0] outStream_TDEST;
input  [7:0] curr_input_keep_V;
input  [7:0] curr_input_strb_V;
input  [1:0] curr_input_user_V;
input  [4:0] curr_input_id_V;
input  [5:0] curr_input_dest_V;
input  [0:0] last_V;
output   out_stream_group_0_V_V_blk_n;
output   out_stream_group_1_V_V_blk_n;
output   out_stream_group_2_V_V_blk_n;
output   out_stream_group_3_V_V_blk_n;
output   out_stream_group_4_V_V_blk_n;
output   out_stream_group_5_V_V_blk_n;
output   out_stream_group_6_V_V_blk_n;
output   out_stream_group_7_V_V_blk_n;
output   out_stream_group_8_V_V_blk_n;
output   out_stream_group_9_V_V_blk_n;
output   out_stream_group_10_V_V_blk_n;
output   out_stream_group_11_V_V_blk_n;
output   out_stream_group_12_V_V_blk_n;
output   out_stream_group_13_V_V_blk_n;
output   out_stream_group_14_V_V_blk_n;
output   out_stream_group_15_V_V_blk_n;
output   outStream_TDATA_blk_n;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg out_stream_group_8_V_V_read;
reg out_stream_group_13_V_V_read;
reg out_stream_group_14_V_V_read;
reg out_stream_group_15_V_V_read;
reg out_stream_group_0_V_V_read;
reg out_stream_group_1_V_V_read;
reg out_stream_group_2_V_V_read;
reg out_stream_group_3_V_V_read;
reg out_stream_group_4_V_V_read;
reg out_stream_group_5_V_V_read;
reg out_stream_group_6_V_V_read;
reg out_stream_group_7_V_V_read;
reg out_stream_group_9_V_V_read;
reg out_stream_group_10_V_V_read;
reg out_stream_group_11_V_V_read;
reg out_stream_group_12_V_V_read;
reg[63:0] outStream_TDATA;
reg outStream_TVALID;
reg[7:0] outStream_TKEEP;
reg[7:0] outStream_TSTRB;
reg[1:0] outStream_TUSER;
reg[0:0] outStream_TLAST;
reg[4:0] outStream_TID;
reg[5:0] outStream_TDEST;
reg out_stream_group_0_V_V_blk_n;
reg out_stream_group_1_V_V_blk_n;
reg out_stream_group_2_V_V_blk_n;
reg out_stream_group_3_V_V_blk_n;
reg out_stream_group_4_V_V_blk_n;
reg out_stream_group_5_V_V_blk_n;
reg out_stream_group_6_V_V_blk_n;
reg out_stream_group_7_V_V_blk_n;
reg out_stream_group_8_V_V_blk_n;
reg out_stream_group_9_V_V_blk_n;
reg out_stream_group_10_V_V_blk_n;
reg out_stream_group_11_V_V_blk_n;
reg out_stream_group_12_V_V_blk_n;
reg out_stream_group_13_V_V_blk_n;
reg out_stream_group_14_V_V_blk_n;
reg out_stream_group_15_V_V_blk_n;
reg outStream_TDATA_blk_n;

(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage3;
reg   [0:0] tmp_2_reg_908;
reg   [0:0] tmp_3_reg_964;
reg   [0:0] tmp_1_3_reg_968;
reg    ap_predicate_op86_read_state4;
reg   [0:0] tmp_2_3_reg_972;
reg    ap_predicate_op88_read_state4;
reg   [0:0] tmp_3_3_reg_976;
reg    ap_predicate_op90_read_state4;
reg    ap_block_state4_pp0_stage3_iter0;
reg    ap_block_state4_io;
reg    ap_block_pp0_stage3_11001;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_pp0_stage1;
reg   [0:0] tmp_s_reg_876;
reg   [0:0] tmp_1_s_reg_880;
reg   [0:0] tmp_2_s_reg_884;
reg   [0:0] tmp_3_s_reg_888;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_pp0_stage2;
reg   [0:0] tmp_1_reg_892;
reg   [0:0] tmp_1_1_reg_896;
reg   [0:0] tmp_2_1_reg_900;
reg   [0:0] tmp_3_1_reg_904;
wire    ap_block_pp0_stage3;
reg   [0:0] tmp_1_2_reg_912;
reg   [0:0] tmp_2_2_reg_916;
reg   [0:0] tmp_3_2_reg_920;
wire   [0:0] tmp_s_nbreadreq_fu_290_p3;
reg    ap_block_state1_pp0_stage0_iter0;
reg    ap_block_state5_pp0_stage0_iter1;
reg    ap_block_state5_io;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] tmp_1_s_nbreadreq_fu_298_p3;
wire   [0:0] tmp_2_s_nbreadreq_fu_306_p3;
wire   [0:0] tmp_3_s_nbreadreq_fu_314_p3;
wire   [0:0] tmp_1_nbreadreq_fu_322_p3;
wire   [0:0] tmp_1_1_nbreadreq_fu_330_p3;
wire   [0:0] tmp_2_1_nbreadreq_fu_338_p3;
wire   [0:0] tmp_3_1_nbreadreq_fu_346_p3;
wire   [0:0] tmp_2_nbreadreq_fu_354_p3;
wire   [0:0] tmp_1_2_nbreadreq_fu_362_p3;
wire   [0:0] tmp_2_2_nbreadreq_fu_370_p3;
wire   [0:0] tmp_3_2_nbreadreq_fu_378_p3;
reg   [5:0] tmp_dest_V_reg_924;
reg    ap_predicate_op28_read_state2;
reg    ap_predicate_op31_read_state2;
reg    ap_predicate_op34_read_state2;
reg    ap_predicate_op40_read_state2;
reg    ap_predicate_op42_read_state2;
reg    ap_predicate_op44_read_state2;
reg    ap_block_state2_pp0_stage1_iter0;
reg    ap_block_state2_io;
reg    ap_block_pp0_stage1_11001;
reg   [4:0] tmp_id_V_reg_929;
reg   [1:0] tmp_user_V_reg_934;
reg   [7:0] tmp_strb_V_reg_939;
reg   [7:0] tmp_keep_V_reg_944;
wire   [0:0] tmp_3_nbreadreq_fu_489_p3;
wire   [0:0] tmp_1_3_nbreadreq_fu_497_p3;
wire   [0:0] tmp_2_3_nbreadreq_fu_505_p3;
wire   [0:0] tmp_3_3_nbreadreq_fu_513_p3;
reg    ap_predicate_op65_read_state3;
reg    ap_predicate_op67_read_state3;
reg    ap_predicate_op69_read_state3;
reg    ap_block_state3_pp0_stage2_iter0;
reg    ap_block_state3_io;
reg    ap_block_pp0_stage2_11001;
reg   [0:0] tmp_last_V_reg_995;
reg    ap_enable_reg_pp0_iter0_reg;
reg    ap_block_pp0_stage0_subdone;
reg    ap_block_pp0_stage3_subdone;
reg   [7:0] ap_port_reg_curr_input_keep_V;
reg   [7:0] ap_port_reg_curr_input_strb_V;
reg   [1:0] ap_port_reg_curr_input_user_V;
reg   [4:0] ap_port_reg_curr_input_id_V;
reg   [5:0] ap_port_reg_curr_input_dest_V;
reg   [0:0] ap_port_reg_last_V;
reg   [15:0] ap_phi_mux_curr_output_0_1_2_0_phi_fu_585_p4;
wire   [15:0] ap_phi_reg_pp0_iter0_curr_output_0_1_2_0_reg_581;
reg   [15:0] ap_phi_mux_curr_output_0_2_2_0_phi_fu_598_p4;
wire   [15:0] ap_phi_reg_pp0_iter0_curr_output_0_2_2_0_reg_594;
reg   [15:0] ap_phi_mux_curr_output_0_3_2_0_phi_fu_611_p4;
wire   [15:0] ap_phi_reg_pp0_iter0_curr_output_0_3_2_0_reg_607;
reg   [15:0] ap_phi_reg_pp0_iter0_curr_output_0_2_4_0_reg_620;
reg   [15:0] ap_phi_reg_pp0_iter0_curr_output_0_1_4_0_reg_633;
reg   [15:0] ap_phi_reg_pp0_iter0_curr_output_0_3_4_0_reg_646;
reg   [15:0] ap_phi_mux_curr_output_0_1_2_1_phi_fu_662_p4;
reg   [15:0] ap_phi_reg_pp0_iter0_curr_output_0_1_2_1_reg_659;
reg   [15:0] ap_phi_mux_curr_output_0_2_2_1_phi_fu_673_p4;
reg   [15:0] ap_phi_reg_pp0_iter0_curr_output_0_2_2_1_reg_670;
reg   [15:0] ap_phi_mux_curr_output_0_3_2_1_phi_fu_684_p4;
reg   [15:0] ap_phi_reg_pp0_iter0_curr_output_0_3_2_1_reg_681;
reg   [15:0] ap_phi_reg_pp0_iter0_curr_output_0_2_4_1_reg_692;
reg   [15:0] ap_phi_reg_pp0_iter0_curr_output_0_1_4_1_reg_704;
reg   [15:0] ap_phi_reg_pp0_iter0_curr_output_0_3_4_1_reg_716;
reg   [15:0] ap_phi_mux_curr_output_0_1_2_2_phi_fu_731_p4;
reg   [15:0] ap_phi_reg_pp0_iter0_curr_output_0_1_2_2_reg_728;
reg   [15:0] ap_phi_mux_curr_output_0_2_2_2_phi_fu_742_p4;
reg   [15:0] ap_phi_reg_pp0_iter0_curr_output_0_2_2_2_reg_739;
reg   [15:0] ap_phi_mux_curr_output_0_3_2_2_phi_fu_753_p4;
reg   [15:0] ap_phi_reg_pp0_iter0_curr_output_0_3_2_2_reg_750;
wire   [15:0] ap_phi_reg_pp0_iter0_curr_output_0_2_4_2_reg_761;
reg   [15:0] ap_phi_reg_pp0_iter1_curr_output_0_2_4_2_reg_761;
wire   [15:0] ap_phi_reg_pp0_iter0_curr_output_0_1_4_2_reg_772;
reg   [15:0] ap_phi_reg_pp0_iter1_curr_output_0_1_4_2_reg_772;
wire   [15:0] ap_phi_reg_pp0_iter0_curr_output_0_3_4_2_reg_783;
reg   [15:0] ap_phi_reg_pp0_iter1_curr_output_0_3_4_2_reg_783;
reg   [15:0] ap_phi_mux_curr_output_0_1_2_3_phi_fu_797_p4;
wire   [15:0] ap_phi_reg_pp0_iter0_curr_output_0_1_2_3_reg_794;
reg   [15:0] ap_phi_reg_pp0_iter1_curr_output_0_1_2_3_reg_794;
reg   [15:0] ap_phi_mux_curr_output_0_2_2_3_phi_fu_807_p4;
wire   [15:0] ap_phi_reg_pp0_iter0_curr_output_0_2_2_3_reg_804;
reg   [15:0] ap_phi_reg_pp0_iter1_curr_output_0_2_2_3_reg_804;
reg   [15:0] ap_phi_mux_curr_output_0_3_2_3_phi_fu_817_p4;
wire   [15:0] ap_phi_reg_pp0_iter0_curr_output_0_3_2_3_reg_814;
reg   [15:0] ap_phi_reg_pp0_iter1_curr_output_0_3_2_3_reg_814;
wire   [63:0] tmp_data_fu_824_p5;
reg    ap_block_pp0_stage1_01001;
wire   [63:0] tmp_data_1_fu_837_p5;
reg    ap_block_pp0_stage2_01001;
wire   [63:0] tmp_data_2_fu_850_p5;
reg    ap_block_pp0_stage3_01001;
wire   [63:0] tmp_data_3_fu_863_p5;
reg    ap_block_pp0_stage0_01001;
reg   [3:0] ap_NS_fsm;
reg    ap_idle_pp0_0to0;
reg    ap_reset_idle_pp0;
reg    ap_idle_pp0_1to1;
reg    ap_block_pp0_stage1_subdone;
reg    ap_block_pp0_stage2_subdone;
wire    ap_enable_pp0;
reg    ap_condition_499;
reg    ap_condition_109;
reg    ap_condition_736;
reg    ap_condition_740;
reg    ap_condition_744;
reg    ap_condition_749;

// power-on initialization
initial begin
#0 ap_CS_fsm = 4'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_499)) begin
        if ((tmp_1_reg_892 == 1'd0)) begin
            ap_phi_reg_pp0_iter0_curr_output_0_1_4_1_reg_704 <= ap_phi_reg_pp0_iter0_curr_output_0_1_4_0_reg_633;
        end else if ((tmp_1_reg_892 == 1'd1)) begin
            ap_phi_reg_pp0_iter0_curr_output_0_1_4_1_reg_704 <= ap_phi_mux_curr_output_0_1_2_1_phi_fu_662_p4;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_499)) begin
        if ((tmp_1_reg_892 == 1'd0)) begin
            ap_phi_reg_pp0_iter0_curr_output_0_2_4_1_reg_692 <= ap_phi_reg_pp0_iter0_curr_output_0_2_4_0_reg_620;
        end else if ((tmp_1_reg_892 == 1'd1)) begin
            ap_phi_reg_pp0_iter0_curr_output_0_2_4_1_reg_692 <= ap_phi_mux_curr_output_0_2_2_1_phi_fu_673_p4;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_499)) begin
        if ((tmp_1_reg_892 == 1'd0)) begin
            ap_phi_reg_pp0_iter0_curr_output_0_3_4_1_reg_716 <= ap_phi_reg_pp0_iter0_curr_output_0_3_4_0_reg_646;
        end else if ((tmp_1_reg_892 == 1'd1)) begin
            ap_phi_reg_pp0_iter0_curr_output_0_3_4_1_reg_716 <= ap_phi_mux_curr_output_0_3_2_1_phi_fu_684_p4;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_109)) begin
        if (((tmp_1_3_reg_968 == 1'd1) & (tmp_3_reg_964 == 1'd1))) begin
            ap_phi_reg_pp0_iter1_curr_output_0_1_2_3_reg_794 <= out_stream_group_13_V_V_dout;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_curr_output_0_1_2_3_reg_794 <= ap_phi_reg_pp0_iter0_curr_output_0_1_2_3_reg_794;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_109)) begin
        if ((tmp_2_reg_908 == 1'd0)) begin
            ap_phi_reg_pp0_iter1_curr_output_0_1_4_2_reg_772 <= ap_phi_reg_pp0_iter0_curr_output_0_1_4_1_reg_704;
        end else if ((tmp_2_reg_908 == 1'd1)) begin
            ap_phi_reg_pp0_iter1_curr_output_0_1_4_2_reg_772 <= ap_phi_mux_curr_output_0_1_2_2_phi_fu_731_p4;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_curr_output_0_1_4_2_reg_772 <= ap_phi_reg_pp0_iter0_curr_output_0_1_4_2_reg_772;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_109)) begin
        if (((tmp_2_3_reg_972 == 1'd1) & (tmp_3_reg_964 == 1'd1))) begin
            ap_phi_reg_pp0_iter1_curr_output_0_2_2_3_reg_804 <= out_stream_group_14_V_V_dout;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_curr_output_0_2_2_3_reg_804 <= ap_phi_reg_pp0_iter0_curr_output_0_2_2_3_reg_804;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_109)) begin
        if ((tmp_2_reg_908 == 1'd0)) begin
            ap_phi_reg_pp0_iter1_curr_output_0_2_4_2_reg_761 <= ap_phi_reg_pp0_iter0_curr_output_0_2_4_1_reg_692;
        end else if ((tmp_2_reg_908 == 1'd1)) begin
            ap_phi_reg_pp0_iter1_curr_output_0_2_4_2_reg_761 <= ap_phi_mux_curr_output_0_2_2_2_phi_fu_742_p4;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_curr_output_0_2_4_2_reg_761 <= ap_phi_reg_pp0_iter0_curr_output_0_2_4_2_reg_761;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_109)) begin
        if (((tmp_3_3_reg_976 == 1'd1) & (tmp_3_reg_964 == 1'd1))) begin
            ap_phi_reg_pp0_iter1_curr_output_0_3_2_3_reg_814 <= out_stream_group_15_V_V_dout;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_curr_output_0_3_2_3_reg_814 <= ap_phi_reg_pp0_iter0_curr_output_0_3_2_3_reg_814;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_109)) begin
        if ((tmp_2_reg_908 == 1'd0)) begin
            ap_phi_reg_pp0_iter1_curr_output_0_3_4_2_reg_783 <= ap_phi_reg_pp0_iter0_curr_output_0_3_4_1_reg_716;
        end else if ((tmp_2_reg_908 == 1'd1)) begin
            ap_phi_reg_pp0_iter1_curr_output_0_3_4_2_reg_783 <= ap_phi_mux_curr_output_0_3_2_2_phi_fu_753_p4;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_curr_output_0_3_4_2_reg_783 <= ap_phi_reg_pp0_iter0_curr_output_0_3_4_2_reg_783;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_1_1_reg_896 == 1'd1) & (tmp_1_reg_892 == 1'd1) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_ce))) begin
        ap_phi_reg_pp0_iter0_curr_output_0_1_2_1_reg_659 <= out_stream_group_5_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_1_2_reg_912 == 1'd1) & (tmp_2_reg_908 == 1'd1) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b1 == ap_ce))) begin
        ap_phi_reg_pp0_iter0_curr_output_0_1_2_2_reg_728 <= out_stream_group_9_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_s_reg_876 == 1'd1) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_ce))) begin
        ap_phi_reg_pp0_iter0_curr_output_0_1_4_0_reg_633 <= ap_phi_mux_curr_output_0_1_2_0_phi_fu_585_p4;
        ap_phi_reg_pp0_iter0_curr_output_0_2_4_0_reg_620 <= ap_phi_mux_curr_output_0_2_2_0_phi_fu_598_p4;
        ap_phi_reg_pp0_iter0_curr_output_0_3_4_0_reg_646 <= ap_phi_mux_curr_output_0_3_2_0_phi_fu_611_p4;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_2_1_reg_900 == 1'd1) & (tmp_1_reg_892 == 1'd1) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_ce))) begin
        ap_phi_reg_pp0_iter0_curr_output_0_2_2_1_reg_670 <= out_stream_group_6_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_2_2_reg_916 == 1'd1) & (tmp_2_reg_908 == 1'd1) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b1 == ap_ce))) begin
        ap_phi_reg_pp0_iter0_curr_output_0_2_2_2_reg_739 <= out_stream_group_10_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_3_1_reg_904 == 1'd1) & (tmp_1_reg_892 == 1'd1) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_ce))) begin
        ap_phi_reg_pp0_iter0_curr_output_0_3_2_1_reg_681 <= out_stream_group_7_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_3_2_reg_920 == 1'd1) & (tmp_2_reg_908 == 1'd1) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b1 == ap_ce))) begin
        ap_phi_reg_pp0_iter0_curr_output_0_3_2_2_reg_750 <= out_stream_group_11_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_ce))) begin
        ap_port_reg_curr_input_dest_V <= curr_input_dest_V;
        ap_port_reg_curr_input_id_V <= curr_input_id_V;
        ap_port_reg_curr_input_keep_V <= curr_input_keep_V;
        ap_port_reg_curr_input_strb_V <= curr_input_strb_V;
        ap_port_reg_curr_input_user_V <= curr_input_user_V;
        ap_port_reg_last_V <= last_V;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_1_nbreadreq_fu_322_p3 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_ce))) begin
        tmp_1_1_reg_896 <= tmp_1_1_nbreadreq_fu_330_p3;
        tmp_2_1_reg_900 <= tmp_2_1_nbreadreq_fu_338_p3;
        tmp_3_1_reg_904 <= tmp_3_1_nbreadreq_fu_346_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_2_nbreadreq_fu_354_p3 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_ce))) begin
        tmp_1_2_reg_912 <= tmp_1_2_nbreadreq_fu_362_p3;
        tmp_2_2_reg_916 <= tmp_2_2_nbreadreq_fu_370_p3;
        tmp_3_2_reg_920 <= tmp_3_2_nbreadreq_fu_378_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_3_nbreadreq_fu_489_p3 == 1'd1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_ce))) begin
        tmp_1_3_reg_968 <= tmp_1_3_nbreadreq_fu_497_p3;
        tmp_2_3_reg_972 <= tmp_2_3_nbreadreq_fu_505_p3;
        tmp_3_3_reg_976 <= tmp_3_3_nbreadreq_fu_513_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_ce))) begin
        tmp_1_reg_892 <= tmp_1_nbreadreq_fu_322_p3;
        tmp_2_reg_908 <= tmp_2_nbreadreq_fu_354_p3;
        tmp_s_reg_876 <= tmp_s_nbreadreq_fu_290_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_s_nbreadreq_fu_290_p3 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_ce))) begin
        tmp_1_s_reg_880 <= tmp_1_s_nbreadreq_fu_298_p3;
        tmp_2_s_reg_884 <= tmp_2_s_nbreadreq_fu_306_p3;
        tmp_3_s_reg_888 <= tmp_3_s_nbreadreq_fu_314_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_ce))) begin
        tmp_3_reg_964 <= tmp_3_nbreadreq_fu_489_p3;
        tmp_dest_V_reg_924 <= ap_port_reg_curr_input_dest_V;
        tmp_id_V_reg_929 <= ap_port_reg_curr_input_id_V;
        tmp_keep_V_reg_944 <= ap_port_reg_curr_input_keep_V;
        tmp_strb_V_reg_939 <= ap_port_reg_curr_input_strb_V;
        tmp_user_V_reg_934 <= ap_port_reg_curr_input_user_V;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        tmp_last_V_reg_995 <= ap_port_reg_last_V;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_ce)) | ((ap_start == 1'b0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b0)) begin
        ap_idle_pp0_0to0 = 1'b1;
    end else begin
        ap_idle_pp0_0to0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b0)) begin
        ap_idle_pp0_1to1 = 1'b1;
    end else begin
        ap_idle_pp0_1to1 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_1_s_reg_880 == 1'd1) & (tmp_s_reg_876 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        ap_phi_mux_curr_output_0_1_2_0_phi_fu_585_p4 = out_stream_group_1_V_V_dout;
    end else begin
        ap_phi_mux_curr_output_0_1_2_0_phi_fu_585_p4 = ap_phi_reg_pp0_iter0_curr_output_0_1_2_0_reg_581;
    end
end

always @ (*) begin
    if (((tmp_1_reg_892 == 1'd1) & (tmp_1_1_reg_896 == 1'd0) & (1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_phi_mux_curr_output_0_1_2_1_phi_fu_662_p4 = ap_phi_reg_pp0_iter0_curr_output_0_1_4_0_reg_633;
    end else begin
        ap_phi_mux_curr_output_0_1_2_1_phi_fu_662_p4 = ap_phi_reg_pp0_iter0_curr_output_0_1_2_1_reg_659;
    end
end

always @ (*) begin
    if (((tmp_2_reg_908 == 1'd1) & (tmp_1_2_reg_912 == 1'd0) & (1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        ap_phi_mux_curr_output_0_1_2_2_phi_fu_731_p4 = ap_phi_reg_pp0_iter0_curr_output_0_1_4_1_reg_704;
    end else begin
        ap_phi_mux_curr_output_0_1_2_2_phi_fu_731_p4 = ap_phi_reg_pp0_iter0_curr_output_0_1_2_2_reg_728;
    end
end

always @ (*) begin
    if (((tmp_1_3_reg_968 == 1'd0) & (tmp_3_reg_964 == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_curr_output_0_1_2_3_phi_fu_797_p4 = ap_phi_reg_pp0_iter1_curr_output_0_1_4_2_reg_772;
    end else begin
        ap_phi_mux_curr_output_0_1_2_3_phi_fu_797_p4 = ap_phi_reg_pp0_iter1_curr_output_0_1_2_3_reg_794;
    end
end

always @ (*) begin
    if (((tmp_2_s_reg_884 == 1'd1) & (tmp_s_reg_876 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        ap_phi_mux_curr_output_0_2_2_0_phi_fu_598_p4 = out_stream_group_2_V_V_dout;
    end else begin
        ap_phi_mux_curr_output_0_2_2_0_phi_fu_598_p4 = ap_phi_reg_pp0_iter0_curr_output_0_2_2_0_reg_594;
    end
end

always @ (*) begin
    if (((tmp_1_reg_892 == 1'd1) & (tmp_2_1_reg_900 == 1'd0) & (1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_phi_mux_curr_output_0_2_2_1_phi_fu_673_p4 = ap_phi_reg_pp0_iter0_curr_output_0_2_4_0_reg_620;
    end else begin
        ap_phi_mux_curr_output_0_2_2_1_phi_fu_673_p4 = ap_phi_reg_pp0_iter0_curr_output_0_2_2_1_reg_670;
    end
end

always @ (*) begin
    if (((tmp_2_reg_908 == 1'd1) & (tmp_2_2_reg_916 == 1'd0) & (1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        ap_phi_mux_curr_output_0_2_2_2_phi_fu_742_p4 = ap_phi_reg_pp0_iter0_curr_output_0_2_4_1_reg_692;
    end else begin
        ap_phi_mux_curr_output_0_2_2_2_phi_fu_742_p4 = ap_phi_reg_pp0_iter0_curr_output_0_2_2_2_reg_739;
    end
end

always @ (*) begin
    if (((tmp_2_3_reg_972 == 1'd0) & (tmp_3_reg_964 == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_curr_output_0_2_2_3_phi_fu_807_p4 = ap_phi_reg_pp0_iter1_curr_output_0_2_4_2_reg_761;
    end else begin
        ap_phi_mux_curr_output_0_2_2_3_phi_fu_807_p4 = ap_phi_reg_pp0_iter1_curr_output_0_2_2_3_reg_804;
    end
end

always @ (*) begin
    if (((tmp_3_s_reg_888 == 1'd1) & (tmp_s_reg_876 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        ap_phi_mux_curr_output_0_3_2_0_phi_fu_611_p4 = out_stream_group_3_V_V_dout;
    end else begin
        ap_phi_mux_curr_output_0_3_2_0_phi_fu_611_p4 = ap_phi_reg_pp0_iter0_curr_output_0_3_2_0_reg_607;
    end
end

always @ (*) begin
    if (((tmp_1_reg_892 == 1'd1) & (tmp_3_1_reg_904 == 1'd0) & (1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_phi_mux_curr_output_0_3_2_1_phi_fu_684_p4 = ap_phi_reg_pp0_iter0_curr_output_0_3_4_0_reg_646;
    end else begin
        ap_phi_mux_curr_output_0_3_2_1_phi_fu_684_p4 = ap_phi_reg_pp0_iter0_curr_output_0_3_2_1_reg_681;
    end
end

always @ (*) begin
    if (((tmp_2_reg_908 == 1'd1) & (tmp_3_2_reg_920 == 1'd0) & (1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        ap_phi_mux_curr_output_0_3_2_2_phi_fu_753_p4 = ap_phi_reg_pp0_iter0_curr_output_0_3_4_1_reg_716;
    end else begin
        ap_phi_mux_curr_output_0_3_2_2_phi_fu_753_p4 = ap_phi_reg_pp0_iter0_curr_output_0_3_2_2_reg_750;
    end
end

always @ (*) begin
    if (((tmp_3_3_reg_976 == 1'd0) & (tmp_3_reg_964 == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_curr_output_0_3_2_3_phi_fu_817_p4 = ap_phi_reg_pp0_iter1_curr_output_0_3_4_2_reg_783;
    end else begin
        ap_phi_mux_curr_output_0_3_2_3_phi_fu_817_p4 = ap_phi_reg_pp0_iter1_curr_output_0_3_2_3_reg_814;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to0 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_ce)) begin
        if ((1'b1 == ap_condition_749)) begin
            outStream_TDATA = tmp_data_3_fu_863_p5;
        end else if ((1'b1 == ap_condition_744)) begin
            outStream_TDATA = tmp_data_2_fu_850_p5;
        end else if ((1'b1 == ap_condition_740)) begin
            outStream_TDATA = tmp_data_1_fu_837_p5;
        end else if ((1'b1 == ap_condition_736)) begin
            outStream_TDATA = tmp_data_fu_824_p5;
        end else begin
            outStream_TDATA = 'bx;
        end
    end else begin
        outStream_TDATA = 'bx;
    end
end

always @ (*) begin
    if ((((tmp_2_reg_908 == 1'd1) & (1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((tmp_1_reg_892 == 1'd1) & (1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((tmp_s_reg_876 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1)) | ((tmp_3_reg_964 == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        outStream_TDATA_blk_n = outStream_TREADY;
    end else begin
        outStream_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage3_01001) & (tmp_2_reg_908 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_ce)) | ((1'b0 == ap_block_pp0_stage2_01001) & (tmp_1_reg_892 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b1 == ap_ce)) | ((1'b0 == ap_block_pp0_stage0_01001) & (tmp_3_reg_964 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_ce)))) begin
        outStream_TDEST = tmp_dest_V_reg_924;
    end else if (((1'b0 == ap_block_pp0_stage1_01001) & (tmp_s_reg_876 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_ce))) begin
        outStream_TDEST = ap_port_reg_curr_input_dest_V;
    end else begin
        outStream_TDEST = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage3_01001) & (tmp_2_reg_908 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_ce)) | ((1'b0 == ap_block_pp0_stage2_01001) & (tmp_1_reg_892 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b1 == ap_ce)) | ((1'b0 == ap_block_pp0_stage0_01001) & (tmp_3_reg_964 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_ce)))) begin
        outStream_TID = tmp_id_V_reg_929;
    end else if (((1'b0 == ap_block_pp0_stage1_01001) & (tmp_s_reg_876 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_ce))) begin
        outStream_TID = ap_port_reg_curr_input_id_V;
    end else begin
        outStream_TID = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage3_01001) & (tmp_2_reg_908 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_ce)) | ((1'b0 == ap_block_pp0_stage2_01001) & (tmp_1_reg_892 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b1 == ap_ce)) | ((1'b0 == ap_block_pp0_stage0_01001) & (tmp_3_reg_964 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_ce)))) begin
        outStream_TKEEP = tmp_keep_V_reg_944;
    end else if (((1'b0 == ap_block_pp0_stage1_01001) & (tmp_s_reg_876 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_ce))) begin
        outStream_TKEEP = ap_port_reg_curr_input_keep_V;
    end else begin
        outStream_TKEEP = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_01001) & (tmp_3_reg_964 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_ce))) begin
        outStream_TLAST = tmp_last_V_reg_995;
    end else if ((((1'b0 == ap_block_pp0_stage3_01001) & (tmp_2_reg_908 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_ce)) | ((1'b0 == ap_block_pp0_stage2_01001) & (tmp_1_reg_892 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b1 == ap_ce)) | ((1'b0 == ap_block_pp0_stage1_01001) & (tmp_s_reg_876 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_ce)))) begin
        outStream_TLAST = 1'd0;
    end else begin
        outStream_TLAST = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage3_01001) & (tmp_2_reg_908 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_ce)) | ((1'b0 == ap_block_pp0_stage2_01001) & (tmp_1_reg_892 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b1 == ap_ce)) | ((1'b0 == ap_block_pp0_stage0_01001) & (tmp_3_reg_964 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_ce)))) begin
        outStream_TSTRB = tmp_strb_V_reg_939;
    end else if (((1'b0 == ap_block_pp0_stage1_01001) & (tmp_s_reg_876 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_ce))) begin
        outStream_TSTRB = ap_port_reg_curr_input_strb_V;
    end else begin
        outStream_TSTRB = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage3_01001) & (tmp_2_reg_908 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_ce)) | ((1'b0 == ap_block_pp0_stage2_01001) & (tmp_1_reg_892 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b1 == ap_ce)) | ((1'b0 == ap_block_pp0_stage0_01001) & (tmp_3_reg_964 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_ce)))) begin
        outStream_TUSER = tmp_user_V_reg_934;
    end else if (((1'b0 == ap_block_pp0_stage1_01001) & (tmp_s_reg_876 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_ce))) begin
        outStream_TUSER = ap_port_reg_curr_input_user_V;
    end else begin
        outStream_TUSER = 'bx;
    end
end

always @ (*) begin
    if ((((tmp_2_reg_908 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage3_11001)) | ((tmp_1_reg_892 == 1'd1) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b1 == ap_ce)) | ((tmp_s_reg_876 == 1'd1) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_ce)) | ((tmp_3_reg_964 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_ce)))) begin
        outStream_TVALID = 1'b1;
    end else begin
        outStream_TVALID = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_s_reg_876 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        out_stream_group_0_V_V_blk_n = out_stream_group_0_V_V_empty_n;
    end else begin
        out_stream_group_0_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((tmp_s_reg_876 == 1'd1) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_ce))) begin
        out_stream_group_0_V_V_read = 1'b1;
    end else begin
        out_stream_group_0_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_2_2_reg_916 == 1'd1) & (tmp_2_reg_908 == 1'd1) & (1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        out_stream_group_10_V_V_blk_n = out_stream_group_10_V_V_empty_n;
    end else begin
        out_stream_group_10_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_predicate_op67_read_state3 == 1'b1) & (1'b1 == ap_ce))) begin
        out_stream_group_10_V_V_read = 1'b1;
    end else begin
        out_stream_group_10_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_3_2_reg_920 == 1'd1) & (tmp_2_reg_908 == 1'd1) & (1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        out_stream_group_11_V_V_blk_n = out_stream_group_11_V_V_empty_n;
    end else begin
        out_stream_group_11_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_predicate_op69_read_state3 == 1'b1) & (1'b1 == ap_ce))) begin
        out_stream_group_11_V_V_read = 1'b1;
    end else begin
        out_stream_group_11_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_3_reg_964 == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        out_stream_group_12_V_V_blk_n = out_stream_group_12_V_V_empty_n;
    end else begin
        out_stream_group_12_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((tmp_3_reg_964 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_ce))) begin
        out_stream_group_12_V_V_read = 1'b1;
    end else begin
        out_stream_group_12_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op86_read_state4 == 1'b1))) begin
        out_stream_group_13_V_V_blk_n = out_stream_group_13_V_V_empty_n;
    end else begin
        out_stream_group_13_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op86_read_state4 == 1'b1) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        out_stream_group_13_V_V_read = 1'b1;
    end else begin
        out_stream_group_13_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op88_read_state4 == 1'b1))) begin
        out_stream_group_14_V_V_blk_n = out_stream_group_14_V_V_empty_n;
    end else begin
        out_stream_group_14_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op88_read_state4 == 1'b1) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        out_stream_group_14_V_V_read = 1'b1;
    end else begin
        out_stream_group_14_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op90_read_state4 == 1'b1))) begin
        out_stream_group_15_V_V_blk_n = out_stream_group_15_V_V_empty_n;
    end else begin
        out_stream_group_15_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op90_read_state4 == 1'b1) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        out_stream_group_15_V_V_read = 1'b1;
    end else begin
        out_stream_group_15_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_1_s_reg_880 == 1'd1) & (tmp_s_reg_876 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        out_stream_group_1_V_V_blk_n = out_stream_group_1_V_V_empty_n;
    end else begin
        out_stream_group_1_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_predicate_op28_read_state2 == 1'b1) & (1'b1 == ap_ce))) begin
        out_stream_group_1_V_V_read = 1'b1;
    end else begin
        out_stream_group_1_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_2_s_reg_884 == 1'd1) & (tmp_s_reg_876 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        out_stream_group_2_V_V_blk_n = out_stream_group_2_V_V_empty_n;
    end else begin
        out_stream_group_2_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_predicate_op31_read_state2 == 1'b1) & (1'b1 == ap_ce))) begin
        out_stream_group_2_V_V_read = 1'b1;
    end else begin
        out_stream_group_2_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_3_s_reg_888 == 1'd1) & (tmp_s_reg_876 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        out_stream_group_3_V_V_blk_n = out_stream_group_3_V_V_empty_n;
    end else begin
        out_stream_group_3_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_predicate_op34_read_state2 == 1'b1) & (1'b1 == ap_ce))) begin
        out_stream_group_3_V_V_read = 1'b1;
    end else begin
        out_stream_group_3_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_1_reg_892 == 1'd1) & (1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        out_stream_group_4_V_V_blk_n = out_stream_group_4_V_V_empty_n;
    end else begin
        out_stream_group_4_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((tmp_1_reg_892 == 1'd1) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b1 == ap_ce))) begin
        out_stream_group_4_V_V_read = 1'b1;
    end else begin
        out_stream_group_4_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_1_1_reg_896 == 1'd1) & (tmp_1_reg_892 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        out_stream_group_5_V_V_blk_n = out_stream_group_5_V_V_empty_n;
    end else begin
        out_stream_group_5_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_predicate_op40_read_state2 == 1'b1) & (1'b1 == ap_ce))) begin
        out_stream_group_5_V_V_read = 1'b1;
    end else begin
        out_stream_group_5_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_2_1_reg_900 == 1'd1) & (tmp_1_reg_892 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        out_stream_group_6_V_V_blk_n = out_stream_group_6_V_V_empty_n;
    end else begin
        out_stream_group_6_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_predicate_op42_read_state2 == 1'b1) & (1'b1 == ap_ce))) begin
        out_stream_group_6_V_V_read = 1'b1;
    end else begin
        out_stream_group_6_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_3_1_reg_904 == 1'd1) & (tmp_1_reg_892 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        out_stream_group_7_V_V_blk_n = out_stream_group_7_V_V_empty_n;
    end else begin
        out_stream_group_7_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_predicate_op44_read_state2 == 1'b1) & (1'b1 == ap_ce))) begin
        out_stream_group_7_V_V_read = 1'b1;
    end else begin
        out_stream_group_7_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_2_reg_908 == 1'd1) & (1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        out_stream_group_8_V_V_blk_n = out_stream_group_8_V_V_empty_n;
    end else begin
        out_stream_group_8_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((tmp_2_reg_908 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        out_stream_group_8_V_V_read = 1'b1;
    end else begin
        out_stream_group_8_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_1_2_reg_912 == 1'd1) & (tmp_2_reg_908 == 1'd1) & (1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        out_stream_group_9_V_V_blk_n = out_stream_group_9_V_V_empty_n;
    end else begin
        out_stream_group_9_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_predicate_op65_read_state3 == 1'b1) & (1'b1 == ap_ce))) begin
        out_stream_group_9_V_V_read = 1'b1;
    end else begin
        out_stream_group_9_V_V_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start == 1'b0) & (ap_idle_pp0_1to1 == 1'b1)) & (ap_reset_idle_pp0 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_reset_idle_pp0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((tmp_3_reg_964 == 1'd1) & (out_stream_group_12_V_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((ap_start == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((ap_enable_reg_pp0_iter1 == 1'b1) & ((1'b1 == ap_block_state5_io) | ((tmp_3_reg_964 == 1'd1) & (out_stream_group_12_V_V_empty_n == 1'b0)))) | ((ap_start == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((1'b0 == ap_ce) | ((ap_enable_reg_pp0_iter1 == 1'b1) & ((1'b1 == ap_block_state5_io) | ((tmp_3_reg_964 == 1'd1) & (out_stream_group_12_V_V_empty_n == 1'b0)))) | ((ap_start == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)));
end

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage1_01001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (((out_stream_group_7_V_V_empty_n == 1'b0) & (ap_predicate_op44_read_state2 == 1'b1)) | ((out_stream_group_6_V_V_empty_n == 1'b0) & (ap_predicate_op42_read_state2 == 1'b1)) | ((out_stream_group_5_V_V_empty_n == 1'b0) & (ap_predicate_op40_read_state2 == 1'b1)) | ((out_stream_group_3_V_V_empty_n == 1'b0) & (ap_predicate_op34_read_state2 == 1'b1)) | ((out_stream_group_2_V_V_empty_n == 1'b0) & (ap_predicate_op31_read_state2 == 1'b1)) | ((out_stream_group_1_V_V_empty_n == 1'b0) & (ap_predicate_op28_read_state2 == 1'b1)) | ((tmp_s_reg_876 == 1'd1) & (out_stream_group_0_V_V_empty_n == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage1_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state2_io) | ((out_stream_group_7_V_V_empty_n == 1'b0) & (ap_predicate_op44_read_state2 == 1'b1)) | ((out_stream_group_6_V_V_empty_n == 1'b0) & (ap_predicate_op42_read_state2 == 1'b1)) | ((out_stream_group_5_V_V_empty_n == 1'b0) & (ap_predicate_op40_read_state2 == 1'b1)) | ((out_stream_group_3_V_V_empty_n == 1'b0) & (ap_predicate_op34_read_state2 == 1'b1)) | ((out_stream_group_2_V_V_empty_n == 1'b0) & (ap_predicate_op31_read_state2 == 1'b1)) | ((out_stream_group_1_V_V_empty_n == 1'b0) & (ap_predicate_op28_read_state2 == 1'b1)) | ((tmp_s_reg_876 == 1'd1) & (out_stream_group_0_V_V_empty_n == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage1_subdone = ((1'b0 == ap_ce) | ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state2_io) | ((out_stream_group_7_V_V_empty_n == 1'b0) & (ap_predicate_op44_read_state2 == 1'b1)) | ((out_stream_group_6_V_V_empty_n == 1'b0) & (ap_predicate_op42_read_state2 == 1'b1)) | ((out_stream_group_5_V_V_empty_n == 1'b0) & (ap_predicate_op40_read_state2 == 1'b1)) | ((out_stream_group_3_V_V_empty_n == 1'b0) & (ap_predicate_op34_read_state2 == 1'b1)) | ((out_stream_group_2_V_V_empty_n == 1'b0) & (ap_predicate_op31_read_state2 == 1'b1)) | ((out_stream_group_1_V_V_empty_n == 1'b0) & (ap_predicate_op28_read_state2 == 1'b1)) | ((tmp_s_reg_876 == 1'd1) & (out_stream_group_0_V_V_empty_n == 1'b0)))));
end

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage2_01001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (((out_stream_group_11_V_V_empty_n == 1'b0) & (ap_predicate_op69_read_state3 == 1'b1)) | ((out_stream_group_10_V_V_empty_n == 1'b0) & (ap_predicate_op67_read_state3 == 1'b1)) | ((out_stream_group_9_V_V_empty_n == 1'b0) & (ap_predicate_op65_read_state3 == 1'b1)) | ((tmp_1_reg_892 == 1'd1) & (out_stream_group_4_V_V_empty_n == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage2_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state3_io) | ((out_stream_group_11_V_V_empty_n == 1'b0) & (ap_predicate_op69_read_state3 == 1'b1)) | ((out_stream_group_10_V_V_empty_n == 1'b0) & (ap_predicate_op67_read_state3 == 1'b1)) | ((out_stream_group_9_V_V_empty_n == 1'b0) & (ap_predicate_op65_read_state3 == 1'b1)) | ((tmp_1_reg_892 == 1'd1) & (out_stream_group_4_V_V_empty_n == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage2_subdone = ((1'b0 == ap_ce) | ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state3_io) | ((out_stream_group_11_V_V_empty_n == 1'b0) & (ap_predicate_op69_read_state3 == 1'b1)) | ((out_stream_group_10_V_V_empty_n == 1'b0) & (ap_predicate_op67_read_state3 == 1'b1)) | ((out_stream_group_9_V_V_empty_n == 1'b0) & (ap_predicate_op65_read_state3 == 1'b1)) | ((tmp_1_reg_892 == 1'd1) & (out_stream_group_4_V_V_empty_n == 1'b0)))));
end

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage3_01001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (((out_stream_group_15_V_V_empty_n == 1'b0) & (ap_predicate_op90_read_state4 == 1'b1)) | ((out_stream_group_14_V_V_empty_n == 1'b0) & (ap_predicate_op88_read_state4 == 1'b1)) | ((out_stream_group_13_V_V_empty_n == 1'b0) & (ap_predicate_op86_read_state4 == 1'b1)) | ((tmp_2_reg_908 == 1'd1) & (out_stream_group_8_V_V_empty_n == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage3_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state4_io) | ((out_stream_group_15_V_V_empty_n == 1'b0) & (ap_predicate_op90_read_state4 == 1'b1)) | ((out_stream_group_14_V_V_empty_n == 1'b0) & (ap_predicate_op88_read_state4 == 1'b1)) | ((out_stream_group_13_V_V_empty_n == 1'b0) & (ap_predicate_op86_read_state4 == 1'b1)) | ((tmp_2_reg_908 == 1'd1) & (out_stream_group_8_V_V_empty_n == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage3_subdone = ((1'b0 == ap_ce) | ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state4_io) | ((out_stream_group_15_V_V_empty_n == 1'b0) & (ap_predicate_op90_read_state4 == 1'b1)) | ((out_stream_group_14_V_V_empty_n == 1'b0) & (ap_predicate_op88_read_state4 == 1'b1)) | ((out_stream_group_13_V_V_empty_n == 1'b0) & (ap_predicate_op86_read_state4 == 1'b1)) | ((tmp_2_reg_908 == 1'd1) & (out_stream_group_8_V_V_empty_n == 1'b0)))));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = (ap_start == 1'b0);
end

always @ (*) begin
    ap_block_state2_io = ((tmp_s_reg_876 == 1'd1) & (outStream_TREADY == 1'b0));
end

always @ (*) begin
    ap_block_state2_pp0_stage1_iter0 = (((out_stream_group_7_V_V_empty_n == 1'b0) & (ap_predicate_op44_read_state2 == 1'b1)) | ((out_stream_group_6_V_V_empty_n == 1'b0) & (ap_predicate_op42_read_state2 == 1'b1)) | ((out_stream_group_5_V_V_empty_n == 1'b0) & (ap_predicate_op40_read_state2 == 1'b1)) | ((out_stream_group_3_V_V_empty_n == 1'b0) & (ap_predicate_op34_read_state2 == 1'b1)) | ((out_stream_group_2_V_V_empty_n == 1'b0) & (ap_predicate_op31_read_state2 == 1'b1)) | ((out_stream_group_1_V_V_empty_n == 1'b0) & (ap_predicate_op28_read_state2 == 1'b1)) | ((tmp_s_reg_876 == 1'd1) & (out_stream_group_0_V_V_empty_n == 1'b0)));
end

always @ (*) begin
    ap_block_state3_io = ((tmp_1_reg_892 == 1'd1) & (outStream_TREADY == 1'b0));
end

always @ (*) begin
    ap_block_state3_pp0_stage2_iter0 = (((out_stream_group_11_V_V_empty_n == 1'b0) & (ap_predicate_op69_read_state3 == 1'b1)) | ((out_stream_group_10_V_V_empty_n == 1'b0) & (ap_predicate_op67_read_state3 == 1'b1)) | ((out_stream_group_9_V_V_empty_n == 1'b0) & (ap_predicate_op65_read_state3 == 1'b1)) | ((tmp_1_reg_892 == 1'd1) & (out_stream_group_4_V_V_empty_n == 1'b0)));
end

always @ (*) begin
    ap_block_state4_io = ((tmp_2_reg_908 == 1'd1) & (outStream_TREADY == 1'b0));
end

always @ (*) begin
    ap_block_state4_pp0_stage3_iter0 = (((out_stream_group_15_V_V_empty_n == 1'b0) & (ap_predicate_op90_read_state4 == 1'b1)) | ((out_stream_group_14_V_V_empty_n == 1'b0) & (ap_predicate_op88_read_state4 == 1'b1)) | ((out_stream_group_13_V_V_empty_n == 1'b0) & (ap_predicate_op86_read_state4 == 1'b1)) | ((tmp_2_reg_908 == 1'd1) & (out_stream_group_8_V_V_empty_n == 1'b0)));
end

always @ (*) begin
    ap_block_state5_io = ((tmp_3_reg_964 == 1'd1) & (outStream_TREADY == 1'b0));
end

always @ (*) begin
    ap_block_state5_pp0_stage0_iter1 = ((tmp_3_reg_964 == 1'd1) & (out_stream_group_12_V_V_empty_n == 1'b0));
end

always @ (*) begin
    ap_condition_109 = ((1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage3_11001));
end

always @ (*) begin
    ap_condition_499 = ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b1 == ap_ce));
end

always @ (*) begin
    ap_condition_736 = ((1'b0 == ap_block_pp0_stage1_01001) & (tmp_s_reg_876 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1));
end

always @ (*) begin
    ap_condition_740 = ((1'b0 == ap_block_pp0_stage2_01001) & (tmp_1_reg_892 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2));
end

always @ (*) begin
    ap_condition_744 = ((1'b0 == ap_block_pp0_stage3_01001) & (tmp_2_reg_908 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_condition_749 = ((1'b0 == ap_block_pp0_stage0_01001) & (tmp_3_reg_964 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_phi_reg_pp0_iter0_curr_output_0_1_2_0_reg_581 = 'bx;

assign ap_phi_reg_pp0_iter0_curr_output_0_1_2_3_reg_794 = 'bx;

assign ap_phi_reg_pp0_iter0_curr_output_0_1_4_2_reg_772 = 'bx;

assign ap_phi_reg_pp0_iter0_curr_output_0_2_2_0_reg_594 = 'bx;

assign ap_phi_reg_pp0_iter0_curr_output_0_2_2_3_reg_804 = 'bx;

assign ap_phi_reg_pp0_iter0_curr_output_0_2_4_2_reg_761 = 'bx;

assign ap_phi_reg_pp0_iter0_curr_output_0_3_2_0_reg_607 = 'bx;

assign ap_phi_reg_pp0_iter0_curr_output_0_3_2_3_reg_814 = 'bx;

assign ap_phi_reg_pp0_iter0_curr_output_0_3_4_2_reg_783 = 'bx;

always @ (*) begin
    ap_predicate_op28_read_state2 = ((tmp_1_s_reg_880 == 1'd1) & (tmp_s_reg_876 == 1'd1));
end

always @ (*) begin
    ap_predicate_op31_read_state2 = ((tmp_2_s_reg_884 == 1'd1) & (tmp_s_reg_876 == 1'd1));
end

always @ (*) begin
    ap_predicate_op34_read_state2 = ((tmp_3_s_reg_888 == 1'd1) & (tmp_s_reg_876 == 1'd1));
end

always @ (*) begin
    ap_predicate_op40_read_state2 = ((tmp_1_1_reg_896 == 1'd1) & (tmp_1_reg_892 == 1'd1));
end

always @ (*) begin
    ap_predicate_op42_read_state2 = ((tmp_2_1_reg_900 == 1'd1) & (tmp_1_reg_892 == 1'd1));
end

always @ (*) begin
    ap_predicate_op44_read_state2 = ((tmp_3_1_reg_904 == 1'd1) & (tmp_1_reg_892 == 1'd1));
end

always @ (*) begin
    ap_predicate_op65_read_state3 = ((tmp_1_2_reg_912 == 1'd1) & (tmp_2_reg_908 == 1'd1));
end

always @ (*) begin
    ap_predicate_op67_read_state3 = ((tmp_2_2_reg_916 == 1'd1) & (tmp_2_reg_908 == 1'd1));
end

always @ (*) begin
    ap_predicate_op69_read_state3 = ((tmp_3_2_reg_920 == 1'd1) & (tmp_2_reg_908 == 1'd1));
end

always @ (*) begin
    ap_predicate_op86_read_state4 = ((tmp_1_3_reg_968 == 1'd1) & (tmp_3_reg_964 == 1'd1));
end

always @ (*) begin
    ap_predicate_op88_read_state4 = ((tmp_2_3_reg_972 == 1'd1) & (tmp_3_reg_964 == 1'd1));
end

always @ (*) begin
    ap_predicate_op90_read_state4 = ((tmp_3_3_reg_976 == 1'd1) & (tmp_3_reg_964 == 1'd1));
end

assign tmp_1_1_nbreadreq_fu_330_p3 = out_stream_group_5_V_V_empty_n;

assign tmp_1_2_nbreadreq_fu_362_p3 = out_stream_group_9_V_V_empty_n;

assign tmp_1_3_nbreadreq_fu_497_p3 = out_stream_group_13_V_V_empty_n;

assign tmp_1_nbreadreq_fu_322_p3 = out_stream_group_4_V_V_empty_n;

assign tmp_1_s_nbreadreq_fu_298_p3 = out_stream_group_1_V_V_empty_n;

assign tmp_2_1_nbreadreq_fu_338_p3 = out_stream_group_6_V_V_empty_n;

assign tmp_2_2_nbreadreq_fu_370_p3 = out_stream_group_10_V_V_empty_n;

assign tmp_2_3_nbreadreq_fu_505_p3 = out_stream_group_14_V_V_empty_n;

assign tmp_2_nbreadreq_fu_354_p3 = out_stream_group_8_V_V_empty_n;

assign tmp_2_s_nbreadreq_fu_306_p3 = out_stream_group_2_V_V_empty_n;

assign tmp_3_1_nbreadreq_fu_346_p3 = out_stream_group_7_V_V_empty_n;

assign tmp_3_2_nbreadreq_fu_378_p3 = out_stream_group_11_V_V_empty_n;

assign tmp_3_3_nbreadreq_fu_513_p3 = out_stream_group_15_V_V_empty_n;

assign tmp_3_nbreadreq_fu_489_p3 = out_stream_group_12_V_V_empty_n;

assign tmp_3_s_nbreadreq_fu_314_p3 = out_stream_group_3_V_V_empty_n;

assign tmp_data_1_fu_837_p5 = {{{{ap_phi_mux_curr_output_0_3_2_1_phi_fu_684_p4}, {ap_phi_mux_curr_output_0_2_2_1_phi_fu_673_p4}}, {ap_phi_mux_curr_output_0_1_2_1_phi_fu_662_p4}}, {out_stream_group_4_V_V_dout}};

assign tmp_data_2_fu_850_p5 = {{{{ap_phi_mux_curr_output_0_3_2_2_phi_fu_753_p4}, {ap_phi_mux_curr_output_0_2_2_2_phi_fu_742_p4}}, {ap_phi_mux_curr_output_0_1_2_2_phi_fu_731_p4}}, {out_stream_group_8_V_V_dout}};

assign tmp_data_3_fu_863_p5 = {{{{ap_phi_mux_curr_output_0_3_2_3_phi_fu_817_p4}, {ap_phi_mux_curr_output_0_2_2_3_phi_fu_807_p4}}, {ap_phi_mux_curr_output_0_1_2_3_phi_fu_797_p4}}, {out_stream_group_12_V_V_dout}};

assign tmp_data_fu_824_p5 = {{{{ap_phi_mux_curr_output_0_3_2_0_phi_fu_611_p4}, {ap_phi_mux_curr_output_0_2_2_0_phi_fu_598_p4}}, {ap_phi_mux_curr_output_0_1_2_0_phi_fu_585_p4}}, {out_stream_group_0_V_V_dout}};

assign tmp_s_nbreadreq_fu_290_p3 = out_stream_group_0_V_V_empty_n;

endmodule //out_stream_merge
