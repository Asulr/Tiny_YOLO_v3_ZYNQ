// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module post_process (
        ap_clk,
        ap_rst,
        sub0_val_output_V,
        sub1_val_output_V,
        sub2_val_output_V,
        sub3_val_output_V,
        acc_flag,
        leaky_V,
        bias_V,
        input_ch_idx_V,
        val_output_V,
        ap_return,
        ap_ce
);


input   ap_clk;
input   ap_rst;
input  [15:0] sub0_val_output_V;
input  [15:0] sub1_val_output_V;
input  [15:0] sub2_val_output_V;
input  [15:0] sub3_val_output_V;
input   acc_flag;
input  [0:0] leaky_V;
input  [15:0] bias_V;
input  [3:0] input_ch_idx_V;
input  [15:0] val_output_V;
output  [15:0] ap_return;
input   ap_ce;

reg[15:0] ap_return;

reg  signed [15:0] bias_V_read_reg_764;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_pp0_stage0_11001;
reg  signed [15:0] bias_V_read_reg_764_pp0_iter1_reg;
reg  signed [15:0] bias_V_read_reg_764_pp0_iter2_reg;
reg   [0:0] leaky_V_read_reg_770;
reg   [0:0] leaky_V_read_reg_770_pp0_iter1_reg;
reg   [0:0] leaky_V_read_reg_770_pp0_iter2_reg;
reg   [0:0] leaky_V_read_reg_770_pp0_iter3_reg;
reg   [0:0] leaky_V_read_reg_770_pp0_iter4_reg;
reg   [0:0] acc_flag_read_reg_775;
reg   [0:0] acc_flag_read_reg_775_pp0_iter1_reg;
reg   [0:0] acc_flag_read_reg_775_pp0_iter2_reg;
reg   [0:0] acc_flag_read_reg_775_pp0_iter3_reg;
reg   [0:0] acc_flag_read_reg_775_pp0_iter4_reg;
reg  signed [15:0] sub3_val_output_V_re_reg_781;
reg  signed [15:0] sub3_val_output_V_re_reg_781_pp0_iter1_reg;
reg  signed [15:0] sub2_val_output_V_re_reg_787;
reg  signed [15:0] sub1_val_output_V_re_reg_793;
wire  signed [15:0] p_Val2_4_fu_212_p3;
reg  signed [15:0] p_Val2_4_reg_799;
reg   [0:0] p_Result_7_reg_805;
wire   [15:0] p_Val2_9_fu_327_p2;
reg   [15:0] p_Val2_9_reg_812;
reg   [0:0] p_Result_8_reg_818;
wire  signed [15:0] p_Val2_13_fu_466_p3;
reg  signed [15:0] p_Val2_13_reg_825;
reg  signed [15:0] p_Val2_13_reg_825_pp0_iter3_reg;
reg  signed [15:0] p_Val2_13_reg_825_pp0_iter4_reg;
wire  signed [15:0] activated_output_V_fu_552_p3;
reg  signed [15:0] activated_output_V_reg_832;
reg  signed [15:0] activated_output_V_reg_832_pp0_iter4_reg;
wire  signed [21:0] r_V_fu_755_p2;
reg  signed [21:0] r_V_reg_839;
wire   [6:0] trunc_ln718_fu_563_p1;
reg   [6:0] trunc_ln718_reg_847;
reg   [0:0] p_Result_13_reg_852;
reg   [0:0] Range2_all_ones_reg_858;
wire    ap_block_pp0_stage0;
wire   [0:0] icmp_ln879_fu_116_p2;
wire  signed [15:0] p_Val2_s_fu_122_p3;
wire  signed [15:0] rhs_V_fu_134_p0;
wire  signed [16:0] rhs_V_fu_134_p1;
wire  signed [16:0] lhs_V_fu_130_p1;
wire   [16:0] ret_V_fu_138_p2;
wire  signed [15:0] p_Val2_3_fu_152_p1;
wire   [15:0] p_Val2_3_fu_152_p2;
wire   [0:0] p_Result_4_fu_158_p3;
wire   [0:0] p_Result_s_fu_144_p3;
wire   [0:0] xor_ln786_fu_166_p2;
wire   [0:0] xor_ln340_9_fu_184_p2;
wire   [0:0] xor_ln340_16_fu_178_p2;
wire   [0:0] underflow_fu_172_p2;
wire   [0:0] or_ln340_fu_190_p2;
wire   [15:0] select_ln340_9_fu_196_p3;
wire   [15:0] select_ln388_9_fu_204_p3;
wire  signed [16:0] rhs_V_1_fu_223_p1;
wire  signed [16:0] lhs_V_1_fu_220_p1;
wire   [16:0] ret_V_10_fu_226_p2;
wire   [15:0] p_Val2_6_fu_240_p2;
wire   [0:0] p_Result_6_fu_244_p3;
wire   [0:0] p_Result_5_fu_232_p3;
wire   [0:0] xor_ln786_2_fu_252_p2;
wire   [0:0] xor_ln340_10_fu_270_p2;
wire   [0:0] xor_ln340_17_fu_264_p2;
wire   [0:0] underflow_1_fu_258_p2;
wire   [0:0] or_ln340_11_fu_276_p2;
wire   [15:0] select_ln340_10_fu_282_p3;
wire   [15:0] select_ln388_10_fu_290_p3;
wire  signed [15:0] p_Val2_7_fu_298_p3;
wire  signed [16:0] rhs_V_2_fu_310_p1;
wire  signed [16:0] lhs_V_2_fu_306_p1;
wire   [16:0] ret_V_11_fu_313_p2;
wire   [0:0] xor_ln786_3_fu_340_p2;
wire   [0:0] xor_ln340_11_fu_354_p2;
wire   [0:0] xor_ln340_18_fu_350_p2;
wire   [0:0] underflow_2_fu_345_p2;
wire   [0:0] or_ln340_12_fu_359_p2;
wire   [15:0] select_ln340_11_fu_364_p3;
wire   [15:0] select_ln388_11_fu_371_p3;
wire  signed [15:0] p_Val2_10_fu_378_p3;
wire  signed [16:0] rhs_V_3_fu_390_p1;
wire  signed [16:0] lhs_V_3_fu_386_p1;
wire   [16:0] ret_V_12_fu_393_p2;
wire   [15:0] p_Val2_12_fu_407_p2;
wire   [0:0] p_Result_10_fu_412_p3;
wire   [0:0] p_Result_9_fu_399_p3;
wire   [0:0] xor_ln786_4_fu_420_p2;
wire   [0:0] xor_ln340_12_fu_438_p2;
wire   [0:0] xor_ln340_19_fu_432_p2;
wire   [0:0] underflow_3_fu_426_p2;
wire   [0:0] or_ln340_13_fu_444_p2;
wire   [15:0] select_ln340_12_fu_450_p3;
wire   [15:0] select_ln388_12_fu_458_p3;
wire  signed [16:0] rhs_V_4_fu_477_p1;
wire  signed [16:0] lhs_V_4_fu_474_p1;
wire   [16:0] ret_V_13_fu_480_p2;
wire   [15:0] p_Val2_15_fu_494_p2;
wire   [0:0] p_Result_12_fu_498_p3;
wire   [0:0] p_Result_11_fu_486_p3;
wire   [0:0] xor_ln786_5_fu_506_p2;
wire   [0:0] xor_ln340_fu_524_p2;
wire   [0:0] xor_ln340_20_fu_518_p2;
wire   [0:0] underflow_4_fu_512_p2;
wire   [0:0] or_ln340_9_fu_530_p2;
wire   [15:0] select_ln340_fu_536_p3;
wire   [15:0] select_ln388_fu_544_p3;
wire   [13:0] trunc_ln_fu_587_p4;
wire   [0:0] r_fu_607_p2;
wire   [0:0] tmp_75_fu_600_p3;
wire   [0:0] tmp_77_fu_618_p3;
wire   [0:0] or_ln412_fu_612_p2;
wire   [0:0] and_ln415_fu_625_p2;
wire  signed [14:0] sext_ln713_fu_596_p1;
wire   [14:0] zext_ln415_fu_631_p1;
wire  signed [14:0] p_Val2_17_fu_635_p2;
wire   [0:0] tmp_78_fu_645_p3;
wire   [0:0] xor_ln416_1_fu_653_p2;
wire   [0:0] tmp_81_fu_672_p3;
wire   [0:0] xor_ln416_2_fu_685_p2;
wire   [0:0] or_ln416_1_fu_690_p2;
wire   [0:0] xor_ln779_fu_679_p2;
wire   [0:0] or_ln416_fu_696_p2;
wire   [0:0] carry_2_fu_659_p2;
wire   [0:0] p_Result_14_fu_664_p3;
wire   [0:0] deleted_ones_fu_702_p2;
wire   [0:0] and_ln781_fu_707_p2;
wire   [0:0] and_ln786_fu_712_p2;
wire   [0:0] or_ln786_fu_718_p2;
wire  signed [15:0] sext_ln415_fu_641_p1;
wire   [0:0] and_ln232_fu_732_p2;
wire   [0:0] tmp_fu_580_p3;
wire   [0:0] and_ln232_1_fu_736_p2;
wire   [15:0] select_ln340_13_fu_724_p3;
wire   [15:0] select_ln232_fu_742_p3;
wire   [5:0] r_V_fu_755_p0;
wire   [15:0] select_ln213_fu_749_p3;
reg    ap_ce_reg;
reg   [15:0] sub0_val_output_V_int_reg;
reg   [15:0] sub1_val_output_V_int_reg;
reg   [15:0] sub2_val_output_V_int_reg;
reg   [15:0] sub3_val_output_V_int_reg;
reg    acc_flag_int_reg;
reg   [0:0] leaky_V_int_reg;
reg   [15:0] bias_V_int_reg;
reg   [3:0] input_ch_idx_V_int_reg;
reg   [15:0] val_output_V_int_reg;
reg   [15:0] ap_return_int_reg;

yolo_conv_top_mul_mul_6ns_16s_22_1_0 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 22 ))
yolo_conv_top_mul_mul_6ns_16s_22_1_0_U34(
    .din0(r_V_fu_755_p0),
    .din1(activated_output_V_reg_832),
    .dout(r_V_fu_755_p2)
);

always @ (posedge ap_clk) begin
    ap_ce_reg <= ap_ce;
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_ce_reg) & (1'd1 == acc_flag_read_reg_775_pp0_iter3_reg) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        Range2_all_ones_reg_858 <= r_V_fu_755_p2[32'd21];
        p_Result_13_reg_852 <= r_V_fu_755_p2[32'd21];
        r_V_reg_839 <= r_V_fu_755_p2;
        trunc_ln718_reg_847 <= trunc_ln718_fu_563_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_ce)) begin
        acc_flag_int_reg <= acc_flag;
        bias_V_int_reg <= bias_V;
        input_ch_idx_V_int_reg <= input_ch_idx_V;
        leaky_V_int_reg <= leaky_V;
        sub0_val_output_V_int_reg <= sub0_val_output_V;
        sub1_val_output_V_int_reg <= sub1_val_output_V;
        sub2_val_output_V_int_reg <= sub2_val_output_V;
        sub3_val_output_V_int_reg <= sub3_val_output_V;
        val_output_V_int_reg <= val_output_V;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_ce_reg) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        acc_flag_read_reg_775 <= acc_flag_int_reg;
        acc_flag_read_reg_775_pp0_iter1_reg <= acc_flag_read_reg_775;
        acc_flag_read_reg_775_pp0_iter2_reg <= acc_flag_read_reg_775_pp0_iter1_reg;
        acc_flag_read_reg_775_pp0_iter3_reg <= acc_flag_read_reg_775_pp0_iter2_reg;
        acc_flag_read_reg_775_pp0_iter4_reg <= acc_flag_read_reg_775_pp0_iter3_reg;
        activated_output_V_reg_832_pp0_iter4_reg <= activated_output_V_reg_832;
        bias_V_read_reg_764 <= bias_V_int_reg;
        bias_V_read_reg_764_pp0_iter1_reg <= bias_V_read_reg_764;
        bias_V_read_reg_764_pp0_iter2_reg <= bias_V_read_reg_764_pp0_iter1_reg;
        leaky_V_read_reg_770 <= leaky_V_int_reg;
        leaky_V_read_reg_770_pp0_iter1_reg <= leaky_V_read_reg_770;
        leaky_V_read_reg_770_pp0_iter2_reg <= leaky_V_read_reg_770_pp0_iter1_reg;
        leaky_V_read_reg_770_pp0_iter3_reg <= leaky_V_read_reg_770_pp0_iter2_reg;
        leaky_V_read_reg_770_pp0_iter4_reg <= leaky_V_read_reg_770_pp0_iter3_reg;
        p_Result_7_reg_805 <= ret_V_11_fu_313_p2[32'd16];
        p_Result_8_reg_818 <= p_Val2_9_fu_327_p2[32'd15];
        p_Val2_13_reg_825 <= p_Val2_13_fu_466_p3;
        p_Val2_13_reg_825_pp0_iter3_reg <= p_Val2_13_reg_825;
        p_Val2_13_reg_825_pp0_iter4_reg <= p_Val2_13_reg_825_pp0_iter3_reg;
        p_Val2_4_reg_799 <= p_Val2_4_fu_212_p3;
        p_Val2_9_reg_812 <= p_Val2_9_fu_327_p2;
        sub1_val_output_V_re_reg_793 <= sub1_val_output_V_int_reg;
        sub2_val_output_V_re_reg_787 <= sub2_val_output_V_int_reg;
        sub3_val_output_V_re_reg_781 <= sub3_val_output_V_int_reg;
        sub3_val_output_V_re_reg_781_pp0_iter1_reg <= sub3_val_output_V_re_reg_781;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_ce_reg) & (1'd1 == acc_flag_read_reg_775_pp0_iter2_reg) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        activated_output_V_reg_832 <= activated_output_V_fu_552_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_ce_reg)) begin
        ap_return_int_reg <= select_ln213_fu_749_p3;
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return = ap_return_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return = select_ln213_fu_749_p3;
    end
end

assign activated_output_V_fu_552_p3 = ((or_ln340_9_fu_530_p2[0:0] === 1'b1) ? select_ln340_fu_536_p3 : select_ln388_fu_544_p3);

assign and_ln232_1_fu_736_p2 = (tmp_fu_580_p3 & and_ln232_fu_732_p2);

assign and_ln232_fu_732_p2 = (leaky_V_read_reg_770_pp0_iter4_reg & acc_flag_read_reg_775_pp0_iter4_reg);

assign and_ln415_fu_625_p2 = (tmp_77_fu_618_p3 & or_ln412_fu_612_p2);

assign and_ln781_fu_707_p2 = (carry_2_fu_659_p2 & Range2_all_ones_reg_858);

assign and_ln786_fu_712_p2 = (p_Result_14_fu_664_p3 & deleted_ones_fu_702_p2);

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign carry_2_fu_659_p2 = (xor_ln416_1_fu_653_p2 & p_Result_13_reg_852);

assign deleted_ones_fu_702_p2 = (or_ln416_fu_696_p2 & Range2_all_ones_reg_858);

assign icmp_ln879_fu_116_p2 = ((input_ch_idx_V_int_reg == 4'd0) ? 1'b1 : 1'b0);

assign lhs_V_1_fu_220_p1 = p_Val2_4_reg_799;

assign lhs_V_2_fu_306_p1 = p_Val2_7_fu_298_p3;

assign lhs_V_3_fu_386_p1 = p_Val2_10_fu_378_p3;

assign lhs_V_4_fu_474_p1 = p_Val2_13_reg_825;

assign lhs_V_fu_130_p1 = p_Val2_s_fu_122_p3;

assign or_ln340_11_fu_276_p2 = (xor_ln340_10_fu_270_p2 | p_Result_6_fu_244_p3);

assign or_ln340_12_fu_359_p2 = (xor_ln340_11_fu_354_p2 | p_Result_8_reg_818);

assign or_ln340_13_fu_444_p2 = (xor_ln340_12_fu_438_p2 | p_Result_10_fu_412_p3);

assign or_ln340_9_fu_530_p2 = (xor_ln340_fu_524_p2 | p_Result_12_fu_498_p3);

assign or_ln340_fu_190_p2 = (xor_ln340_9_fu_184_p2 | p_Result_4_fu_158_p3);

assign or_ln412_fu_612_p2 = (tmp_75_fu_600_p3 | r_fu_607_p2);

assign or_ln416_1_fu_690_p2 = (xor_ln416_2_fu_685_p2 | tmp_78_fu_645_p3);

assign or_ln416_fu_696_p2 = (xor_ln779_fu_679_p2 | or_ln416_1_fu_690_p2);

assign or_ln786_fu_718_p2 = (and_ln786_fu_712_p2 | and_ln781_fu_707_p2);

assign p_Result_10_fu_412_p3 = p_Val2_12_fu_407_p2[32'd15];

assign p_Result_11_fu_486_p3 = ret_V_13_fu_480_p2[32'd16];

assign p_Result_12_fu_498_p3 = p_Val2_15_fu_494_p2[32'd15];

assign p_Result_14_fu_664_p3 = p_Val2_17_fu_635_p2[32'd14];

assign p_Result_4_fu_158_p3 = p_Val2_3_fu_152_p2[32'd15];

assign p_Result_5_fu_232_p3 = ret_V_10_fu_226_p2[32'd16];

assign p_Result_6_fu_244_p3 = p_Val2_6_fu_240_p2[32'd15];

assign p_Result_9_fu_399_p3 = ret_V_12_fu_393_p2[32'd16];

assign p_Result_s_fu_144_p3 = ret_V_fu_138_p2[32'd16];

assign p_Val2_10_fu_378_p3 = ((or_ln340_12_fu_359_p2[0:0] === 1'b1) ? select_ln340_11_fu_364_p3 : select_ln388_11_fu_371_p3);

assign p_Val2_12_fu_407_p2 = ($signed(p_Val2_10_fu_378_p3) + $signed(sub3_val_output_V_re_reg_781_pp0_iter1_reg));

assign p_Val2_13_fu_466_p3 = ((or_ln340_13_fu_444_p2[0:0] === 1'b1) ? select_ln340_12_fu_450_p3 : select_ln388_12_fu_458_p3);

assign p_Val2_15_fu_494_p2 = ($signed(p_Val2_13_reg_825) + $signed(bias_V_read_reg_764_pp0_iter2_reg));

assign p_Val2_17_fu_635_p2 = ($signed(sext_ln713_fu_596_p1) + $signed(zext_ln415_fu_631_p1));

assign p_Val2_3_fu_152_p1 = sub0_val_output_V_int_reg;

assign p_Val2_3_fu_152_p2 = ($signed(p_Val2_s_fu_122_p3) + $signed(p_Val2_3_fu_152_p1));

assign p_Val2_4_fu_212_p3 = ((or_ln340_fu_190_p2[0:0] === 1'b1) ? select_ln340_9_fu_196_p3 : select_ln388_9_fu_204_p3);

assign p_Val2_6_fu_240_p2 = ($signed(p_Val2_4_reg_799) + $signed(sub1_val_output_V_re_reg_793));

assign p_Val2_7_fu_298_p3 = ((or_ln340_11_fu_276_p2[0:0] === 1'b1) ? select_ln340_10_fu_282_p3 : select_ln388_10_fu_290_p3);

assign p_Val2_9_fu_327_p2 = ($signed(p_Val2_7_fu_298_p3) + $signed(sub2_val_output_V_re_reg_787));

assign p_Val2_s_fu_122_p3 = ((icmp_ln879_fu_116_p2[0:0] === 1'b1) ? 16'd0 : val_output_V_int_reg);

assign r_V_fu_755_p0 = 22'd26;

assign r_fu_607_p2 = ((trunc_ln718_reg_847 != 7'd0) ? 1'b1 : 1'b0);

assign ret_V_10_fu_226_p2 = ($signed(rhs_V_1_fu_223_p1) + $signed(lhs_V_1_fu_220_p1));

assign ret_V_11_fu_313_p2 = ($signed(rhs_V_2_fu_310_p1) + $signed(lhs_V_2_fu_306_p1));

assign ret_V_12_fu_393_p2 = ($signed(rhs_V_3_fu_390_p1) + $signed(lhs_V_3_fu_386_p1));

assign ret_V_13_fu_480_p2 = ($signed(rhs_V_4_fu_477_p1) + $signed(lhs_V_4_fu_474_p1));

assign ret_V_fu_138_p2 = ($signed(rhs_V_fu_134_p1) + $signed(lhs_V_fu_130_p1));

assign rhs_V_1_fu_223_p1 = sub1_val_output_V_re_reg_793;

assign rhs_V_2_fu_310_p1 = sub2_val_output_V_re_reg_787;

assign rhs_V_3_fu_390_p1 = sub3_val_output_V_re_reg_781_pp0_iter1_reg;

assign rhs_V_4_fu_477_p1 = bias_V_read_reg_764_pp0_iter2_reg;

assign rhs_V_fu_134_p0 = sub0_val_output_V_int_reg;

assign rhs_V_fu_134_p1 = rhs_V_fu_134_p0;

assign select_ln213_fu_749_p3 = ((acc_flag_read_reg_775_pp0_iter4_reg[0:0] === 1'b1) ? select_ln232_fu_742_p3 : p_Val2_13_reg_825_pp0_iter4_reg);

assign select_ln232_fu_742_p3 = ((and_ln232_1_fu_736_p2[0:0] === 1'b1) ? select_ln340_13_fu_724_p3 : activated_output_V_reg_832_pp0_iter4_reg);

assign select_ln340_10_fu_282_p3 = ((xor_ln340_17_fu_264_p2[0:0] === 1'b1) ? 16'd32767 : p_Val2_6_fu_240_p2);

assign select_ln340_11_fu_364_p3 = ((xor_ln340_18_fu_350_p2[0:0] === 1'b1) ? 16'd32767 : p_Val2_9_reg_812);

assign select_ln340_12_fu_450_p3 = ((xor_ln340_19_fu_432_p2[0:0] === 1'b1) ? 16'd32767 : p_Val2_12_fu_407_p2);

assign select_ln340_13_fu_724_p3 = ((or_ln786_fu_718_p2[0:0] === 1'b1) ? sext_ln415_fu_641_p1 : 16'd32768);

assign select_ln340_9_fu_196_p3 = ((xor_ln340_16_fu_178_p2[0:0] === 1'b1) ? 16'd32767 : p_Val2_3_fu_152_p2);

assign select_ln340_fu_536_p3 = ((xor_ln340_20_fu_518_p2[0:0] === 1'b1) ? 16'd32767 : p_Val2_15_fu_494_p2);

assign select_ln388_10_fu_290_p3 = ((underflow_1_fu_258_p2[0:0] === 1'b1) ? 16'd32768 : p_Val2_6_fu_240_p2);

assign select_ln388_11_fu_371_p3 = ((underflow_2_fu_345_p2[0:0] === 1'b1) ? 16'd32768 : p_Val2_9_reg_812);

assign select_ln388_12_fu_458_p3 = ((underflow_3_fu_426_p2[0:0] === 1'b1) ? 16'd32768 : p_Val2_12_fu_407_p2);

assign select_ln388_9_fu_204_p3 = ((underflow_fu_172_p2[0:0] === 1'b1) ? 16'd32768 : p_Val2_3_fu_152_p2);

assign select_ln388_fu_544_p3 = ((underflow_4_fu_512_p2[0:0] === 1'b1) ? 16'd32768 : p_Val2_15_fu_494_p2);

assign sext_ln415_fu_641_p1 = p_Val2_17_fu_635_p2;

assign sext_ln713_fu_596_p1 = $signed(trunc_ln_fu_587_p4);

assign tmp_75_fu_600_p3 = r_V_reg_839[32'd8];

assign tmp_77_fu_618_p3 = r_V_reg_839[32'd7];

assign tmp_78_fu_645_p3 = p_Val2_17_fu_635_p2[32'd14];

assign tmp_81_fu_672_p3 = r_V_reg_839[32'd20];

assign tmp_fu_580_p3 = activated_output_V_reg_832_pp0_iter4_reg[32'd15];

assign trunc_ln718_fu_563_p1 = r_V_fu_755_p2[6:0];

assign trunc_ln_fu_587_p4 = {{r_V_reg_839[21:8]}};

assign underflow_1_fu_258_p2 = (xor_ln786_2_fu_252_p2 & p_Result_5_fu_232_p3);

assign underflow_2_fu_345_p2 = (xor_ln786_3_fu_340_p2 & p_Result_7_reg_805);

assign underflow_3_fu_426_p2 = (xor_ln786_4_fu_420_p2 & p_Result_9_fu_399_p3);

assign underflow_4_fu_512_p2 = (xor_ln786_5_fu_506_p2 & p_Result_11_fu_486_p3);

assign underflow_fu_172_p2 = (xor_ln786_fu_166_p2 & p_Result_s_fu_144_p3);

assign xor_ln340_10_fu_270_p2 = (p_Result_5_fu_232_p3 ^ 1'd1);

assign xor_ln340_11_fu_354_p2 = (p_Result_7_reg_805 ^ 1'd1);

assign xor_ln340_12_fu_438_p2 = (p_Result_9_fu_399_p3 ^ 1'd1);

assign xor_ln340_16_fu_178_p2 = (p_Result_s_fu_144_p3 ^ p_Result_4_fu_158_p3);

assign xor_ln340_17_fu_264_p2 = (p_Result_6_fu_244_p3 ^ p_Result_5_fu_232_p3);

assign xor_ln340_18_fu_350_p2 = (p_Result_8_reg_818 ^ p_Result_7_reg_805);

assign xor_ln340_19_fu_432_p2 = (p_Result_9_fu_399_p3 ^ p_Result_10_fu_412_p3);

assign xor_ln340_20_fu_518_p2 = (p_Result_12_fu_498_p3 ^ p_Result_11_fu_486_p3);

assign xor_ln340_9_fu_184_p2 = (p_Result_s_fu_144_p3 ^ 1'd1);

assign xor_ln340_fu_524_p2 = (p_Result_11_fu_486_p3 ^ 1'd1);

assign xor_ln416_1_fu_653_p2 = (tmp_78_fu_645_p3 ^ 1'd1);

assign xor_ln416_2_fu_685_p2 = (p_Result_13_reg_852 ^ 1'd1);

assign xor_ln779_fu_679_p2 = (tmp_81_fu_672_p3 ^ 1'd1);

assign xor_ln786_2_fu_252_p2 = (p_Result_6_fu_244_p3 ^ 1'd1);

assign xor_ln786_3_fu_340_p2 = (p_Result_8_reg_818 ^ 1'd1);

assign xor_ln786_4_fu_420_p2 = (p_Result_10_fu_412_p3 ^ 1'd1);

assign xor_ln786_5_fu_506_p2 = (p_Result_12_fu_498_p3 ^ 1'd1);

assign xor_ln786_fu_166_p2 = (p_Result_4_fu_158_p3 ^ 1'd1);

assign zext_ln415_fu_631_p1 = and_ln415_fu_625_p2;

endmodule //post_process
