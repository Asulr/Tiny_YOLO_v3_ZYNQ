// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module window_macc (
        ap_clk,
        ap_rst,
        p_read,
        p_read1,
        p_read2,
        p_read3,
        p_read4,
        p_read5,
        p_read6,
        p_read7,
        p_read8,
        p_read9,
        p_read10,
        p_read11,
        p_read12,
        p_read13,
        p_read14,
        p_read15,
        p_read16,
        p_read17,
        ap_return,
        ap_ce
);


input   ap_clk;
input   ap_rst;
input  [15:0] p_read;
input  [15:0] p_read1;
input  [15:0] p_read2;
input  [15:0] p_read3;
input  [15:0] p_read4;
input  [15:0] p_read5;
input  [15:0] p_read6;
input  [15:0] p_read7;
input  [15:0] p_read8;
input  [15:0] p_read9;
input  [15:0] p_read10;
input  [15:0] p_read11;
input  [15:0] p_read12;
input  [15:0] p_read13;
input  [15:0] p_read14;
input  [15:0] p_read15;
input  [15:0] p_read16;
input  [15:0] p_read17;
output  [15:0] ap_return;
input   ap_ce;

reg[15:0] ap_return;

reg   [15:0] p_read_1_reg_1243;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_state7_pp0_stage0_iter6;
wire    ap_block_pp0_stage0_11001;
reg   [15:0] p_read_1_reg_1243_pp0_iter1_reg;
reg   [15:0] p_read_1_reg_1243_pp0_iter2_reg;
reg  signed [15:0] p_read_1_reg_1243_pp0_iter3_reg;
reg   [15:0] p_read_2_reg_1248;
reg   [15:0] p_read_2_reg_1248_pp0_iter1_reg;
reg  signed [15:0] p_read_2_reg_1248_pp0_iter2_reg;
reg   [15:0] p_read_3_reg_1253;
reg   [15:0] p_read_3_reg_1253_pp0_iter1_reg;
reg  signed [15:0] p_read_3_reg_1253_pp0_iter2_reg;
reg   [15:0] p_read_4_reg_1258;
reg  signed [15:0] p_read_4_reg_1258_pp0_iter1_reg;
reg  signed [15:0] p_read_5_reg_1263;
reg  signed [15:0] p_read_6_reg_1268;
reg   [15:0] p_read_10_reg_1273;
reg   [15:0] p_read_10_reg_1273_pp0_iter1_reg;
reg   [15:0] p_read_10_reg_1273_pp0_iter2_reg;
reg  signed [15:0] p_read_10_reg_1273_pp0_iter3_reg;
reg   [15:0] p_read_11_reg_1278;
reg   [15:0] p_read_11_reg_1278_pp0_iter1_reg;
reg  signed [15:0] p_read_11_reg_1278_pp0_iter2_reg;
reg   [15:0] p_read_12_reg_1283;
reg   [15:0] p_read_12_reg_1283_pp0_iter1_reg;
reg  signed [15:0] p_read_12_reg_1283_pp0_iter2_reg;
reg   [15:0] p_read_13_reg_1288;
reg  signed [15:0] p_read_13_reg_1288_pp0_iter1_reg;
reg  signed [15:0] p_read_14_reg_1293;
reg  signed [15:0] p_read_15_reg_1298;
wire  signed [31:0] mul_ln1118_fu_1189_p2;
reg  signed [31:0] mul_ln1118_reg_1303;
wire  signed [31:0] mul_ln1118_1_fu_1195_p2;
reg  signed [31:0] mul_ln1118_1_reg_1309;
wire  signed [31:0] mul_ln1118_2_fu_1201_p2;
reg  signed [31:0] mul_ln1118_2_reg_1315;
wire   [0:0] tmp_56_fu_315_p3;
reg   [0:0] tmp_56_reg_1321;
(* use_dsp48 = "no" *) wire   [31:0] add_ln703_1_fu_323_p2;
reg   [31:0] add_ln703_1_reg_1327;
wire   [0:0] tmp_57_fu_328_p3;
reg   [0:0] tmp_57_reg_1332;
wire   [31:0] select_ln388_1_fu_348_p3;
reg   [31:0] select_ln388_1_reg_1338;
wire  signed [31:0] mul_ln1118_3_fu_1207_p2;
reg  signed [31:0] mul_ln1118_3_reg_1343;
wire  signed [31:0] mul_ln1118_4_fu_1213_p2;
reg  signed [31:0] mul_ln1118_4_reg_1349;
reg   [0:0] tmp_60_reg_1355;
(* use_dsp48 = "no" *) wire   [31:0] add_ln703_3_fu_505_p2;
reg   [31:0] add_ln703_3_reg_1362;
reg   [0:0] tmp_61_reg_1368;
wire  signed [31:0] mul_ln1118_5_fu_1219_p2;
reg  signed [31:0] mul_ln1118_5_reg_1375;
wire  signed [31:0] select_ln340_13_fu_650_p3;
reg  signed [31:0] select_ln340_13_reg_1381;
wire  signed [31:0] mul_ln1118_6_fu_1225_p2;
reg  signed [31:0] mul_ln1118_6_reg_1387;
wire  signed [31:0] mul_ln1118_7_fu_1231_p2;
reg  signed [31:0] mul_ln1118_7_reg_1393;
reg   [0:0] tmp_66_reg_1399;
(* use_dsp48 = "no" *) wire   [31:0] add_ln703_6_fu_777_p2;
reg   [31:0] add_ln703_6_reg_1406;
reg   [0:0] tmp_67_reg_1412;
wire  signed [31:0] mul_ln1118_8_fu_1237_p2;
reg  signed [31:0] mul_ln1118_8_reg_1419;
wire   [31:0] select_ln340_16_fu_922_p3;
reg   [31:0] select_ln340_16_reg_1425;
reg   [0:0] p_Result_s_reg_1434;
wire   [0:0] r_1_fu_942_p2;
reg   [0:0] r_1_reg_1440;
wire   [0:0] Range2_all_ones_fu_958_p2;
reg   [0:0] Range2_all_ones_reg_1445;
wire   [0:0] Range1_all_ones_fu_974_p2;
reg   [0:0] Range1_all_ones_reg_1450;
wire   [0:0] Range1_all_zeros_fu_980_p2;
reg   [0:0] Range1_all_zeros_reg_1457;
wire    ap_block_pp0_stage0;
wire  signed [32:0] sext_ln703_fu_216_p1;
wire  signed [32:0] sext_ln703_1_fu_219_p1;
wire   [32:0] add_ln1192_fu_222_p2;
(* use_dsp48 = "no" *) wire   [31:0] add_ln703_fu_236_p2;
wire   [0:0] tmp_55_fu_240_p3;
wire   [0:0] tmp_fu_228_p3;
wire   [0:0] xor_ln786_fu_248_p2;
wire   [0:0] xor_ln340_fu_266_p2;
wire   [0:0] xor_ln340_8_fu_260_p2;
wire   [0:0] and_ln786_1_fu_254_p2;
wire   [0:0] or_ln340_1_fu_272_p2;
wire   [31:0] select_ln340_fu_278_p3;
wire   [31:0] select_ln388_fu_286_p3;
wire  signed [31:0] select_ln340_9_fu_294_p3;
wire  signed [32:0] sext_ln703_2_fu_302_p1;
wire  signed [32:0] sext_ln703_3_fu_306_p1;
wire   [32:0] add_ln1192_1_fu_309_p2;
wire   [0:0] xor_ln786_1_fu_336_p2;
wire   [0:0] and_ln786_2_fu_342_p2;
wire   [0:0] xor_ln340_1_fu_372_p2;
wire   [0:0] xor_ln340_9_fu_368_p2;
wire   [0:0] or_ln340_2_fu_377_p2;
wire   [31:0] select_ln340_1_fu_382_p3;
wire  signed [31:0] select_ln340_10_fu_389_p3;
wire  signed [32:0] sext_ln703_4_fu_396_p1;
wire  signed [32:0] sext_ln703_5_fu_400_p1;
wire   [32:0] add_ln1192_2_fu_403_p2;
(* use_dsp48 = "no" *) wire   [31:0] add_ln703_2_fu_417_p2;
wire   [0:0] tmp_59_fu_422_p3;
wire   [0:0] tmp_58_fu_409_p3;
wire   [0:0] xor_ln786_2_fu_430_p2;
wire   [0:0] xor_ln340_2_fu_448_p2;
wire   [0:0] xor_ln340_10_fu_442_p2;
wire   [0:0] and_ln786_3_fu_436_p2;
wire   [0:0] or_ln340_3_fu_454_p2;
wire   [31:0] select_ln340_2_fu_460_p3;
wire   [31:0] select_ln388_2_fu_468_p3;
wire  signed [31:0] select_ln340_11_fu_476_p3;
wire  signed [32:0] sext_ln703_6_fu_484_p1;
wire  signed [32:0] sext_ln703_7_fu_488_p1;
wire   [32:0] add_ln1192_3_fu_491_p2;
wire   [0:0] xor_ln786_3_fu_524_p2;
wire   [0:0] xor_ln340_3_fu_538_p2;
wire   [0:0] xor_ln340_11_fu_534_p2;
wire   [0:0] and_ln786_4_fu_529_p2;
wire   [0:0] or_ln340_4_fu_543_p2;
wire   [31:0] select_ln340_3_fu_548_p3;
wire   [31:0] select_ln388_3_fu_555_p3;
wire  signed [31:0] select_ln340_12_fu_562_p3;
wire  signed [32:0] sext_ln703_8_fu_570_p1;
wire  signed [32:0] sext_ln703_9_fu_574_p1;
wire   [32:0] add_ln1192_4_fu_577_p2;
(* use_dsp48 = "no" *) wire   [31:0] add_ln703_4_fu_591_p2;
wire   [0:0] tmp_63_fu_596_p3;
wire   [0:0] tmp_62_fu_583_p3;
wire   [0:0] xor_ln786_4_fu_604_p2;
wire   [0:0] xor_ln340_4_fu_622_p2;
wire   [0:0] xor_ln340_12_fu_616_p2;
wire   [0:0] and_ln786_5_fu_610_p2;
wire   [0:0] or_ln340_5_fu_628_p2;
wire   [31:0] select_ln340_4_fu_634_p3;
wire   [31:0] select_ln388_4_fu_642_p3;
wire  signed [32:0] sext_ln703_10_fu_670_p1;
wire  signed [32:0] sext_ln703_11_fu_673_p1;
wire   [32:0] add_ln1192_5_fu_676_p2;
(* use_dsp48 = "no" *) wire   [31:0] add_ln703_5_fu_690_p2;
wire   [0:0] tmp_65_fu_694_p3;
wire   [0:0] tmp_64_fu_682_p3;
wire   [0:0] xor_ln786_5_fu_702_p2;
wire   [0:0] xor_ln340_5_fu_720_p2;
wire   [0:0] xor_ln340_13_fu_714_p2;
wire   [0:0] and_ln786_6_fu_708_p2;
wire   [0:0] or_ln340_6_fu_726_p2;
wire   [31:0] select_ln340_5_fu_732_p3;
wire   [31:0] select_ln388_5_fu_740_p3;
wire  signed [31:0] select_ln340_14_fu_748_p3;
wire  signed [32:0] sext_ln703_12_fu_756_p1;
wire  signed [32:0] sext_ln703_13_fu_760_p1;
wire   [32:0] add_ln1192_6_fu_763_p2;
wire   [0:0] xor_ln786_6_fu_796_p2;
wire   [0:0] xor_ln340_6_fu_810_p2;
wire   [0:0] xor_ln340_14_fu_806_p2;
wire   [0:0] and_ln786_7_fu_801_p2;
wire   [0:0] or_ln340_7_fu_815_p2;
wire   [31:0] select_ln340_6_fu_820_p3;
wire   [31:0] select_ln388_6_fu_827_p3;
wire  signed [31:0] select_ln340_15_fu_834_p3;
wire  signed [32:0] sext_ln703_14_fu_842_p1;
wire  signed [32:0] sext_ln703_15_fu_846_p1;
wire   [32:0] add_ln1192_7_fu_849_p2;
(* use_dsp48 = "no" *) wire   [31:0] add_ln703_7_fu_863_p2;
wire   [0:0] tmp_69_fu_868_p3;
wire   [0:0] tmp_68_fu_855_p3;
wire   [0:0] xor_ln786_7_fu_876_p2;
wire   [0:0] xor_ln340_7_fu_894_p2;
wire   [0:0] xor_ln340_15_fu_888_p2;
wire   [0:0] and_ln786_8_fu_882_p2;
wire   [0:0] or_ln340_8_fu_900_p2;
wire   [31:0] select_ln340_7_fu_906_p3;
wire   [31:0] select_ln388_7_fu_914_p3;
wire   [6:0] trunc_ln718_fu_938_p1;
wire   [6:0] p_Result_s_53_fu_948_p4;
wire   [7:0] p_Result_1_fu_964_p4;
wire   [0:0] tmp_71_fu_995_p3;
wire   [0:0] tmp_73_fu_1014_p3;
wire   [0:0] r_fu_1009_p2;
wire   [0:0] and_ln415_fu_1021_p2;
wire   [15:0] zext_ln415_fu_1027_p1;
wire   [15:0] p_Val2_s_fu_986_p4;
wire   [15:0] p_Val2_1_fu_1031_p2;
wire   [0:0] tmp_74_fu_1037_p3;
wire   [0:0] p_Result_2_fu_1002_p3;
wire   [0:0] xor_ln416_fu_1045_p2;
wire   [0:0] carry_1_fu_1051_p2;
wire   [0:0] tmp_76_fu_1071_p3;
wire   [0:0] xor_ln779_fu_1078_p2;
wire   [0:0] and_ln779_fu_1084_p2;
wire   [0:0] deleted_zeros_fu_1065_p3;
wire   [0:0] p_Result_3_fu_1057_p3;
wire   [0:0] xor_ln785_fu_1101_p2;
wire   [0:0] or_ln785_fu_1107_p2;
wire   [0:0] xor_ln785_1_fu_1113_p2;
wire   [0:0] deleted_ones_fu_1089_p3;
wire   [0:0] and_ln781_fu_1096_p2;
wire   [0:0] and_ln786_fu_1124_p2;
wire   [0:0] or_ln786_fu_1130_p2;
wire   [0:0] xor_ln786_8_fu_1136_p2;
wire   [0:0] underflow_fu_1142_p2;
wire   [0:0] overflow_fu_1118_p2;
wire   [0:0] or_ln340_9_fu_1153_p2;
wire   [0:0] or_ln340_fu_1147_p2;
wire   [0:0] or_ln340_10_fu_1159_p2;
wire   [15:0] select_ln340_8_fu_1165_p3;
wire   [15:0] select_ln388_8_fu_1173_p3;
wire   [15:0] select_ln340_17_fu_1181_p3;
reg    ap_ce_reg;
reg  signed [15:0] p_read_int_reg;
reg  signed [15:0] p_read1_int_reg;
reg  signed [15:0] p_read2_int_reg;
reg   [15:0] p_read3_int_reg;
reg   [15:0] p_read4_int_reg;
reg   [15:0] p_read5_int_reg;
reg   [15:0] p_read6_int_reg;
reg   [15:0] p_read7_int_reg;
reg   [15:0] p_read8_int_reg;
reg  signed [15:0] p_read9_int_reg;
reg  signed [15:0] p_read10_int_reg;
reg  signed [15:0] p_read11_int_reg;
reg   [15:0] p_read12_int_reg;
reg   [15:0] p_read13_int_reg;
reg   [15:0] p_read14_int_reg;
reg   [15:0] p_read15_int_reg;
reg   [15:0] p_read16_int_reg;
reg   [15:0] p_read17_int_reg;
reg   [15:0] ap_return_int_reg;

yolo_conv_top_mul_mul_16s_16s_32_1_0 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
yolo_conv_top_mul_mul_16s_16s_32_1_0_U6(
    .din0(p_read_int_reg),
    .din1(p_read9_int_reg),
    .dout(mul_ln1118_fu_1189_p2)
);

yolo_conv_top_mul_mul_16s_16s_32_1_0 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
yolo_conv_top_mul_mul_16s_16s_32_1_0_U7(
    .din0(p_read1_int_reg),
    .din1(p_read10_int_reg),
    .dout(mul_ln1118_1_fu_1195_p2)
);

yolo_conv_top_mul_mul_16s_16s_32_1_0 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
yolo_conv_top_mul_mul_16s_16s_32_1_0_U8(
    .din0(p_read2_int_reg),
    .din1(p_read11_int_reg),
    .dout(mul_ln1118_2_fu_1201_p2)
);

yolo_conv_top_mul_mul_16s_16s_32_1_0 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
yolo_conv_top_mul_mul_16s_16s_32_1_0_U9(
    .din0(p_read_15_reg_1298),
    .din1(p_read_6_reg_1268),
    .dout(mul_ln1118_3_fu_1207_p2)
);

yolo_conv_top_mul_mul_16s_16s_32_1_0 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
yolo_conv_top_mul_mul_16s_16s_32_1_0_U10(
    .din0(p_read_14_reg_1293),
    .din1(p_read_5_reg_1263),
    .dout(mul_ln1118_4_fu_1213_p2)
);

yolo_conv_top_mul_mul_16s_16s_32_1_0 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
yolo_conv_top_mul_mul_16s_16s_32_1_0_U11(
    .din0(p_read_13_reg_1288_pp0_iter1_reg),
    .din1(p_read_4_reg_1258_pp0_iter1_reg),
    .dout(mul_ln1118_5_fu_1219_p2)
);

yolo_conv_top_mul_mul_16s_16s_32_1_0 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
yolo_conv_top_mul_mul_16s_16s_32_1_0_U12(
    .din0(p_read_12_reg_1283_pp0_iter2_reg),
    .din1(p_read_3_reg_1253_pp0_iter2_reg),
    .dout(mul_ln1118_6_fu_1225_p2)
);

yolo_conv_top_mul_mul_16s_16s_32_1_0 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
yolo_conv_top_mul_mul_16s_16s_32_1_0_U13(
    .din0(p_read_11_reg_1278_pp0_iter2_reg),
    .din1(p_read_2_reg_1248_pp0_iter2_reg),
    .dout(mul_ln1118_7_fu_1231_p2)
);

yolo_conv_top_mul_mul_16s_16s_32_1_0 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
yolo_conv_top_mul_mul_16s_16s_32_1_0_U14(
    .din0(p_read_10_reg_1273_pp0_iter3_reg),
    .din1(p_read_1_reg_1243_pp0_iter3_reg),
    .dout(mul_ln1118_8_fu_1237_p2)
);

always @ (posedge ap_clk) begin
    ap_ce_reg <= ap_ce;
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_ce_reg) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        Range1_all_ones_reg_1450 <= Range1_all_ones_fu_974_p2;
        Range1_all_zeros_reg_1457 <= Range1_all_zeros_fu_980_p2;
        Range2_all_ones_reg_1445 <= Range2_all_ones_fu_958_p2;
        add_ln703_1_reg_1327 <= add_ln703_1_fu_323_p2;
        add_ln703_3_reg_1362 <= add_ln703_3_fu_505_p2;
        add_ln703_6_reg_1406 <= add_ln703_6_fu_777_p2;
        mul_ln1118_1_reg_1309 <= mul_ln1118_1_fu_1195_p2;
        mul_ln1118_2_reg_1315 <= mul_ln1118_2_fu_1201_p2;
        mul_ln1118_3_reg_1343 <= mul_ln1118_3_fu_1207_p2;
        mul_ln1118_4_reg_1349 <= mul_ln1118_4_fu_1213_p2;
        mul_ln1118_5_reg_1375 <= mul_ln1118_5_fu_1219_p2;
        mul_ln1118_6_reg_1387 <= mul_ln1118_6_fu_1225_p2;
        mul_ln1118_7_reg_1393 <= mul_ln1118_7_fu_1231_p2;
        mul_ln1118_8_reg_1419 <= mul_ln1118_8_fu_1237_p2;
        mul_ln1118_reg_1303 <= mul_ln1118_fu_1189_p2;
        p_Result_s_reg_1434 <= select_ln340_16_fu_922_p3[32'd31];
        p_read_10_reg_1273 <= p_read8_int_reg;
        p_read_10_reg_1273_pp0_iter1_reg <= p_read_10_reg_1273;
        p_read_10_reg_1273_pp0_iter2_reg <= p_read_10_reg_1273_pp0_iter1_reg;
        p_read_10_reg_1273_pp0_iter3_reg <= p_read_10_reg_1273_pp0_iter2_reg;
        p_read_11_reg_1278 <= p_read7_int_reg;
        p_read_11_reg_1278_pp0_iter1_reg <= p_read_11_reg_1278;
        p_read_11_reg_1278_pp0_iter2_reg <= p_read_11_reg_1278_pp0_iter1_reg;
        p_read_12_reg_1283 <= p_read6_int_reg;
        p_read_12_reg_1283_pp0_iter1_reg <= p_read_12_reg_1283;
        p_read_12_reg_1283_pp0_iter2_reg <= p_read_12_reg_1283_pp0_iter1_reg;
        p_read_13_reg_1288 <= p_read5_int_reg;
        p_read_13_reg_1288_pp0_iter1_reg <= p_read_13_reg_1288;
        p_read_14_reg_1293 <= p_read4_int_reg;
        p_read_15_reg_1298 <= p_read3_int_reg;
        p_read_1_reg_1243 <= p_read17_int_reg;
        p_read_1_reg_1243_pp0_iter1_reg <= p_read_1_reg_1243;
        p_read_1_reg_1243_pp0_iter2_reg <= p_read_1_reg_1243_pp0_iter1_reg;
        p_read_1_reg_1243_pp0_iter3_reg <= p_read_1_reg_1243_pp0_iter2_reg;
        p_read_2_reg_1248 <= p_read16_int_reg;
        p_read_2_reg_1248_pp0_iter1_reg <= p_read_2_reg_1248;
        p_read_2_reg_1248_pp0_iter2_reg <= p_read_2_reg_1248_pp0_iter1_reg;
        p_read_3_reg_1253 <= p_read15_int_reg;
        p_read_3_reg_1253_pp0_iter1_reg <= p_read_3_reg_1253;
        p_read_3_reg_1253_pp0_iter2_reg <= p_read_3_reg_1253_pp0_iter1_reg;
        p_read_4_reg_1258 <= p_read14_int_reg;
        p_read_4_reg_1258_pp0_iter1_reg <= p_read_4_reg_1258;
        p_read_5_reg_1263 <= p_read13_int_reg;
        p_read_6_reg_1268 <= p_read12_int_reg;
        r_1_reg_1440 <= r_1_fu_942_p2;
        select_ln340_13_reg_1381 <= select_ln340_13_fu_650_p3;
        select_ln340_16_reg_1425 <= select_ln340_16_fu_922_p3;
        select_ln388_1_reg_1338 <= select_ln388_1_fu_348_p3;
        tmp_56_reg_1321 <= add_ln1192_1_fu_309_p2[32'd32];
        tmp_57_reg_1332 <= add_ln703_1_fu_323_p2[32'd31];
        tmp_60_reg_1355 <= add_ln1192_3_fu_491_p2[32'd32];
        tmp_61_reg_1368 <= add_ln703_3_fu_505_p2[32'd31];
        tmp_66_reg_1399 <= add_ln1192_6_fu_763_p2[32'd32];
        tmp_67_reg_1412 <= add_ln703_6_fu_777_p2[32'd31];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_ce_reg)) begin
        ap_return_int_reg <= select_ln340_17_fu_1181_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_ce)) begin
        p_read10_int_reg <= p_read10;
        p_read11_int_reg <= p_read11;
        p_read12_int_reg <= p_read12;
        p_read13_int_reg <= p_read13;
        p_read14_int_reg <= p_read14;
        p_read15_int_reg <= p_read15;
        p_read16_int_reg <= p_read16;
        p_read17_int_reg <= p_read17;
        p_read1_int_reg <= p_read1;
        p_read2_int_reg <= p_read2;
        p_read3_int_reg <= p_read3;
        p_read4_int_reg <= p_read4;
        p_read5_int_reg <= p_read5;
        p_read6_int_reg <= p_read6;
        p_read7_int_reg <= p_read7;
        p_read8_int_reg <= p_read8;
        p_read9_int_reg <= p_read9;
        p_read_int_reg <= p_read;
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return = ap_return_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return = select_ln340_17_fu_1181_p3;
    end
end

assign Range1_all_ones_fu_974_p2 = ((p_Result_1_fu_964_p4 == 8'd255) ? 1'b1 : 1'b0);

assign Range1_all_zeros_fu_980_p2 = ((p_Result_1_fu_964_p4 == 8'd0) ? 1'b1 : 1'b0);

assign Range2_all_ones_fu_958_p2 = ((p_Result_s_53_fu_948_p4 == 7'd127) ? 1'b1 : 1'b0);

assign add_ln1192_1_fu_309_p2 = ($signed(sext_ln703_2_fu_302_p1) + $signed(sext_ln703_3_fu_306_p1));

assign add_ln1192_2_fu_403_p2 = ($signed(sext_ln703_4_fu_396_p1) + $signed(sext_ln703_5_fu_400_p1));

assign add_ln1192_3_fu_491_p2 = ($signed(sext_ln703_6_fu_484_p1) + $signed(sext_ln703_7_fu_488_p1));

assign add_ln1192_4_fu_577_p2 = ($signed(sext_ln703_8_fu_570_p1) + $signed(sext_ln703_9_fu_574_p1));

assign add_ln1192_5_fu_676_p2 = ($signed(sext_ln703_10_fu_670_p1) + $signed(sext_ln703_11_fu_673_p1));

assign add_ln1192_6_fu_763_p2 = ($signed(sext_ln703_12_fu_756_p1) + $signed(sext_ln703_13_fu_760_p1));

assign add_ln1192_7_fu_849_p2 = ($signed(sext_ln703_14_fu_842_p1) + $signed(sext_ln703_15_fu_846_p1));

assign add_ln1192_fu_222_p2 = ($signed(sext_ln703_fu_216_p1) + $signed(sext_ln703_1_fu_219_p1));

assign add_ln703_1_fu_323_p2 = ($signed(mul_ln1118_2_reg_1315) + $signed(select_ln340_9_fu_294_p3));

assign add_ln703_2_fu_417_p2 = ($signed(mul_ln1118_3_reg_1343) + $signed(select_ln340_10_fu_389_p3));

assign add_ln703_3_fu_505_p2 = ($signed(mul_ln1118_4_reg_1349) + $signed(select_ln340_11_fu_476_p3));

assign add_ln703_4_fu_591_p2 = ($signed(mul_ln1118_5_reg_1375) + $signed(select_ln340_12_fu_562_p3));

assign add_ln703_5_fu_690_p2 = ($signed(mul_ln1118_6_reg_1387) + $signed(select_ln340_13_reg_1381));

assign add_ln703_6_fu_777_p2 = ($signed(mul_ln1118_7_reg_1393) + $signed(select_ln340_14_fu_748_p3));

assign add_ln703_7_fu_863_p2 = ($signed(mul_ln1118_8_reg_1419) + $signed(select_ln340_15_fu_834_p3));

assign add_ln703_fu_236_p2 = ($signed(mul_ln1118_1_reg_1309) + $signed(mul_ln1118_reg_1303));

assign and_ln415_fu_1021_p2 = (tmp_73_fu_1014_p3 & r_fu_1009_p2);

assign and_ln779_fu_1084_p2 = (xor_ln779_fu_1078_p2 & Range2_all_ones_reg_1445);

assign and_ln781_fu_1096_p2 = (carry_1_fu_1051_p2 & Range1_all_ones_reg_1450);

assign and_ln786_1_fu_254_p2 = (xor_ln786_fu_248_p2 & tmp_fu_228_p3);

assign and_ln786_2_fu_342_p2 = (xor_ln786_1_fu_336_p2 & tmp_56_fu_315_p3);

assign and_ln786_3_fu_436_p2 = (xor_ln786_2_fu_430_p2 & tmp_58_fu_409_p3);

assign and_ln786_4_fu_529_p2 = (xor_ln786_3_fu_524_p2 & tmp_60_reg_1355);

assign and_ln786_5_fu_610_p2 = (xor_ln786_4_fu_604_p2 & tmp_62_fu_583_p3);

assign and_ln786_6_fu_708_p2 = (xor_ln786_5_fu_702_p2 & tmp_64_fu_682_p3);

assign and_ln786_7_fu_801_p2 = (xor_ln786_6_fu_796_p2 & tmp_66_reg_1399);

assign and_ln786_8_fu_882_p2 = (xor_ln786_7_fu_876_p2 & tmp_68_fu_855_p3);

assign and_ln786_fu_1124_p2 = (p_Result_3_fu_1057_p3 & deleted_ones_fu_1089_p3);

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign carry_1_fu_1051_p2 = (xor_ln416_fu_1045_p2 & p_Result_2_fu_1002_p3);

assign deleted_ones_fu_1089_p3 = ((carry_1_fu_1051_p2[0:0] === 1'b1) ? and_ln779_fu_1084_p2 : Range1_all_ones_reg_1450);

assign deleted_zeros_fu_1065_p3 = ((carry_1_fu_1051_p2[0:0] === 1'b1) ? Range1_all_ones_reg_1450 : Range1_all_zeros_reg_1457);

assign or_ln340_10_fu_1159_p2 = (or_ln340_9_fu_1153_p2 | and_ln781_fu_1096_p2);

assign or_ln340_1_fu_272_p2 = (xor_ln340_fu_266_p2 | tmp_55_fu_240_p3);

assign or_ln340_2_fu_377_p2 = (xor_ln340_1_fu_372_p2 | tmp_57_reg_1332);

assign or_ln340_3_fu_454_p2 = (xor_ln340_2_fu_448_p2 | tmp_59_fu_422_p3);

assign or_ln340_4_fu_543_p2 = (xor_ln340_3_fu_538_p2 | tmp_61_reg_1368);

assign or_ln340_5_fu_628_p2 = (xor_ln340_4_fu_622_p2 | tmp_63_fu_596_p3);

assign or_ln340_6_fu_726_p2 = (xor_ln340_5_fu_720_p2 | tmp_65_fu_694_p3);

assign or_ln340_7_fu_815_p2 = (xor_ln340_6_fu_810_p2 | tmp_67_reg_1412);

assign or_ln340_8_fu_900_p2 = (xor_ln340_7_fu_894_p2 | tmp_69_fu_868_p3);

assign or_ln340_9_fu_1153_p2 = (xor_ln785_1_fu_1113_p2 | and_ln786_fu_1124_p2);

assign or_ln340_fu_1147_p2 = (underflow_fu_1142_p2 | overflow_fu_1118_p2);

assign or_ln785_fu_1107_p2 = (xor_ln785_fu_1101_p2 | p_Result_3_fu_1057_p3);

assign or_ln786_fu_1130_p2 = (and_ln786_fu_1124_p2 | and_ln781_fu_1096_p2);

assign overflow_fu_1118_p2 = (xor_ln785_1_fu_1113_p2 & or_ln785_fu_1107_p2);

assign p_Result_1_fu_964_p4 = {{select_ln340_16_fu_922_p3[31:24]}};

assign p_Result_2_fu_1002_p3 = select_ln340_16_reg_1425[32'd23];

assign p_Result_3_fu_1057_p3 = p_Val2_1_fu_1031_p2[32'd15];

assign p_Result_s_53_fu_948_p4 = {{select_ln340_16_fu_922_p3[31:25]}};

assign p_Val2_1_fu_1031_p2 = (zext_ln415_fu_1027_p1 + p_Val2_s_fu_986_p4);

assign p_Val2_s_fu_986_p4 = {{select_ln340_16_reg_1425[23:8]}};

assign r_1_fu_942_p2 = ((trunc_ln718_fu_938_p1 != 7'd0) ? 1'b1 : 1'b0);

assign r_fu_1009_p2 = (tmp_71_fu_995_p3 | r_1_reg_1440);

assign select_ln340_10_fu_389_p3 = ((or_ln340_2_fu_377_p2[0:0] === 1'b1) ? select_ln340_1_fu_382_p3 : select_ln388_1_reg_1338);

assign select_ln340_11_fu_476_p3 = ((or_ln340_3_fu_454_p2[0:0] === 1'b1) ? select_ln340_2_fu_460_p3 : select_ln388_2_fu_468_p3);

assign select_ln340_12_fu_562_p3 = ((or_ln340_4_fu_543_p2[0:0] === 1'b1) ? select_ln340_3_fu_548_p3 : select_ln388_3_fu_555_p3);

assign select_ln340_13_fu_650_p3 = ((or_ln340_5_fu_628_p2[0:0] === 1'b1) ? select_ln340_4_fu_634_p3 : select_ln388_4_fu_642_p3);

assign select_ln340_14_fu_748_p3 = ((or_ln340_6_fu_726_p2[0:0] === 1'b1) ? select_ln340_5_fu_732_p3 : select_ln388_5_fu_740_p3);

assign select_ln340_15_fu_834_p3 = ((or_ln340_7_fu_815_p2[0:0] === 1'b1) ? select_ln340_6_fu_820_p3 : select_ln388_6_fu_827_p3);

assign select_ln340_16_fu_922_p3 = ((or_ln340_8_fu_900_p2[0:0] === 1'b1) ? select_ln340_7_fu_906_p3 : select_ln388_7_fu_914_p3);

assign select_ln340_17_fu_1181_p3 = ((or_ln340_10_fu_1159_p2[0:0] === 1'b1) ? select_ln340_8_fu_1165_p3 : select_ln388_8_fu_1173_p3);

assign select_ln340_1_fu_382_p3 = ((xor_ln340_9_fu_368_p2[0:0] === 1'b1) ? 32'd2147483647 : add_ln703_1_reg_1327);

assign select_ln340_2_fu_460_p3 = ((xor_ln340_10_fu_442_p2[0:0] === 1'b1) ? 32'd2147483647 : add_ln703_2_fu_417_p2);

assign select_ln340_3_fu_548_p3 = ((xor_ln340_11_fu_534_p2[0:0] === 1'b1) ? 32'd2147483647 : add_ln703_3_reg_1362);

assign select_ln340_4_fu_634_p3 = ((xor_ln340_12_fu_616_p2[0:0] === 1'b1) ? 32'd2147483647 : add_ln703_4_fu_591_p2);

assign select_ln340_5_fu_732_p3 = ((xor_ln340_13_fu_714_p2[0:0] === 1'b1) ? 32'd2147483647 : add_ln703_5_fu_690_p2);

assign select_ln340_6_fu_820_p3 = ((xor_ln340_14_fu_806_p2[0:0] === 1'b1) ? 32'd2147483647 : add_ln703_6_reg_1406);

assign select_ln340_7_fu_906_p3 = ((xor_ln340_15_fu_888_p2[0:0] === 1'b1) ? 32'd2147483647 : add_ln703_7_fu_863_p2);

assign select_ln340_8_fu_1165_p3 = ((or_ln340_fu_1147_p2[0:0] === 1'b1) ? 16'd32767 : p_Val2_1_fu_1031_p2);

assign select_ln340_9_fu_294_p3 = ((or_ln340_1_fu_272_p2[0:0] === 1'b1) ? select_ln340_fu_278_p3 : select_ln388_fu_286_p3);

assign select_ln340_fu_278_p3 = ((xor_ln340_8_fu_260_p2[0:0] === 1'b1) ? 32'd2147483647 : add_ln703_fu_236_p2);

assign select_ln388_1_fu_348_p3 = ((and_ln786_2_fu_342_p2[0:0] === 1'b1) ? 32'd2147483648 : add_ln703_1_fu_323_p2);

assign select_ln388_2_fu_468_p3 = ((and_ln786_3_fu_436_p2[0:0] === 1'b1) ? 32'd2147483648 : add_ln703_2_fu_417_p2);

assign select_ln388_3_fu_555_p3 = ((and_ln786_4_fu_529_p2[0:0] === 1'b1) ? 32'd2147483648 : add_ln703_3_reg_1362);

assign select_ln388_4_fu_642_p3 = ((and_ln786_5_fu_610_p2[0:0] === 1'b1) ? 32'd2147483648 : add_ln703_4_fu_591_p2);

assign select_ln388_5_fu_740_p3 = ((and_ln786_6_fu_708_p2[0:0] === 1'b1) ? 32'd2147483648 : add_ln703_5_fu_690_p2);

assign select_ln388_6_fu_827_p3 = ((and_ln786_7_fu_801_p2[0:0] === 1'b1) ? 32'd2147483648 : add_ln703_6_reg_1406);

assign select_ln388_7_fu_914_p3 = ((and_ln786_8_fu_882_p2[0:0] === 1'b1) ? 32'd2147483648 : add_ln703_7_fu_863_p2);

assign select_ln388_8_fu_1173_p3 = ((underflow_fu_1142_p2[0:0] === 1'b1) ? 16'd32768 : p_Val2_1_fu_1031_p2);

assign select_ln388_fu_286_p3 = ((and_ln786_1_fu_254_p2[0:0] === 1'b1) ? 32'd2147483648 : add_ln703_fu_236_p2);

assign sext_ln703_10_fu_670_p1 = select_ln340_13_reg_1381;

assign sext_ln703_11_fu_673_p1 = mul_ln1118_6_reg_1387;

assign sext_ln703_12_fu_756_p1 = select_ln340_14_fu_748_p3;

assign sext_ln703_13_fu_760_p1 = mul_ln1118_7_reg_1393;

assign sext_ln703_14_fu_842_p1 = select_ln340_15_fu_834_p3;

assign sext_ln703_15_fu_846_p1 = mul_ln1118_8_reg_1419;

assign sext_ln703_1_fu_219_p1 = mul_ln1118_1_reg_1309;

assign sext_ln703_2_fu_302_p1 = select_ln340_9_fu_294_p3;

assign sext_ln703_3_fu_306_p1 = mul_ln1118_2_reg_1315;

assign sext_ln703_4_fu_396_p1 = select_ln340_10_fu_389_p3;

assign sext_ln703_5_fu_400_p1 = mul_ln1118_3_reg_1343;

assign sext_ln703_6_fu_484_p1 = select_ln340_11_fu_476_p3;

assign sext_ln703_7_fu_488_p1 = mul_ln1118_4_reg_1349;

assign sext_ln703_8_fu_570_p1 = select_ln340_12_fu_562_p3;

assign sext_ln703_9_fu_574_p1 = mul_ln1118_5_reg_1375;

assign sext_ln703_fu_216_p1 = mul_ln1118_reg_1303;

assign tmp_55_fu_240_p3 = add_ln703_fu_236_p2[32'd31];

assign tmp_56_fu_315_p3 = add_ln1192_1_fu_309_p2[32'd32];

assign tmp_57_fu_328_p3 = add_ln703_1_fu_323_p2[32'd31];

assign tmp_58_fu_409_p3 = add_ln1192_2_fu_403_p2[32'd32];

assign tmp_59_fu_422_p3 = add_ln703_2_fu_417_p2[32'd31];

assign tmp_62_fu_583_p3 = add_ln1192_4_fu_577_p2[32'd32];

assign tmp_63_fu_596_p3 = add_ln703_4_fu_591_p2[32'd31];

assign tmp_64_fu_682_p3 = add_ln1192_5_fu_676_p2[32'd32];

assign tmp_65_fu_694_p3 = add_ln703_5_fu_690_p2[32'd31];

assign tmp_68_fu_855_p3 = add_ln1192_7_fu_849_p2[32'd32];

assign tmp_69_fu_868_p3 = add_ln703_7_fu_863_p2[32'd31];

assign tmp_71_fu_995_p3 = select_ln340_16_reg_1425[32'd8];

assign tmp_73_fu_1014_p3 = select_ln340_16_reg_1425[32'd7];

assign tmp_74_fu_1037_p3 = p_Val2_1_fu_1031_p2[32'd15];

assign tmp_76_fu_1071_p3 = select_ln340_16_reg_1425[32'd24];

assign tmp_fu_228_p3 = add_ln1192_fu_222_p2[32'd32];

assign trunc_ln718_fu_938_p1 = select_ln340_16_fu_922_p3[6:0];

assign underflow_fu_1142_p2 = (xor_ln786_8_fu_1136_p2 & p_Result_s_reg_1434);

assign xor_ln340_10_fu_442_p2 = (tmp_59_fu_422_p3 ^ tmp_58_fu_409_p3);

assign xor_ln340_11_fu_534_p2 = (tmp_61_reg_1368 ^ tmp_60_reg_1355);

assign xor_ln340_12_fu_616_p2 = (tmp_63_fu_596_p3 ^ tmp_62_fu_583_p3);

assign xor_ln340_13_fu_714_p2 = (tmp_65_fu_694_p3 ^ tmp_64_fu_682_p3);

assign xor_ln340_14_fu_806_p2 = (tmp_67_reg_1412 ^ tmp_66_reg_1399);

assign xor_ln340_15_fu_888_p2 = (tmp_69_fu_868_p3 ^ tmp_68_fu_855_p3);

assign xor_ln340_1_fu_372_p2 = (tmp_56_reg_1321 ^ 1'd1);

assign xor_ln340_2_fu_448_p2 = (tmp_58_fu_409_p3 ^ 1'd1);

assign xor_ln340_3_fu_538_p2 = (tmp_60_reg_1355 ^ 1'd1);

assign xor_ln340_4_fu_622_p2 = (tmp_62_fu_583_p3 ^ 1'd1);

assign xor_ln340_5_fu_720_p2 = (tmp_64_fu_682_p3 ^ 1'd1);

assign xor_ln340_6_fu_810_p2 = (tmp_66_reg_1399 ^ 1'd1);

assign xor_ln340_7_fu_894_p2 = (tmp_68_fu_855_p3 ^ 1'd1);

assign xor_ln340_8_fu_260_p2 = (tmp_fu_228_p3 ^ tmp_55_fu_240_p3);

assign xor_ln340_9_fu_368_p2 = (tmp_57_reg_1332 ^ tmp_56_reg_1321);

assign xor_ln340_fu_266_p2 = (tmp_fu_228_p3 ^ 1'd1);

assign xor_ln416_fu_1045_p2 = (tmp_74_fu_1037_p3 ^ 1'd1);

assign xor_ln779_fu_1078_p2 = (tmp_76_fu_1071_p3 ^ 1'd1);

assign xor_ln785_1_fu_1113_p2 = (p_Result_s_reg_1434 ^ 1'd1);

assign xor_ln785_fu_1101_p2 = (deleted_zeros_fu_1065_p3 ^ 1'd1);

assign xor_ln786_1_fu_336_p2 = (tmp_57_fu_328_p3 ^ 1'd1);

assign xor_ln786_2_fu_430_p2 = (tmp_59_fu_422_p3 ^ 1'd1);

assign xor_ln786_3_fu_524_p2 = (tmp_61_reg_1368 ^ 1'd1);

assign xor_ln786_4_fu_604_p2 = (tmp_63_fu_596_p3 ^ 1'd1);

assign xor_ln786_5_fu_702_p2 = (tmp_65_fu_694_p3 ^ 1'd1);

assign xor_ln786_6_fu_796_p2 = (tmp_67_reg_1412 ^ 1'd1);

assign xor_ln786_7_fu_876_p2 = (tmp_69_fu_868_p3 ^ 1'd1);

assign xor_ln786_8_fu_1136_p2 = (or_ln786_fu_1130_p2 ^ 1'd1);

assign xor_ln786_fu_248_p2 = (tmp_55_fu_240_p3 ^ 1'd1);

assign zext_ln415_fu_1027_p1 = and_ln415_fu_1021_p2;

endmodule //window_macc
