-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2019.1
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity window_macc is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    ap_ce : IN STD_LOGIC;
    window_0_0_val_V_r : IN STD_LOGIC_VECTOR (15 downto 0);
    window_0_1_val_V_r : IN STD_LOGIC_VECTOR (15 downto 0);
    window_0_2_val_V_r : IN STD_LOGIC_VECTOR (15 downto 0);
    window_1_0_val_V_r : IN STD_LOGIC_VECTOR (15 downto 0);
    window_1_1_val_V_r : IN STD_LOGIC_VECTOR (15 downto 0);
    window_1_2_val_V_r : IN STD_LOGIC_VECTOR (15 downto 0);
    window_2_0_val_V_r : IN STD_LOGIC_VECTOR (15 downto 0);
    window_2_1_val_V_r : IN STD_LOGIC_VECTOR (15 downto 0);
    window_2_2_val_V_r : IN STD_LOGIC_VECTOR (15 downto 0);
    weight_V_offset : IN STD_LOGIC_VECTOR (8 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (15 downto 0) );
end;


architecture behav of window_macc is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv9_1 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    constant ap_const_lv9_2 : STD_LOGIC_VECTOR (8 downto 0) := "000000010";
    constant ap_const_lv9_3 : STD_LOGIC_VECTOR (8 downto 0) := "000000011";
    constant ap_const_lv9_4 : STD_LOGIC_VECTOR (8 downto 0) := "000000100";
    constant ap_const_lv9_5 : STD_LOGIC_VECTOR (8 downto 0) := "000000101";
    constant ap_const_lv9_6 : STD_LOGIC_VECTOR (8 downto 0) := "000000110";
    constant ap_const_lv9_7 : STD_LOGIC_VECTOR (8 downto 0) := "000000111";
    constant ap_const_lv9_8 : STD_LOGIC_VECTOR (8 downto 0) := "000001000";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv5_1F : STD_LOGIC_VECTOR (4 downto 0) := "11111";
    constant ap_const_lv6_3F : STD_LOGIC_VECTOR (5 downto 0) := "111111";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv16_7FFF : STD_LOGIC_VECTOR (15 downto 0) := "0111111111111111";
    constant ap_const_lv16_8000 : STD_LOGIC_VECTOR (15 downto 0) := "1000000000000000";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal kernel_weight_fp_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal kernel_weight_fp_ce0 : STD_LOGIC;
    signal kernel_weight_fp_q0 : STD_LOGIC_VECTOR (13 downto 0);
    signal kernel_weight_fp_address1 : STD_LOGIC_VECTOR (8 downto 0);
    signal kernel_weight_fp_ce1 : STD_LOGIC;
    signal kernel_weight_fp_q1 : STD_LOGIC_VECTOR (13 downto 0);
    signal kernel_weight_fp_address2 : STD_LOGIC_VECTOR (8 downto 0);
    signal kernel_weight_fp_ce2 : STD_LOGIC;
    signal kernel_weight_fp_q2 : STD_LOGIC_VECTOR (13 downto 0);
    signal kernel_weight_fp_address3 : STD_LOGIC_VECTOR (8 downto 0);
    signal kernel_weight_fp_ce3 : STD_LOGIC;
    signal kernel_weight_fp_q3 : STD_LOGIC_VECTOR (13 downto 0);
    signal kernel_weight_fp_address4 : STD_LOGIC_VECTOR (8 downto 0);
    signal kernel_weight_fp_ce4 : STD_LOGIC;
    signal kernel_weight_fp_q4 : STD_LOGIC_VECTOR (13 downto 0);
    signal kernel_weight_fp_address5 : STD_LOGIC_VECTOR (8 downto 0);
    signal kernel_weight_fp_ce5 : STD_LOGIC;
    signal kernel_weight_fp_q5 : STD_LOGIC_VECTOR (13 downto 0);
    signal kernel_weight_fp_address6 : STD_LOGIC_VECTOR (8 downto 0);
    signal kernel_weight_fp_ce6 : STD_LOGIC;
    signal kernel_weight_fp_q6 : STD_LOGIC_VECTOR (13 downto 0);
    signal kernel_weight_fp_address7 : STD_LOGIC_VECTOR (8 downto 0);
    signal kernel_weight_fp_ce7 : STD_LOGIC;
    signal kernel_weight_fp_q7 : STD_LOGIC_VECTOR (13 downto 0);
    signal kernel_weight_fp_address8 : STD_LOGIC_VECTOR (8 downto 0);
    signal kernel_weight_fp_ce8 : STD_LOGIC;
    signal kernel_weight_fp_q8 : STD_LOGIC_VECTOR (13 downto 0);
    signal window_2_2_val_V_r_1_reg_3420 : STD_LOGIC_VECTOR (15 downto 0);
    signal window_2_2_val_V_r_1_reg_3420_pp0_iter1_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal window_2_1_val_V_r_1_reg_3425 : STD_LOGIC_VECTOR (15 downto 0);
    signal window_2_1_val_V_r_1_reg_3425_pp0_iter1_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal window_2_0_val_V_r_1_reg_3430 : STD_LOGIC_VECTOR (15 downto 0);
    signal window_2_0_val_V_r_1_reg_3430_pp0_iter1_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal window_1_2_val_V_r_1_reg_3435 : STD_LOGIC_VECTOR (15 downto 0);
    signal window_1_2_val_V_r_1_reg_3435_pp0_iter1_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal window_1_1_val_V_r_1_reg_3440 : STD_LOGIC_VECTOR (15 downto 0);
    signal window_1_1_val_V_r_1_reg_3440_pp0_iter1_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal window_1_0_val_V_r_1_reg_3445 : STD_LOGIC_VECTOR (15 downto 0);
    signal window_1_0_val_V_r_1_reg_3445_pp0_iter1_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal window_0_2_val_V_r_1_reg_3450 : STD_LOGIC_VECTOR (15 downto 0);
    signal window_0_2_val_V_r_1_reg_3450_pp0_iter1_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal window_0_1_val_V_r_1_reg_3455 : STD_LOGIC_VECTOR (15 downto 0);
    signal window_0_1_val_V_r_1_reg_3455_pp0_iter1_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal window_0_0_val_V_r_1_reg_3460 : STD_LOGIC_VECTOR (15 downto 0);
    signal window_0_0_val_V_r_1_reg_3460_pp0_iter1_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal kernel_weight_fp_loa_reg_3510 : STD_LOGIC_VECTOR (13 downto 0);
    signal kernel_weight_fp_loa_1_reg_3515 : STD_LOGIC_VECTOR (13 downto 0);
    signal kernel_weight_fp_loa_2_reg_3520 : STD_LOGIC_VECTOR (13 downto 0);
    signal kernel_weight_fp_loa_3_reg_3525 : STD_LOGIC_VECTOR (13 downto 0);
    signal kernel_weight_fp_loa_4_reg_3530 : STD_LOGIC_VECTOR (13 downto 0);
    signal kernel_weight_fp_loa_5_reg_3535 : STD_LOGIC_VECTOR (13 downto 0);
    signal kernel_weight_fp_loa_6_reg_3540 : STD_LOGIC_VECTOR (13 downto 0);
    signal kernel_weight_fp_loa_7_reg_3545 : STD_LOGIC_VECTOR (13 downto 0);
    signal kernel_weight_fp_loa_8_reg_3550 : STD_LOGIC_VECTOR (13 downto 0);
    signal mul_ln1118_fu_3330_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal mul_ln1118_reg_3555 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_reg_3564 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln718_fu_363_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal trunc_ln718_reg_3570 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_248_reg_3575 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_249_reg_3580 : STD_LOGIC_VECTOR (5 downto 0);
    signal mul_ln1118_16_fu_3340_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal mul_ln1118_16_reg_3586 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_251_reg_3595 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln718_16_fu_397_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal trunc_ln718_16_reg_3601 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_257_reg_3606 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_258_reg_3611 : STD_LOGIC_VECTOR (5 downto 0);
    signal mul_ln1118_17_fu_3350_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal mul_ln1118_17_reg_3617 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_262_reg_3626 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln718_17_fu_431_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal trunc_ln718_17_reg_3632 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_268_reg_3637 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_269_reg_3642 : STD_LOGIC_VECTOR (5 downto 0);
    signal mul_ln1118_18_fu_3360_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal mul_ln1118_18_reg_3648 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_273_reg_3657 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln718_18_fu_465_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal trunc_ln718_18_reg_3663 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_279_reg_3668 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_280_reg_3673 : STD_LOGIC_VECTOR (5 downto 0);
    signal mul_ln1118_19_fu_3370_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal mul_ln1118_19_reg_3679 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_284_reg_3688 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln718_19_fu_499_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal trunc_ln718_19_reg_3694 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_290_reg_3699 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_291_reg_3704 : STD_LOGIC_VECTOR (5 downto 0);
    signal mul_ln1118_20_fu_3380_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal mul_ln1118_20_reg_3710 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_295_reg_3719 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln718_20_fu_533_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal trunc_ln718_20_reg_3725 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_301_reg_3730 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_302_reg_3735 : STD_LOGIC_VECTOR (5 downto 0);
    signal mul_ln1118_21_fu_3390_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal mul_ln1118_21_reg_3741 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_306_reg_3750 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln718_21_fu_567_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal trunc_ln718_21_reg_3756 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_312_reg_3761 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_313_reg_3766 : STD_LOGIC_VECTOR (5 downto 0);
    signal mul_ln1118_22_fu_3400_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal mul_ln1118_22_reg_3772 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_317_reg_3781 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln718_22_fu_601_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal trunc_ln718_22_reg_3787 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_323_reg_3792 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_324_reg_3797 : STD_LOGIC_VECTOR (5 downto 0);
    signal mul_ln1118_23_fu_3410_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal mul_ln1118_23_reg_3803 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_328_reg_3812 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln718_23_fu_635_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal trunc_ln718_23_reg_3818 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_334_reg_3823 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_335_reg_3828 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln415_fu_707_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln415_reg_3834 : STD_LOGIC_VECTOR (15 downto 0);
    signal and_ln781_fu_791_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln781_reg_3840 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln785_16_fu_809_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln785_16_reg_3845 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln786_fu_820_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln786_reg_3850 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln786_48_fu_838_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln786_48_reg_3855 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_fu_843_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_reg_3860 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln415_16_fu_900_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln415_16_reg_3865 : STD_LOGIC_VECTOR (15 downto 0);
    signal and_ln781_16_fu_984_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln781_16_reg_3871 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln785_18_fu_1002_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln785_18_reg_3876 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln786_49_fu_1013_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln786_49_reg_3881 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln786_50_fu_1031_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln786_50_reg_3886 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_50_fu_1036_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_50_reg_3891 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln415_17_fu_1093_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln415_17_reg_3896 : STD_LOGIC_VECTOR (15 downto 0);
    signal and_ln781_17_fu_1177_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln781_17_reg_3902 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln785_20_fu_1195_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln785_20_reg_3907 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln786_52_fu_1206_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln786_52_reg_3912 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln786_53_fu_1224_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln786_53_reg_3917 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_54_fu_1229_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_54_reg_3922 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln415_18_fu_1286_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln415_18_reg_3927 : STD_LOGIC_VECTOR (15 downto 0);
    signal and_ln781_18_fu_1370_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln781_18_reg_3933 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln785_22_fu_1388_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln785_22_reg_3938 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln786_55_fu_1399_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln786_55_reg_3943 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln786_56_fu_1417_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln786_56_reg_3948 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_58_fu_1422_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_58_reg_3953 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln415_19_fu_1479_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln415_19_reg_3958 : STD_LOGIC_VECTOR (15 downto 0);
    signal and_ln781_19_fu_1563_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln781_19_reg_3964 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln785_24_fu_1581_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln785_24_reg_3969 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln786_58_fu_1592_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln786_58_reg_3974 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln786_59_fu_1610_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln786_59_reg_3979 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_62_fu_1615_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_62_reg_3984 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln415_20_fu_1672_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln415_20_reg_3989 : STD_LOGIC_VECTOR (15 downto 0);
    signal and_ln781_20_fu_1756_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln781_20_reg_3995 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln785_26_fu_1774_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln785_26_reg_4000 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln786_61_fu_1785_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln786_61_reg_4005 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln786_62_fu_1803_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln786_62_reg_4010 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_66_fu_1808_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_66_reg_4015 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln415_21_fu_1865_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln415_21_reg_4020 : STD_LOGIC_VECTOR (15 downto 0);
    signal and_ln781_21_fu_1949_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln781_21_reg_4026 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln785_28_fu_1967_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln785_28_reg_4031 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln786_64_fu_1978_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln786_64_reg_4036 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln786_65_fu_1996_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln786_65_reg_4041 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_70_fu_2001_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_70_reg_4046 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln415_22_fu_2058_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln415_22_reg_4051 : STD_LOGIC_VECTOR (15 downto 0);
    signal and_ln781_22_fu_2142_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln781_22_reg_4057 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln785_30_fu_2160_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln785_30_reg_4062 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln786_67_fu_2171_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln786_67_reg_4067 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln786_68_fu_2189_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln786_68_reg_4072 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_74_fu_2194_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_74_reg_4077 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln415_23_fu_2251_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln415_23_reg_4082 : STD_LOGIC_VECTOR (15 downto 0);
    signal and_ln781_23_fu_2335_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln781_23_reg_4088 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln785_32_fu_2353_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln785_32_reg_4093 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln786_70_fu_2364_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln786_70_reg_4098 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln786_71_fu_2382_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln786_71_reg_4103 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_78_fu_2387_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_78_reg_4108 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_271_reg_4113 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln703_47_fu_2592_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_47_reg_4120 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_272_reg_4126 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_85_fu_2627_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln340_85_reg_4133 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln340_87_fu_2656_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln340_87_reg_4139 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln340_89_fu_2685_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln340_89_reg_4145 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln340_89_reg_4145_pp0_iter5_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln340_91_fu_2714_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln340_91_reg_4151 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln340_91_reg_4151_pp0_iter5_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln340_93_fu_2743_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln340_93_reg_4157 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln340_93_reg_4157_pp0_iter5_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln340_93_reg_4157_pp0_iter6_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln340_95_fu_2772_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln340_95_reg_4163 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln340_95_reg_4163_pp0_iter5_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln340_95_reg_4163_pp0_iter6_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_293_reg_4169 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln703_49_fu_2935_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_49_reg_4176 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_294_reg_4182 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_315_reg_4189 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln703_51_fu_3103_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_51_reg_4196 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_316_reg_4202 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_337_reg_4209 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln703_53_fu_3271_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_53_reg_4216 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_338_reg_4222 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal weight_V_offset_cast_fu_257_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1117_fu_268_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1117_1_fu_279_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1117_2_fu_290_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1117_3_fu_301_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1117_4_fu_312_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1117_5_fu_323_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1117_6_fu_334_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1117_7_fu_345_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln1117_fu_262_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln1117_1_fu_273_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln1117_2_fu_284_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln1117_3_fu_295_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln1117_4_fu_306_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln1117_5_fu_317_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln1117_6_fu_328_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln1117_7_fu_339_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal icmp_ln718_fu_672_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_243_fu_665_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_245_fu_690_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln412_fu_684_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln415_fu_697_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln415_fu_703_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln3_fu_656_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_246_fu_713_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_244_fu_677_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln416_fu_721_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln416_fu_727_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_1_fu_746_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln768_fu_751_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_250_fu_764_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_fu_741_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln779_fu_771_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln779_fu_777_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln777_fu_756_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_247_fu_733_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln785_fu_797_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln785_fu_803_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln416_fu_783_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln786_fu_826_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln786_fu_832_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln785_fu_814_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln718_16_fu_865_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_252_fu_858_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_254_fu_883_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln412_16_fu_877_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln415_16_fu_890_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln415_16_fu_896_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_s_fu_849_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_255_fu_906_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_253_fu_870_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln416_47_fu_914_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln416_16_fu_920_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_3_fu_939_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln768_1_fu_944_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_259_fu_957_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_2_fu_934_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln779_16_fu_964_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln779_1_fu_970_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln777_1_fu_949_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_256_fu_926_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln785_17_fu_990_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln785_16_fu_996_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln416_1_fu_976_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln786_32_fu_1019_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln786_32_fu_1025_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln785_1_fu_1007_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln718_17_fu_1058_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_263_fu_1051_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_265_fu_1076_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln412_17_fu_1070_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln415_17_fu_1083_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln415_17_fu_1089_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_15_fu_1042_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_266_fu_1099_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_264_fu_1063_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln416_48_fu_1107_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln416_17_fu_1113_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_5_fu_1132_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln768_2_fu_1137_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_270_fu_1150_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_4_fu_1127_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln779_17_fu_1157_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln779_2_fu_1163_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln777_2_fu_1142_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_267_fu_1119_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln785_19_fu_1183_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln785_17_fu_1189_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln416_2_fu_1169_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln786_33_fu_1212_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln786_34_fu_1218_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln785_2_fu_1200_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln718_18_fu_1251_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_274_fu_1244_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_276_fu_1269_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln412_18_fu_1263_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln415_18_fu_1276_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln415_18_fu_1282_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_16_fu_1235_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_277_fu_1292_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_275_fu_1256_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln416_49_fu_1300_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln416_18_fu_1306_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_7_fu_1325_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln768_3_fu_1330_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_281_fu_1343_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_6_fu_1320_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln779_18_fu_1350_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln779_3_fu_1356_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln777_3_fu_1335_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_278_fu_1312_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln785_21_fu_1376_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln785_18_fu_1382_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln416_3_fu_1362_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln786_34_fu_1405_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln786_36_fu_1411_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln785_3_fu_1393_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln718_19_fu_1444_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_285_fu_1437_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_287_fu_1462_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln412_19_fu_1456_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln415_19_fu_1469_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln415_19_fu_1475_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_17_fu_1428_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_288_fu_1485_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_286_fu_1449_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln416_50_fu_1493_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln416_19_fu_1499_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_9_fu_1518_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln768_4_fu_1523_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_292_fu_1536_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_8_fu_1513_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln779_19_fu_1543_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln779_4_fu_1549_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln777_4_fu_1528_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_289_fu_1505_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln785_23_fu_1569_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln785_19_fu_1575_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln416_4_fu_1555_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln786_35_fu_1598_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln786_38_fu_1604_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln785_4_fu_1586_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln718_20_fu_1637_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_296_fu_1630_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_298_fu_1655_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln412_20_fu_1649_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln415_20_fu_1662_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln415_20_fu_1668_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_18_fu_1621_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_299_fu_1678_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_297_fu_1642_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln416_51_fu_1686_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln416_20_fu_1692_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_11_fu_1711_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln768_5_fu_1716_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_303_fu_1729_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_10_fu_1706_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln779_20_fu_1736_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln779_5_fu_1742_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln777_5_fu_1721_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_300_fu_1698_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln785_25_fu_1762_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln785_20_fu_1768_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln416_5_fu_1748_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln786_36_fu_1791_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln786_40_fu_1797_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln785_5_fu_1779_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln718_21_fu_1830_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_307_fu_1823_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_309_fu_1848_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln412_21_fu_1842_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln415_21_fu_1855_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln415_21_fu_1861_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_19_fu_1814_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_310_fu_1871_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_308_fu_1835_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln416_52_fu_1879_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln416_21_fu_1885_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_13_fu_1904_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln768_6_fu_1909_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_314_fu_1922_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_12_fu_1899_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln779_21_fu_1929_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln779_6_fu_1935_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln777_6_fu_1914_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_311_fu_1891_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln785_27_fu_1955_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln785_21_fu_1961_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln416_6_fu_1941_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln786_37_fu_1984_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln786_42_fu_1990_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln785_6_fu_1972_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln718_22_fu_2023_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_318_fu_2016_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_320_fu_2041_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln412_22_fu_2035_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln415_22_fu_2048_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln415_22_fu_2054_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_20_fu_2007_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_321_fu_2064_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_319_fu_2028_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln416_53_fu_2072_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln416_22_fu_2078_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_15_fu_2097_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln768_7_fu_2102_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_325_fu_2115_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_14_fu_2092_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln779_22_fu_2122_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln779_7_fu_2128_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln777_7_fu_2107_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_322_fu_2084_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln785_29_fu_2148_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln785_22_fu_2154_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln416_7_fu_2134_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln786_38_fu_2177_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln786_44_fu_2183_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln785_7_fu_2165_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln718_23_fu_2216_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_329_fu_2209_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_331_fu_2234_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln412_23_fu_2228_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln415_23_fu_2241_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln415_23_fu_2247_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_21_fu_2200_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_332_fu_2257_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_330_fu_2221_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln416_54_fu_2265_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln416_23_fu_2271_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_17_fu_2290_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln768_8_fu_2295_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_336_fu_2308_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_16_fu_2285_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln779_23_fu_2315_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln779_8_fu_2321_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln777_8_fu_2300_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_333_fu_2277_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln785_31_fu_2341_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln785_23_fu_2347_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln416_8_fu_2327_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln786_39_fu_2370_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln786_46_fu_2376_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln785_8_fu_2358_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_48_fu_2393_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_49_fu_2397_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_fu_2402_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln388_fu_2408_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal or_ln340_51_fu_2422_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_52_fu_2426_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_64_fu_2431_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln388_32_fu_2437_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln340_80_fu_2414_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln340_81_fu_2443_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln703_fu_2451_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln703_80_fu_2455_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln1192_fu_2459_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln703_fu_2473_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_261_fu_2479_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_260_fu_2465_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln786_33_fu_2487_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_48_fu_2505_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_fu_2499_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln786_51_fu_2493_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_53_fu_2511_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_65_fu_2517_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln388_33_fu_2525_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal or_ln340_55_fu_2541_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_56_fu_2545_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_66_fu_2550_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln388_34_fu_2556_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln340_82_fu_2533_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln340_83_fu_2562_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln703_81_fu_2570_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln703_82_fu_2574_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln1192_64_fu_2578_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal or_ln340_59_fu_2606_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_60_fu_2610_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_68_fu_2615_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln388_36_fu_2621_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal or_ln340_63_fu_2635_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_64_fu_2639_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_70_fu_2644_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln388_38_fu_2650_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal or_ln340_67_fu_2664_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_68_fu_2668_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_72_fu_2673_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln388_40_fu_2679_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal or_ln340_71_fu_2693_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_72_fu_2697_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_74_fu_2702_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln388_42_fu_2708_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal or_ln340_75_fu_2722_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_76_fu_2726_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_76_fu_2731_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln388_44_fu_2737_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal or_ln340_79_fu_2751_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_80_fu_2755_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_78_fu_2760_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln388_46_fu_2766_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal xor_ln786_35_fu_2780_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_50_fu_2794_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_49_fu_2790_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln786_54_fu_2785_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_57_fu_2799_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_67_fu_2804_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln388_35_fu_2811_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln340_84_fu_2818_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln703_83_fu_2826_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln703_84_fu_2830_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln1192_65_fu_2833_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln703_48_fu_2847_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_283_fu_2852_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_282_fu_2839_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln786_37_fu_2860_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_52_fu_2878_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_51_fu_2872_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln786_57_fu_2866_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_61_fu_2884_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_69_fu_2890_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln388_37_fu_2898_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln340_86_fu_2906_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln703_85_fu_2914_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln703_86_fu_2918_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln1192_66_fu_2921_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal xor_ln786_39_fu_2948_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_54_fu_2962_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_53_fu_2958_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln786_60_fu_2953_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_65_fu_2967_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_71_fu_2972_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln388_39_fu_2979_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln340_88_fu_2986_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln703_87_fu_2994_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln703_88_fu_2998_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln1192_67_fu_3001_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln703_50_fu_3015_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_305_fu_3020_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_304_fu_3007_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln786_41_fu_3028_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_56_fu_3046_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_55_fu_3040_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln786_63_fu_3034_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_69_fu_3052_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_73_fu_3058_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln388_41_fu_3066_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln340_90_fu_3074_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln703_89_fu_3082_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln703_90_fu_3086_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln1192_68_fu_3089_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal xor_ln786_43_fu_3116_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_58_fu_3130_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_57_fu_3126_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln786_66_fu_3121_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_73_fu_3135_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_75_fu_3140_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln388_43_fu_3147_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln340_92_fu_3154_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln703_91_fu_3162_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln703_92_fu_3166_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln1192_69_fu_3169_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln703_52_fu_3183_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_327_fu_3188_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_326_fu_3175_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln786_45_fu_3196_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_60_fu_3214_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_59_fu_3208_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln786_69_fu_3202_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_77_fu_3220_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_77_fu_3226_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln388_45_fu_3234_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln340_94_fu_3242_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln703_93_fu_3250_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln703_94_fu_3254_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln1192_70_fu_3257_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal xor_ln786_47_fu_3284_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_62_fu_3298_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_61_fu_3294_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln786_72_fu_3289_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_81_fu_3303_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_79_fu_3308_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln388_47_fu_3315_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_idle_pp0_0to7 : STD_LOGIC;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;

    component yolo_conv_top_mul_mul_14s_16s_30_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (13 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        dout : OUT STD_LOGIC_VECTOR (29 downto 0) );
    end component;


    component window_macc_kernel_weight_fp IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        address1 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (13 downto 0);
        address2 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce2 : IN STD_LOGIC;
        q2 : OUT STD_LOGIC_VECTOR (13 downto 0);
        address3 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce3 : IN STD_LOGIC;
        q3 : OUT STD_LOGIC_VECTOR (13 downto 0);
        address4 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce4 : IN STD_LOGIC;
        q4 : OUT STD_LOGIC_VECTOR (13 downto 0);
        address5 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce5 : IN STD_LOGIC;
        q5 : OUT STD_LOGIC_VECTOR (13 downto 0);
        address6 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce6 : IN STD_LOGIC;
        q6 : OUT STD_LOGIC_VECTOR (13 downto 0);
        address7 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce7 : IN STD_LOGIC;
        q7 : OUT STD_LOGIC_VECTOR (13 downto 0);
        address8 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce8 : IN STD_LOGIC;
        q8 : OUT STD_LOGIC_VECTOR (13 downto 0) );
    end component;



begin
    kernel_weight_fp_U : component window_macc_kernel_weight_fp
    generic map (
        DataWidth => 14,
        AddressRange => 432,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => kernel_weight_fp_address0,
        ce0 => kernel_weight_fp_ce0,
        q0 => kernel_weight_fp_q0,
        address1 => kernel_weight_fp_address1,
        ce1 => kernel_weight_fp_ce1,
        q1 => kernel_weight_fp_q1,
        address2 => kernel_weight_fp_address2,
        ce2 => kernel_weight_fp_ce2,
        q2 => kernel_weight_fp_q2,
        address3 => kernel_weight_fp_address3,
        ce3 => kernel_weight_fp_ce3,
        q3 => kernel_weight_fp_q3,
        address4 => kernel_weight_fp_address4,
        ce4 => kernel_weight_fp_ce4,
        q4 => kernel_weight_fp_q4,
        address5 => kernel_weight_fp_address5,
        ce5 => kernel_weight_fp_ce5,
        q5 => kernel_weight_fp_q5,
        address6 => kernel_weight_fp_address6,
        ce6 => kernel_weight_fp_ce6,
        q6 => kernel_weight_fp_q6,
        address7 => kernel_weight_fp_address7,
        ce7 => kernel_weight_fp_ce7,
        q7 => kernel_weight_fp_q7,
        address8 => kernel_weight_fp_address8,
        ce8 => kernel_weight_fp_ce8,
        q8 => kernel_weight_fp_q8);

    yolo_conv_top_mul_mul_14s_16s_30_1_1_U10 : component yolo_conv_top_mul_mul_14s_16s_30_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 14,
        din1_WIDTH => 16,
        dout_WIDTH => 30)
    port map (
        din0 => kernel_weight_fp_loa_reg_3510,
        din1 => window_0_0_val_V_r_1_reg_3460_pp0_iter1_reg,
        dout => mul_ln1118_fu_3330_p2);

    yolo_conv_top_mul_mul_14s_16s_30_1_1_U11 : component yolo_conv_top_mul_mul_14s_16s_30_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 14,
        din1_WIDTH => 16,
        dout_WIDTH => 30)
    port map (
        din0 => kernel_weight_fp_loa_1_reg_3515,
        din1 => window_0_1_val_V_r_1_reg_3455_pp0_iter1_reg,
        dout => mul_ln1118_16_fu_3340_p2);

    yolo_conv_top_mul_mul_14s_16s_30_1_1_U12 : component yolo_conv_top_mul_mul_14s_16s_30_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 14,
        din1_WIDTH => 16,
        dout_WIDTH => 30)
    port map (
        din0 => kernel_weight_fp_loa_2_reg_3520,
        din1 => window_0_2_val_V_r_1_reg_3450_pp0_iter1_reg,
        dout => mul_ln1118_17_fu_3350_p2);

    yolo_conv_top_mul_mul_14s_16s_30_1_1_U13 : component yolo_conv_top_mul_mul_14s_16s_30_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 14,
        din1_WIDTH => 16,
        dout_WIDTH => 30)
    port map (
        din0 => kernel_weight_fp_loa_3_reg_3525,
        din1 => window_1_0_val_V_r_1_reg_3445_pp0_iter1_reg,
        dout => mul_ln1118_18_fu_3360_p2);

    yolo_conv_top_mul_mul_14s_16s_30_1_1_U14 : component yolo_conv_top_mul_mul_14s_16s_30_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 14,
        din1_WIDTH => 16,
        dout_WIDTH => 30)
    port map (
        din0 => kernel_weight_fp_loa_4_reg_3530,
        din1 => window_1_1_val_V_r_1_reg_3440_pp0_iter1_reg,
        dout => mul_ln1118_19_fu_3370_p2);

    yolo_conv_top_mul_mul_14s_16s_30_1_1_U15 : component yolo_conv_top_mul_mul_14s_16s_30_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 14,
        din1_WIDTH => 16,
        dout_WIDTH => 30)
    port map (
        din0 => kernel_weight_fp_loa_5_reg_3535,
        din1 => window_1_2_val_V_r_1_reg_3435_pp0_iter1_reg,
        dout => mul_ln1118_20_fu_3380_p2);

    yolo_conv_top_mul_mul_14s_16s_30_1_1_U16 : component yolo_conv_top_mul_mul_14s_16s_30_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 14,
        din1_WIDTH => 16,
        dout_WIDTH => 30)
    port map (
        din0 => kernel_weight_fp_loa_6_reg_3540,
        din1 => window_2_0_val_V_r_1_reg_3430_pp0_iter1_reg,
        dout => mul_ln1118_21_fu_3390_p2);

    yolo_conv_top_mul_mul_14s_16s_30_1_1_U17 : component yolo_conv_top_mul_mul_14s_16s_30_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 14,
        din1_WIDTH => 16,
        dout_WIDTH => 30)
    port map (
        din0 => kernel_weight_fp_loa_7_reg_3545,
        din1 => window_2_1_val_V_r_1_reg_3425_pp0_iter1_reg,
        dout => mul_ln1118_22_fu_3400_p2);

    yolo_conv_top_mul_mul_14s_16s_30_1_1_U18 : component yolo_conv_top_mul_mul_14s_16s_30_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 14,
        din1_WIDTH => 16,
        dout_WIDTH => 30)
    port map (
        din0 => kernel_weight_fp_loa_8_reg_3550,
        din1 => window_2_2_val_V_r_1_reg_3420_pp0_iter1_reg,
        dout => mul_ln1118_23_fu_3410_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                add_ln415_16_reg_3865 <= add_ln415_16_fu_900_p2;
                add_ln415_17_reg_3896 <= add_ln415_17_fu_1093_p2;
                add_ln415_18_reg_3927 <= add_ln415_18_fu_1286_p2;
                add_ln415_19_reg_3958 <= add_ln415_19_fu_1479_p2;
                add_ln415_20_reg_3989 <= add_ln415_20_fu_1672_p2;
                add_ln415_21_reg_4020 <= add_ln415_21_fu_1865_p2;
                add_ln415_22_reg_4051 <= add_ln415_22_fu_2058_p2;
                add_ln415_23_reg_4082 <= add_ln415_23_fu_2251_p2;
                add_ln415_reg_3834 <= add_ln415_fu_707_p2;
                add_ln703_47_reg_4120 <= add_ln703_47_fu_2592_p2;
                add_ln703_49_reg_4176 <= add_ln703_49_fu_2935_p2;
                add_ln703_51_reg_4196 <= add_ln703_51_fu_3103_p2;
                add_ln703_53_reg_4216 <= add_ln703_53_fu_3271_p2;
                and_ln781_16_reg_3871 <= and_ln781_16_fu_984_p2;
                and_ln781_17_reg_3902 <= and_ln781_17_fu_1177_p2;
                and_ln781_18_reg_3933 <= and_ln781_18_fu_1370_p2;
                and_ln781_19_reg_3964 <= and_ln781_19_fu_1563_p2;
                and_ln781_20_reg_3995 <= and_ln781_20_fu_1756_p2;
                and_ln781_21_reg_4026 <= and_ln781_21_fu_1949_p2;
                and_ln781_22_reg_4057 <= and_ln781_22_fu_2142_p2;
                and_ln781_23_reg_4088 <= and_ln781_23_fu_2335_p2;
                and_ln781_reg_3840 <= and_ln781_fu_791_p2;
                and_ln786_48_reg_3855 <= and_ln786_48_fu_838_p2;
                and_ln786_49_reg_3881 <= and_ln786_49_fu_1013_p2;
                and_ln786_50_reg_3886 <= and_ln786_50_fu_1031_p2;
                and_ln786_52_reg_3912 <= and_ln786_52_fu_1206_p2;
                and_ln786_53_reg_3917 <= and_ln786_53_fu_1224_p2;
                and_ln786_55_reg_3943 <= and_ln786_55_fu_1399_p2;
                and_ln786_56_reg_3948 <= and_ln786_56_fu_1417_p2;
                and_ln786_58_reg_3974 <= and_ln786_58_fu_1592_p2;
                and_ln786_59_reg_3979 <= and_ln786_59_fu_1610_p2;
                and_ln786_61_reg_4005 <= and_ln786_61_fu_1785_p2;
                and_ln786_62_reg_4010 <= and_ln786_62_fu_1803_p2;
                and_ln786_64_reg_4036 <= and_ln786_64_fu_1978_p2;
                and_ln786_65_reg_4041 <= and_ln786_65_fu_1996_p2;
                and_ln786_67_reg_4067 <= and_ln786_67_fu_2171_p2;
                and_ln786_68_reg_4072 <= and_ln786_68_fu_2189_p2;
                and_ln786_70_reg_4098 <= and_ln786_70_fu_2364_p2;
                and_ln786_71_reg_4103 <= and_ln786_71_fu_2382_p2;
                and_ln786_reg_3850 <= and_ln786_fu_820_p2;
                mul_ln1118_16_reg_3586 <= mul_ln1118_16_fu_3340_p2;
                mul_ln1118_17_reg_3617 <= mul_ln1118_17_fu_3350_p2;
                mul_ln1118_18_reg_3648 <= mul_ln1118_18_fu_3360_p2;
                mul_ln1118_19_reg_3679 <= mul_ln1118_19_fu_3370_p2;
                mul_ln1118_20_reg_3710 <= mul_ln1118_20_fu_3380_p2;
                mul_ln1118_21_reg_3741 <= mul_ln1118_21_fu_3390_p2;
                mul_ln1118_22_reg_3772 <= mul_ln1118_22_fu_3400_p2;
                mul_ln1118_23_reg_3803 <= mul_ln1118_23_fu_3410_p2;
                mul_ln1118_reg_3555 <= mul_ln1118_fu_3330_p2;
                or_ln340_50_reg_3891 <= or_ln340_50_fu_1036_p2;
                or_ln340_54_reg_3922 <= or_ln340_54_fu_1229_p2;
                or_ln340_58_reg_3953 <= or_ln340_58_fu_1422_p2;
                or_ln340_62_reg_3984 <= or_ln340_62_fu_1615_p2;
                or_ln340_66_reg_4015 <= or_ln340_66_fu_1808_p2;
                or_ln340_70_reg_4046 <= or_ln340_70_fu_2001_p2;
                or_ln340_74_reg_4077 <= or_ln340_74_fu_2194_p2;
                or_ln340_78_reg_4108 <= or_ln340_78_fu_2387_p2;
                or_ln340_reg_3860 <= or_ln340_fu_843_p2;
                select_ln340_85_reg_4133 <= select_ln340_85_fu_2627_p3;
                select_ln340_87_reg_4139 <= select_ln340_87_fu_2656_p3;
                select_ln340_89_reg_4145 <= select_ln340_89_fu_2685_p3;
                select_ln340_89_reg_4145_pp0_iter5_reg <= select_ln340_89_reg_4145;
                select_ln340_91_reg_4151 <= select_ln340_91_fu_2714_p3;
                select_ln340_91_reg_4151_pp0_iter5_reg <= select_ln340_91_reg_4151;
                select_ln340_93_reg_4157 <= select_ln340_93_fu_2743_p3;
                select_ln340_93_reg_4157_pp0_iter5_reg <= select_ln340_93_reg_4157;
                select_ln340_93_reg_4157_pp0_iter6_reg <= select_ln340_93_reg_4157_pp0_iter5_reg;
                select_ln340_95_reg_4163 <= select_ln340_95_fu_2772_p3;
                select_ln340_95_reg_4163_pp0_iter5_reg <= select_ln340_95_reg_4163;
                select_ln340_95_reg_4163_pp0_iter6_reg <= select_ln340_95_reg_4163_pp0_iter5_reg;
                tmp_248_reg_3575 <= mul_ln1118_fu_3330_p2(29 downto 25);
                tmp_249_reg_3580 <= mul_ln1118_fu_3330_p2(29 downto 24);
                tmp_251_reg_3595 <= mul_ln1118_16_fu_3340_p2(28 downto 28);
                tmp_257_reg_3606 <= mul_ln1118_16_fu_3340_p2(29 downto 25);
                tmp_258_reg_3611 <= mul_ln1118_16_fu_3340_p2(29 downto 24);
                tmp_262_reg_3626 <= mul_ln1118_17_fu_3350_p2(28 downto 28);
                tmp_268_reg_3637 <= mul_ln1118_17_fu_3350_p2(29 downto 25);
                tmp_269_reg_3642 <= mul_ln1118_17_fu_3350_p2(29 downto 24);
                tmp_271_reg_4113 <= add_ln1192_64_fu_2578_p2(16 downto 16);
                tmp_272_reg_4126 <= add_ln703_47_fu_2592_p2(15 downto 15);
                tmp_273_reg_3657 <= mul_ln1118_18_fu_3360_p2(28 downto 28);
                tmp_279_reg_3668 <= mul_ln1118_18_fu_3360_p2(29 downto 25);
                tmp_280_reg_3673 <= mul_ln1118_18_fu_3360_p2(29 downto 24);
                tmp_284_reg_3688 <= mul_ln1118_19_fu_3370_p2(28 downto 28);
                tmp_290_reg_3699 <= mul_ln1118_19_fu_3370_p2(29 downto 25);
                tmp_291_reg_3704 <= mul_ln1118_19_fu_3370_p2(29 downto 24);
                tmp_293_reg_4169 <= add_ln1192_66_fu_2921_p2(16 downto 16);
                tmp_294_reg_4182 <= add_ln703_49_fu_2935_p2(15 downto 15);
                tmp_295_reg_3719 <= mul_ln1118_20_fu_3380_p2(28 downto 28);
                tmp_301_reg_3730 <= mul_ln1118_20_fu_3380_p2(29 downto 25);
                tmp_302_reg_3735 <= mul_ln1118_20_fu_3380_p2(29 downto 24);
                tmp_306_reg_3750 <= mul_ln1118_21_fu_3390_p2(28 downto 28);
                tmp_312_reg_3761 <= mul_ln1118_21_fu_3390_p2(29 downto 25);
                tmp_313_reg_3766 <= mul_ln1118_21_fu_3390_p2(29 downto 24);
                tmp_315_reg_4189 <= add_ln1192_68_fu_3089_p2(16 downto 16);
                tmp_316_reg_4202 <= add_ln703_51_fu_3103_p2(15 downto 15);
                tmp_317_reg_3781 <= mul_ln1118_22_fu_3400_p2(28 downto 28);
                tmp_323_reg_3792 <= mul_ln1118_22_fu_3400_p2(29 downto 25);
                tmp_324_reg_3797 <= mul_ln1118_22_fu_3400_p2(29 downto 24);
                tmp_328_reg_3812 <= mul_ln1118_23_fu_3410_p2(28 downto 28);
                tmp_334_reg_3823 <= mul_ln1118_23_fu_3410_p2(29 downto 25);
                tmp_335_reg_3828 <= mul_ln1118_23_fu_3410_p2(29 downto 24);
                tmp_337_reg_4209 <= add_ln1192_70_fu_3257_p2(16 downto 16);
                tmp_338_reg_4222 <= add_ln703_53_fu_3271_p2(15 downto 15);
                tmp_reg_3564 <= mul_ln1118_fu_3330_p2(28 downto 28);
                trunc_ln718_16_reg_3601 <= trunc_ln718_16_fu_397_p1;
                trunc_ln718_17_reg_3632 <= trunc_ln718_17_fu_431_p1;
                trunc_ln718_18_reg_3663 <= trunc_ln718_18_fu_465_p1;
                trunc_ln718_19_reg_3694 <= trunc_ln718_19_fu_499_p1;
                trunc_ln718_20_reg_3725 <= trunc_ln718_20_fu_533_p1;
                trunc_ln718_21_reg_3756 <= trunc_ln718_21_fu_567_p1;
                trunc_ln718_22_reg_3787 <= trunc_ln718_22_fu_601_p1;
                trunc_ln718_23_reg_3818 <= trunc_ln718_23_fu_635_p1;
                trunc_ln718_reg_3570 <= trunc_ln718_fu_363_p1;
                xor_ln785_16_reg_3845 <= xor_ln785_16_fu_809_p2;
                xor_ln785_18_reg_3876 <= xor_ln785_18_fu_1002_p2;
                xor_ln785_20_reg_3907 <= xor_ln785_20_fu_1195_p2;
                xor_ln785_22_reg_3938 <= xor_ln785_22_fu_1388_p2;
                xor_ln785_24_reg_3969 <= xor_ln785_24_fu_1581_p2;
                xor_ln785_26_reg_4000 <= xor_ln785_26_fu_1774_p2;
                xor_ln785_28_reg_4031 <= xor_ln785_28_fu_1967_p2;
                xor_ln785_30_reg_4062 <= xor_ln785_30_fu_2160_p2;
                xor_ln785_32_reg_4093 <= xor_ln785_32_fu_2353_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                kernel_weight_fp_loa_1_reg_3515 <= kernel_weight_fp_q1;
                kernel_weight_fp_loa_2_reg_3520 <= kernel_weight_fp_q2;
                kernel_weight_fp_loa_3_reg_3525 <= kernel_weight_fp_q3;
                kernel_weight_fp_loa_4_reg_3530 <= kernel_weight_fp_q4;
                kernel_weight_fp_loa_5_reg_3535 <= kernel_weight_fp_q5;
                kernel_weight_fp_loa_6_reg_3540 <= kernel_weight_fp_q6;
                kernel_weight_fp_loa_7_reg_3545 <= kernel_weight_fp_q7;
                kernel_weight_fp_loa_8_reg_3550 <= kernel_weight_fp_q8;
                kernel_weight_fp_loa_reg_3510 <= kernel_weight_fp_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                window_0_0_val_V_r_1_reg_3460 <= window_0_0_val_V_r;
                window_0_0_val_V_r_1_reg_3460_pp0_iter1_reg <= window_0_0_val_V_r_1_reg_3460;
                window_0_1_val_V_r_1_reg_3455 <= window_0_1_val_V_r;
                window_0_1_val_V_r_1_reg_3455_pp0_iter1_reg <= window_0_1_val_V_r_1_reg_3455;
                window_0_2_val_V_r_1_reg_3450 <= window_0_2_val_V_r;
                window_0_2_val_V_r_1_reg_3450_pp0_iter1_reg <= window_0_2_val_V_r_1_reg_3450;
                window_1_0_val_V_r_1_reg_3445 <= window_1_0_val_V_r;
                window_1_0_val_V_r_1_reg_3445_pp0_iter1_reg <= window_1_0_val_V_r_1_reg_3445;
                window_1_1_val_V_r_1_reg_3440 <= window_1_1_val_V_r;
                window_1_1_val_V_r_1_reg_3440_pp0_iter1_reg <= window_1_1_val_V_r_1_reg_3440;
                window_1_2_val_V_r_1_reg_3435 <= window_1_2_val_V_r;
                window_1_2_val_V_r_1_reg_3435_pp0_iter1_reg <= window_1_2_val_V_r_1_reg_3435;
                window_2_0_val_V_r_1_reg_3430 <= window_2_0_val_V_r;
                window_2_0_val_V_r_1_reg_3430_pp0_iter1_reg <= window_2_0_val_V_r_1_reg_3430;
                window_2_1_val_V_r_1_reg_3425 <= window_2_1_val_V_r;
                window_2_1_val_V_r_1_reg_3425_pp0_iter1_reg <= window_2_1_val_V_r_1_reg_3425;
                window_2_2_val_V_r_1_reg_3420 <= window_2_2_val_V_r;
                window_2_2_val_V_r_1_reg_3420_pp0_iter1_reg <= window_2_2_val_V_r_1_reg_3420;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage0_subdone, ap_reset_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    add_ln1117_1_fu_273_p2 <= std_logic_vector(unsigned(ap_const_lv9_2) + unsigned(weight_V_offset));
    add_ln1117_2_fu_284_p2 <= std_logic_vector(unsigned(ap_const_lv9_3) + unsigned(weight_V_offset));
    add_ln1117_3_fu_295_p2 <= std_logic_vector(unsigned(ap_const_lv9_4) + unsigned(weight_V_offset));
    add_ln1117_4_fu_306_p2 <= std_logic_vector(unsigned(ap_const_lv9_5) + unsigned(weight_V_offset));
    add_ln1117_5_fu_317_p2 <= std_logic_vector(unsigned(ap_const_lv9_6) + unsigned(weight_V_offset));
    add_ln1117_6_fu_328_p2 <= std_logic_vector(unsigned(ap_const_lv9_7) + unsigned(weight_V_offset));
    add_ln1117_7_fu_339_p2 <= std_logic_vector(unsigned(ap_const_lv9_8) + unsigned(weight_V_offset));
    add_ln1117_fu_262_p2 <= std_logic_vector(unsigned(ap_const_lv9_1) + unsigned(weight_V_offset));
    add_ln1192_64_fu_2578_p2 <= std_logic_vector(signed(sext_ln703_81_fu_2570_p1) + signed(sext_ln703_82_fu_2574_p1));
    add_ln1192_65_fu_2833_p2 <= std_logic_vector(signed(sext_ln703_83_fu_2826_p1) + signed(sext_ln703_84_fu_2830_p1));
    add_ln1192_66_fu_2921_p2 <= std_logic_vector(signed(sext_ln703_85_fu_2914_p1) + signed(sext_ln703_86_fu_2918_p1));
    add_ln1192_67_fu_3001_p2 <= std_logic_vector(signed(sext_ln703_87_fu_2994_p1) + signed(sext_ln703_88_fu_2998_p1));
    add_ln1192_68_fu_3089_p2 <= std_logic_vector(signed(sext_ln703_89_fu_3082_p1) + signed(sext_ln703_90_fu_3086_p1));
    add_ln1192_69_fu_3169_p2 <= std_logic_vector(signed(sext_ln703_91_fu_3162_p1) + signed(sext_ln703_92_fu_3166_p1));
    add_ln1192_70_fu_3257_p2 <= std_logic_vector(signed(sext_ln703_93_fu_3250_p1) + signed(sext_ln703_94_fu_3254_p1));
    add_ln1192_fu_2459_p2 <= std_logic_vector(signed(sext_ln703_fu_2451_p1) + signed(sext_ln703_80_fu_2455_p1));
    add_ln415_16_fu_900_p2 <= std_logic_vector(unsigned(zext_ln415_16_fu_896_p1) + unsigned(trunc_ln708_s_fu_849_p4));
    add_ln415_17_fu_1093_p2 <= std_logic_vector(unsigned(zext_ln415_17_fu_1089_p1) + unsigned(trunc_ln708_15_fu_1042_p4));
    add_ln415_18_fu_1286_p2 <= std_logic_vector(unsigned(zext_ln415_18_fu_1282_p1) + unsigned(trunc_ln708_16_fu_1235_p4));
    add_ln415_19_fu_1479_p2 <= std_logic_vector(unsigned(zext_ln415_19_fu_1475_p1) + unsigned(trunc_ln708_17_fu_1428_p4));
    add_ln415_20_fu_1672_p2 <= std_logic_vector(unsigned(zext_ln415_20_fu_1668_p1) + unsigned(trunc_ln708_18_fu_1621_p4));
    add_ln415_21_fu_1865_p2 <= std_logic_vector(unsigned(zext_ln415_21_fu_1861_p1) + unsigned(trunc_ln708_19_fu_1814_p4));
    add_ln415_22_fu_2058_p2 <= std_logic_vector(unsigned(zext_ln415_22_fu_2054_p1) + unsigned(trunc_ln708_20_fu_2007_p4));
    add_ln415_23_fu_2251_p2 <= std_logic_vector(unsigned(zext_ln415_23_fu_2247_p1) + unsigned(trunc_ln708_21_fu_2200_p4));
    add_ln415_fu_707_p2 <= std_logic_vector(unsigned(zext_ln415_fu_703_p1) + unsigned(trunc_ln3_fu_656_p4));
    add_ln703_47_fu_2592_p2 <= std_logic_vector(signed(select_ln340_83_fu_2562_p3) + signed(select_ln340_82_fu_2533_p3));
    add_ln703_48_fu_2847_p2 <= std_logic_vector(signed(select_ln340_85_reg_4133) + signed(select_ln340_84_fu_2818_p3));
    add_ln703_49_fu_2935_p2 <= std_logic_vector(signed(select_ln340_87_reg_4139) + signed(select_ln340_86_fu_2906_p3));
    add_ln703_50_fu_3015_p2 <= std_logic_vector(signed(select_ln340_89_reg_4145_pp0_iter5_reg) + signed(select_ln340_88_fu_2986_p3));
    add_ln703_51_fu_3103_p2 <= std_logic_vector(signed(select_ln340_91_reg_4151_pp0_iter5_reg) + signed(select_ln340_90_fu_3074_p3));
    add_ln703_52_fu_3183_p2 <= std_logic_vector(signed(select_ln340_93_reg_4157_pp0_iter6_reg) + signed(select_ln340_92_fu_3154_p3));
    add_ln703_53_fu_3271_p2 <= std_logic_vector(signed(select_ln340_95_reg_4163_pp0_iter6_reg) + signed(select_ln340_94_fu_3242_p3));
    add_ln703_fu_2473_p2 <= std_logic_vector(signed(select_ln340_81_fu_2443_p3) + signed(select_ln340_80_fu_2414_p3));
    and_ln415_16_fu_890_p2 <= (tmp_254_fu_883_p3 and or_ln412_16_fu_877_p2);
    and_ln415_17_fu_1083_p2 <= (tmp_265_fu_1076_p3 and or_ln412_17_fu_1070_p2);
    and_ln415_18_fu_1276_p2 <= (tmp_276_fu_1269_p3 and or_ln412_18_fu_1263_p2);
    and_ln415_19_fu_1469_p2 <= (tmp_287_fu_1462_p3 and or_ln412_19_fu_1456_p2);
    and_ln415_20_fu_1662_p2 <= (tmp_298_fu_1655_p3 and or_ln412_20_fu_1649_p2);
    and_ln415_21_fu_1855_p2 <= (tmp_309_fu_1848_p3 and or_ln412_21_fu_1842_p2);
    and_ln415_22_fu_2048_p2 <= (tmp_320_fu_2041_p3 and or_ln412_22_fu_2035_p2);
    and_ln415_23_fu_2241_p2 <= (tmp_331_fu_2234_p3 and or_ln412_23_fu_2228_p2);
    and_ln415_fu_697_p2 <= (tmp_245_fu_690_p3 and or_ln412_fu_684_p2);
    and_ln416_16_fu_920_p2 <= (xor_ln416_47_fu_914_p2 and tmp_253_fu_870_p3);
    and_ln416_17_fu_1113_p2 <= (xor_ln416_48_fu_1107_p2 and tmp_264_fu_1063_p3);
    and_ln416_18_fu_1306_p2 <= (xor_ln416_49_fu_1300_p2 and tmp_275_fu_1256_p3);
    and_ln416_19_fu_1499_p2 <= (xor_ln416_50_fu_1493_p2 and tmp_286_fu_1449_p3);
    and_ln416_20_fu_1692_p2 <= (xor_ln416_51_fu_1686_p2 and tmp_297_fu_1642_p3);
    and_ln416_21_fu_1885_p2 <= (xor_ln416_52_fu_1879_p2 and tmp_308_fu_1835_p3);
    and_ln416_22_fu_2078_p2 <= (xor_ln416_53_fu_2072_p2 and tmp_319_fu_2028_p3);
    and_ln416_23_fu_2271_p2 <= (xor_ln416_54_fu_2265_p2 and tmp_330_fu_2221_p3);
    and_ln416_fu_727_p2 <= (xor_ln416_fu_721_p2 and tmp_244_fu_677_p3);
    and_ln779_1_fu_970_p2 <= (xor_ln779_16_fu_964_p2 and icmp_ln879_2_fu_934_p2);
    and_ln779_2_fu_1163_p2 <= (xor_ln779_17_fu_1157_p2 and icmp_ln879_4_fu_1127_p2);
    and_ln779_3_fu_1356_p2 <= (xor_ln779_18_fu_1350_p2 and icmp_ln879_6_fu_1320_p2);
    and_ln779_4_fu_1549_p2 <= (xor_ln779_19_fu_1543_p2 and icmp_ln879_8_fu_1513_p2);
    and_ln779_5_fu_1742_p2 <= (xor_ln779_20_fu_1736_p2 and icmp_ln879_10_fu_1706_p2);
    and_ln779_6_fu_1935_p2 <= (xor_ln779_21_fu_1929_p2 and icmp_ln879_12_fu_1899_p2);
    and_ln779_7_fu_2128_p2 <= (xor_ln779_22_fu_2122_p2 and icmp_ln879_14_fu_2092_p2);
    and_ln779_8_fu_2321_p2 <= (xor_ln779_23_fu_2315_p2 and icmp_ln879_16_fu_2285_p2);
    and_ln779_fu_777_p2 <= (xor_ln779_fu_771_p2 and icmp_ln879_fu_741_p2);
    and_ln781_16_fu_984_p2 <= (icmp_ln879_3_fu_939_p2 and and_ln416_16_fu_920_p2);
    and_ln781_17_fu_1177_p2 <= (icmp_ln879_5_fu_1132_p2 and and_ln416_17_fu_1113_p2);
    and_ln781_18_fu_1370_p2 <= (icmp_ln879_7_fu_1325_p2 and and_ln416_18_fu_1306_p2);
    and_ln781_19_fu_1563_p2 <= (icmp_ln879_9_fu_1518_p2 and and_ln416_19_fu_1499_p2);
    and_ln781_20_fu_1756_p2 <= (icmp_ln879_11_fu_1711_p2 and and_ln416_20_fu_1692_p2);
    and_ln781_21_fu_1949_p2 <= (icmp_ln879_13_fu_1904_p2 and and_ln416_21_fu_1885_p2);
    and_ln781_22_fu_2142_p2 <= (icmp_ln879_15_fu_2097_p2 and and_ln416_22_fu_2078_p2);
    and_ln781_23_fu_2335_p2 <= (icmp_ln879_17_fu_2290_p2 and and_ln416_23_fu_2271_p2);
    and_ln781_fu_791_p2 <= (icmp_ln879_1_fu_746_p2 and and_ln416_fu_727_p2);
    and_ln785_1_fu_1007_p2 <= (xor_ln785_18_fu_1002_p2 and or_ln785_16_fu_996_p2);
    and_ln785_2_fu_1200_p2 <= (xor_ln785_20_fu_1195_p2 and or_ln785_17_fu_1189_p2);
    and_ln785_3_fu_1393_p2 <= (xor_ln785_22_fu_1388_p2 and or_ln785_18_fu_1382_p2);
    and_ln785_4_fu_1586_p2 <= (xor_ln785_24_fu_1581_p2 and or_ln785_19_fu_1575_p2);
    and_ln785_5_fu_1779_p2 <= (xor_ln785_26_fu_1774_p2 and or_ln785_20_fu_1768_p2);
    and_ln785_6_fu_1972_p2 <= (xor_ln785_28_fu_1967_p2 and or_ln785_21_fu_1961_p2);
    and_ln785_7_fu_2165_p2 <= (xor_ln785_30_fu_2160_p2 and or_ln785_22_fu_2154_p2);
    and_ln785_8_fu_2358_p2 <= (xor_ln785_32_fu_2353_p2 and or_ln785_23_fu_2347_p2);
    and_ln785_fu_814_p2 <= (xor_ln785_16_fu_809_p2 and or_ln785_fu_803_p2);
    and_ln786_48_fu_838_p2 <= (xor_ln786_fu_832_p2 and tmp_reg_3564);
    and_ln786_49_fu_1013_p2 <= (tmp_256_fu_926_p3 and select_ln416_1_fu_976_p3);
    and_ln786_50_fu_1031_p2 <= (xor_ln786_32_fu_1025_p2 and tmp_251_reg_3595);
    and_ln786_51_fu_2493_p2 <= (xor_ln786_33_fu_2487_p2 and tmp_260_fu_2465_p3);
    and_ln786_52_fu_1206_p2 <= (tmp_267_fu_1119_p3 and select_ln416_2_fu_1169_p3);
    and_ln786_53_fu_1224_p2 <= (xor_ln786_34_fu_1218_p2 and tmp_262_reg_3626);
    and_ln786_54_fu_2785_p2 <= (xor_ln786_35_fu_2780_p2 and tmp_271_reg_4113);
    and_ln786_55_fu_1399_p2 <= (tmp_278_fu_1312_p3 and select_ln416_3_fu_1362_p3);
    and_ln786_56_fu_1417_p2 <= (xor_ln786_36_fu_1411_p2 and tmp_273_reg_3657);
    and_ln786_57_fu_2866_p2 <= (xor_ln786_37_fu_2860_p2 and tmp_282_fu_2839_p3);
    and_ln786_58_fu_1592_p2 <= (tmp_289_fu_1505_p3 and select_ln416_4_fu_1555_p3);
    and_ln786_59_fu_1610_p2 <= (xor_ln786_38_fu_1604_p2 and tmp_284_reg_3688);
    and_ln786_60_fu_2953_p2 <= (xor_ln786_39_fu_2948_p2 and tmp_293_reg_4169);
    and_ln786_61_fu_1785_p2 <= (tmp_300_fu_1698_p3 and select_ln416_5_fu_1748_p3);
    and_ln786_62_fu_1803_p2 <= (xor_ln786_40_fu_1797_p2 and tmp_295_reg_3719);
    and_ln786_63_fu_3034_p2 <= (xor_ln786_41_fu_3028_p2 and tmp_304_fu_3007_p3);
    and_ln786_64_fu_1978_p2 <= (tmp_311_fu_1891_p3 and select_ln416_6_fu_1941_p3);
    and_ln786_65_fu_1996_p2 <= (xor_ln786_42_fu_1990_p2 and tmp_306_reg_3750);
    and_ln786_66_fu_3121_p2 <= (xor_ln786_43_fu_3116_p2 and tmp_315_reg_4189);
    and_ln786_67_fu_2171_p2 <= (tmp_322_fu_2084_p3 and select_ln416_7_fu_2134_p3);
    and_ln786_68_fu_2189_p2 <= (xor_ln786_44_fu_2183_p2 and tmp_317_reg_3781);
    and_ln786_69_fu_3202_p2 <= (xor_ln786_45_fu_3196_p2 and tmp_326_fu_3175_p3);
    and_ln786_70_fu_2364_p2 <= (tmp_333_fu_2277_p3 and select_ln416_8_fu_2327_p3);
    and_ln786_71_fu_2382_p2 <= (xor_ln786_46_fu_2376_p2 and tmp_328_reg_3812);
    and_ln786_72_fu_3289_p2 <= (xor_ln786_47_fu_3284_p2 and tmp_337_reg_4209);
    and_ln786_fu_820_p2 <= (tmp_247_fu_733_p3 and select_ln416_fu_783_p3);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_11001_assign_proc : process(ap_start)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_start = ap_const_logic_0) and (ap_start = ap_const_logic_1));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_start, ap_ce)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_const_logic_0 = ap_ce) or ((ap_start = ap_const_logic_0) and (ap_start = ap_const_logic_1)));
    end process;


    ap_block_state1_pp0_stage0_iter0_assign_proc : process(ap_start)
    begin
                ap_block_state1_pp0_stage0_iter0 <= (ap_start = ap_const_logic_0);
    end process;

        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_done_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter8, ap_block_pp0_stage0_11001, ap_ce)
    begin
        if ((((ap_start = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start;

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_idle_pp0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8)
    begin
        if (((ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to7_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7)
    begin
        if (((ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0_0to7 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to7 <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_ce)
    begin
        if (((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_reset_idle_pp0_assign_proc : process(ap_start, ap_idle_pp0_0to7)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0_0to7 = ap_const_logic_1))) then 
            ap_reset_idle_pp0 <= ap_const_logic_1;
        else 
            ap_reset_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_return <= 
        select_ln340_79_fu_3308_p3 when (or_ln340_81_fu_3303_p2(0) = '1') else 
        select_ln388_47_fu_3315_p3;
    icmp_ln718_16_fu_865_p2 <= "0" when (trunc_ln718_16_reg_3601 = ap_const_lv7_0) else "1";
    icmp_ln718_17_fu_1058_p2 <= "0" when (trunc_ln718_17_reg_3632 = ap_const_lv7_0) else "1";
    icmp_ln718_18_fu_1251_p2 <= "0" when (trunc_ln718_18_reg_3663 = ap_const_lv7_0) else "1";
    icmp_ln718_19_fu_1444_p2 <= "0" when (trunc_ln718_19_reg_3694 = ap_const_lv7_0) else "1";
    icmp_ln718_20_fu_1637_p2 <= "0" when (trunc_ln718_20_reg_3725 = ap_const_lv7_0) else "1";
    icmp_ln718_21_fu_1830_p2 <= "0" when (trunc_ln718_21_reg_3756 = ap_const_lv7_0) else "1";
    icmp_ln718_22_fu_2023_p2 <= "0" when (trunc_ln718_22_reg_3787 = ap_const_lv7_0) else "1";
    icmp_ln718_23_fu_2216_p2 <= "0" when (trunc_ln718_23_reg_3818 = ap_const_lv7_0) else "1";
    icmp_ln718_fu_672_p2 <= "0" when (trunc_ln718_reg_3570 = ap_const_lv7_0) else "1";
    icmp_ln768_1_fu_944_p2 <= "1" when (tmp_258_reg_3611 = ap_const_lv6_0) else "0";
    icmp_ln768_2_fu_1137_p2 <= "1" when (tmp_269_reg_3642 = ap_const_lv6_0) else "0";
    icmp_ln768_3_fu_1330_p2 <= "1" when (tmp_280_reg_3673 = ap_const_lv6_0) else "0";
    icmp_ln768_4_fu_1523_p2 <= "1" when (tmp_291_reg_3704 = ap_const_lv6_0) else "0";
    icmp_ln768_5_fu_1716_p2 <= "1" when (tmp_302_reg_3735 = ap_const_lv6_0) else "0";
    icmp_ln768_6_fu_1909_p2 <= "1" when (tmp_313_reg_3766 = ap_const_lv6_0) else "0";
    icmp_ln768_7_fu_2102_p2 <= "1" when (tmp_324_reg_3797 = ap_const_lv6_0) else "0";
    icmp_ln768_8_fu_2295_p2 <= "1" when (tmp_335_reg_3828 = ap_const_lv6_0) else "0";
    icmp_ln768_fu_751_p2 <= "1" when (tmp_249_reg_3580 = ap_const_lv6_0) else "0";
    icmp_ln879_10_fu_1706_p2 <= "1" when (tmp_301_reg_3730 = ap_const_lv5_1F) else "0";
    icmp_ln879_11_fu_1711_p2 <= "1" when (tmp_302_reg_3735 = ap_const_lv6_3F) else "0";
    icmp_ln879_12_fu_1899_p2 <= "1" when (tmp_312_reg_3761 = ap_const_lv5_1F) else "0";
    icmp_ln879_13_fu_1904_p2 <= "1" when (tmp_313_reg_3766 = ap_const_lv6_3F) else "0";
    icmp_ln879_14_fu_2092_p2 <= "1" when (tmp_323_reg_3792 = ap_const_lv5_1F) else "0";
    icmp_ln879_15_fu_2097_p2 <= "1" when (tmp_324_reg_3797 = ap_const_lv6_3F) else "0";
    icmp_ln879_16_fu_2285_p2 <= "1" when (tmp_334_reg_3823 = ap_const_lv5_1F) else "0";
    icmp_ln879_17_fu_2290_p2 <= "1" when (tmp_335_reg_3828 = ap_const_lv6_3F) else "0";
    icmp_ln879_1_fu_746_p2 <= "1" when (tmp_249_reg_3580 = ap_const_lv6_3F) else "0";
    icmp_ln879_2_fu_934_p2 <= "1" when (tmp_257_reg_3606 = ap_const_lv5_1F) else "0";
    icmp_ln879_3_fu_939_p2 <= "1" when (tmp_258_reg_3611 = ap_const_lv6_3F) else "0";
    icmp_ln879_4_fu_1127_p2 <= "1" when (tmp_268_reg_3637 = ap_const_lv5_1F) else "0";
    icmp_ln879_5_fu_1132_p2 <= "1" when (tmp_269_reg_3642 = ap_const_lv6_3F) else "0";
    icmp_ln879_6_fu_1320_p2 <= "1" when (tmp_279_reg_3668 = ap_const_lv5_1F) else "0";
    icmp_ln879_7_fu_1325_p2 <= "1" when (tmp_280_reg_3673 = ap_const_lv6_3F) else "0";
    icmp_ln879_8_fu_1513_p2 <= "1" when (tmp_290_reg_3699 = ap_const_lv5_1F) else "0";
    icmp_ln879_9_fu_1518_p2 <= "1" when (tmp_291_reg_3704 = ap_const_lv6_3F) else "0";
    icmp_ln879_fu_741_p2 <= "1" when (tmp_248_reg_3575 = ap_const_lv5_1F) else "0";
    kernel_weight_fp_address0 <= weight_V_offset_cast_fu_257_p1(9 - 1 downto 0);
    kernel_weight_fp_address1 <= zext_ln1117_fu_268_p1(9 - 1 downto 0);
    kernel_weight_fp_address2 <= zext_ln1117_1_fu_279_p1(9 - 1 downto 0);
    kernel_weight_fp_address3 <= zext_ln1117_2_fu_290_p1(9 - 1 downto 0);
    kernel_weight_fp_address4 <= zext_ln1117_3_fu_301_p1(9 - 1 downto 0);
    kernel_weight_fp_address5 <= zext_ln1117_4_fu_312_p1(9 - 1 downto 0);
    kernel_weight_fp_address6 <= zext_ln1117_5_fu_323_p1(9 - 1 downto 0);
    kernel_weight_fp_address7 <= zext_ln1117_6_fu_334_p1(9 - 1 downto 0);
    kernel_weight_fp_address8 <= zext_ln1117_7_fu_345_p1(9 - 1 downto 0);

    kernel_weight_fp_ce0_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_ce)
    begin
        if (((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            kernel_weight_fp_ce0 <= ap_const_logic_1;
        else 
            kernel_weight_fp_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    kernel_weight_fp_ce1_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_ce)
    begin
        if (((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            kernel_weight_fp_ce1 <= ap_const_logic_1;
        else 
            kernel_weight_fp_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    kernel_weight_fp_ce2_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_ce)
    begin
        if (((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            kernel_weight_fp_ce2 <= ap_const_logic_1;
        else 
            kernel_weight_fp_ce2 <= ap_const_logic_0;
        end if; 
    end process;


    kernel_weight_fp_ce3_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_ce)
    begin
        if (((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            kernel_weight_fp_ce3 <= ap_const_logic_1;
        else 
            kernel_weight_fp_ce3 <= ap_const_logic_0;
        end if; 
    end process;


    kernel_weight_fp_ce4_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_ce)
    begin
        if (((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            kernel_weight_fp_ce4 <= ap_const_logic_1;
        else 
            kernel_weight_fp_ce4 <= ap_const_logic_0;
        end if; 
    end process;


    kernel_weight_fp_ce5_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_ce)
    begin
        if (((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            kernel_weight_fp_ce5 <= ap_const_logic_1;
        else 
            kernel_weight_fp_ce5 <= ap_const_logic_0;
        end if; 
    end process;


    kernel_weight_fp_ce6_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_ce)
    begin
        if (((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            kernel_weight_fp_ce6 <= ap_const_logic_1;
        else 
            kernel_weight_fp_ce6 <= ap_const_logic_0;
        end if; 
    end process;


    kernel_weight_fp_ce7_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_ce)
    begin
        if (((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            kernel_weight_fp_ce7 <= ap_const_logic_1;
        else 
            kernel_weight_fp_ce7 <= ap_const_logic_0;
        end if; 
    end process;


    kernel_weight_fp_ce8_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_ce)
    begin
        if (((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            kernel_weight_fp_ce8 <= ap_const_logic_1;
        else 
            kernel_weight_fp_ce8 <= ap_const_logic_0;
        end if; 
    end process;

    or_ln340_48_fu_2393_p2 <= (xor_ln785_16_reg_3845 or and_ln786_reg_3850);
    or_ln340_49_fu_2397_p2 <= (or_ln340_48_fu_2393_p2 or and_ln781_reg_3840);
    or_ln340_50_fu_1036_p2 <= (and_ln786_50_fu_1031_p2 or and_ln785_1_fu_1007_p2);
    or_ln340_51_fu_2422_p2 <= (xor_ln785_18_reg_3876 or and_ln786_49_reg_3881);
    or_ln340_52_fu_2426_p2 <= (or_ln340_51_fu_2422_p2 or and_ln781_16_reg_3871);
    or_ln340_53_fu_2511_p2 <= (xor_ln340_48_fu_2505_p2 or tmp_261_fu_2479_p3);
    or_ln340_54_fu_1229_p2 <= (and_ln786_53_fu_1224_p2 or and_ln785_2_fu_1200_p2);
    or_ln340_55_fu_2541_p2 <= (xor_ln785_20_reg_3907 or and_ln786_52_reg_3912);
    or_ln340_56_fu_2545_p2 <= (or_ln340_55_fu_2541_p2 or and_ln781_17_reg_3902);
    or_ln340_57_fu_2799_p2 <= (xor_ln340_50_fu_2794_p2 or tmp_272_reg_4126);
    or_ln340_58_fu_1422_p2 <= (and_ln786_56_fu_1417_p2 or and_ln785_3_fu_1393_p2);
    or_ln340_59_fu_2606_p2 <= (xor_ln785_22_reg_3938 or and_ln786_55_reg_3943);
    or_ln340_60_fu_2610_p2 <= (or_ln340_59_fu_2606_p2 or and_ln781_18_reg_3933);
    or_ln340_61_fu_2884_p2 <= (xor_ln340_52_fu_2878_p2 or tmp_283_fu_2852_p3);
    or_ln340_62_fu_1615_p2 <= (and_ln786_59_fu_1610_p2 or and_ln785_4_fu_1586_p2);
    or_ln340_63_fu_2635_p2 <= (xor_ln785_24_reg_3969 or and_ln786_58_reg_3974);
    or_ln340_64_fu_2639_p2 <= (or_ln340_63_fu_2635_p2 or and_ln781_19_reg_3964);
    or_ln340_65_fu_2967_p2 <= (xor_ln340_54_fu_2962_p2 or tmp_294_reg_4182);
    or_ln340_66_fu_1808_p2 <= (and_ln786_62_fu_1803_p2 or and_ln785_5_fu_1779_p2);
    or_ln340_67_fu_2664_p2 <= (xor_ln785_26_reg_4000 or and_ln786_61_reg_4005);
    or_ln340_68_fu_2668_p2 <= (or_ln340_67_fu_2664_p2 or and_ln781_20_reg_3995);
    or_ln340_69_fu_3052_p2 <= (xor_ln340_56_fu_3046_p2 or tmp_305_fu_3020_p3);
    or_ln340_70_fu_2001_p2 <= (and_ln786_65_fu_1996_p2 or and_ln785_6_fu_1972_p2);
    or_ln340_71_fu_2693_p2 <= (xor_ln785_28_reg_4031 or and_ln786_64_reg_4036);
    or_ln340_72_fu_2697_p2 <= (or_ln340_71_fu_2693_p2 or and_ln781_21_reg_4026);
    or_ln340_73_fu_3135_p2 <= (xor_ln340_58_fu_3130_p2 or tmp_316_reg_4202);
    or_ln340_74_fu_2194_p2 <= (and_ln786_68_fu_2189_p2 or and_ln785_7_fu_2165_p2);
    or_ln340_75_fu_2722_p2 <= (xor_ln785_30_reg_4062 or and_ln786_67_reg_4067);
    or_ln340_76_fu_2726_p2 <= (or_ln340_75_fu_2722_p2 or and_ln781_22_reg_4057);
    or_ln340_77_fu_3220_p2 <= (xor_ln340_60_fu_3214_p2 or tmp_327_fu_3188_p3);
    or_ln340_78_fu_2387_p2 <= (and_ln786_71_fu_2382_p2 or and_ln785_8_fu_2358_p2);
    or_ln340_79_fu_2751_p2 <= (xor_ln785_32_reg_4093 or and_ln786_70_reg_4098);
    or_ln340_80_fu_2755_p2 <= (or_ln340_79_fu_2751_p2 or and_ln781_23_reg_4088);
    or_ln340_81_fu_3303_p2 <= (xor_ln340_62_fu_3298_p2 or tmp_338_reg_4222);
    or_ln340_fu_843_p2 <= (and_ln786_48_fu_838_p2 or and_ln785_fu_814_p2);
    or_ln412_16_fu_877_p2 <= (tmp_252_fu_858_p3 or icmp_ln718_16_fu_865_p2);
    or_ln412_17_fu_1070_p2 <= (tmp_263_fu_1051_p3 or icmp_ln718_17_fu_1058_p2);
    or_ln412_18_fu_1263_p2 <= (tmp_274_fu_1244_p3 or icmp_ln718_18_fu_1251_p2);
    or_ln412_19_fu_1456_p2 <= (tmp_285_fu_1437_p3 or icmp_ln718_19_fu_1444_p2);
    or_ln412_20_fu_1649_p2 <= (tmp_296_fu_1630_p3 or icmp_ln718_20_fu_1637_p2);
    or_ln412_21_fu_1842_p2 <= (tmp_307_fu_1823_p3 or icmp_ln718_21_fu_1830_p2);
    or_ln412_22_fu_2035_p2 <= (tmp_318_fu_2016_p3 or icmp_ln718_22_fu_2023_p2);
    or_ln412_23_fu_2228_p2 <= (tmp_329_fu_2209_p3 or icmp_ln718_23_fu_2216_p2);
    or_ln412_fu_684_p2 <= (tmp_243_fu_665_p3 or icmp_ln718_fu_672_p2);
    or_ln785_16_fu_996_p2 <= (xor_ln785_17_fu_990_p2 or tmp_256_fu_926_p3);
    or_ln785_17_fu_1189_p2 <= (xor_ln785_19_fu_1183_p2 or tmp_267_fu_1119_p3);
    or_ln785_18_fu_1382_p2 <= (xor_ln785_21_fu_1376_p2 or tmp_278_fu_1312_p3);
    or_ln785_19_fu_1575_p2 <= (xor_ln785_23_fu_1569_p2 or tmp_289_fu_1505_p3);
    or_ln785_20_fu_1768_p2 <= (xor_ln785_25_fu_1762_p2 or tmp_300_fu_1698_p3);
    or_ln785_21_fu_1961_p2 <= (xor_ln785_27_fu_1955_p2 or tmp_311_fu_1891_p3);
    or_ln785_22_fu_2154_p2 <= (xor_ln785_29_fu_2148_p2 or tmp_322_fu_2084_p3);
    or_ln785_23_fu_2347_p2 <= (xor_ln785_31_fu_2341_p2 or tmp_333_fu_2277_p3);
    or_ln785_fu_803_p2 <= (xor_ln785_fu_797_p2 or tmp_247_fu_733_p3);
    or_ln786_32_fu_1019_p2 <= (and_ln786_49_fu_1013_p2 or and_ln781_16_fu_984_p2);
    or_ln786_33_fu_1212_p2 <= (and_ln786_52_fu_1206_p2 or and_ln781_17_fu_1177_p2);
    or_ln786_34_fu_1405_p2 <= (and_ln786_55_fu_1399_p2 or and_ln781_18_fu_1370_p2);
    or_ln786_35_fu_1598_p2 <= (and_ln786_58_fu_1592_p2 or and_ln781_19_fu_1563_p2);
    or_ln786_36_fu_1791_p2 <= (and_ln786_61_fu_1785_p2 or and_ln781_20_fu_1756_p2);
    or_ln786_37_fu_1984_p2 <= (and_ln786_64_fu_1978_p2 or and_ln781_21_fu_1949_p2);
    or_ln786_38_fu_2177_p2 <= (and_ln786_67_fu_2171_p2 or and_ln781_22_fu_2142_p2);
    or_ln786_39_fu_2370_p2 <= (and_ln786_70_fu_2364_p2 or and_ln781_23_fu_2335_p2);
    or_ln786_fu_826_p2 <= (and_ln786_fu_820_p2 or and_ln781_fu_791_p2);
    select_ln340_64_fu_2431_p3 <= 
        ap_const_lv16_7FFF when (or_ln340_50_reg_3891(0) = '1') else 
        add_ln415_16_reg_3865;
    select_ln340_65_fu_2517_p3 <= 
        ap_const_lv16_7FFF when (xor_ln340_fu_2499_p2(0) = '1') else 
        add_ln703_fu_2473_p2;
    select_ln340_66_fu_2550_p3 <= 
        ap_const_lv16_7FFF when (or_ln340_54_reg_3922(0) = '1') else 
        add_ln415_17_reg_3896;
    select_ln340_67_fu_2804_p3 <= 
        ap_const_lv16_7FFF when (xor_ln340_49_fu_2790_p2(0) = '1') else 
        add_ln703_47_reg_4120;
    select_ln340_68_fu_2615_p3 <= 
        ap_const_lv16_7FFF when (or_ln340_58_reg_3953(0) = '1') else 
        add_ln415_18_reg_3927;
    select_ln340_69_fu_2890_p3 <= 
        ap_const_lv16_7FFF when (xor_ln340_51_fu_2872_p2(0) = '1') else 
        add_ln703_48_fu_2847_p2;
    select_ln340_70_fu_2644_p3 <= 
        ap_const_lv16_7FFF when (or_ln340_62_reg_3984(0) = '1') else 
        add_ln415_19_reg_3958;
    select_ln340_71_fu_2972_p3 <= 
        ap_const_lv16_7FFF when (xor_ln340_53_fu_2958_p2(0) = '1') else 
        add_ln703_49_reg_4176;
    select_ln340_72_fu_2673_p3 <= 
        ap_const_lv16_7FFF when (or_ln340_66_reg_4015(0) = '1') else 
        add_ln415_20_reg_3989;
    select_ln340_73_fu_3058_p3 <= 
        ap_const_lv16_7FFF when (xor_ln340_55_fu_3040_p2(0) = '1') else 
        add_ln703_50_fu_3015_p2;
    select_ln340_74_fu_2702_p3 <= 
        ap_const_lv16_7FFF when (or_ln340_70_reg_4046(0) = '1') else 
        add_ln415_21_reg_4020;
    select_ln340_75_fu_3140_p3 <= 
        ap_const_lv16_7FFF when (xor_ln340_57_fu_3126_p2(0) = '1') else 
        add_ln703_51_reg_4196;
    select_ln340_76_fu_2731_p3 <= 
        ap_const_lv16_7FFF when (or_ln340_74_reg_4077(0) = '1') else 
        add_ln415_22_reg_4051;
    select_ln340_77_fu_3226_p3 <= 
        ap_const_lv16_7FFF when (xor_ln340_59_fu_3208_p2(0) = '1') else 
        add_ln703_52_fu_3183_p2;
    select_ln340_78_fu_2760_p3 <= 
        ap_const_lv16_7FFF when (or_ln340_78_reg_4108(0) = '1') else 
        add_ln415_23_reg_4082;
    select_ln340_79_fu_3308_p3 <= 
        ap_const_lv16_7FFF when (xor_ln340_61_fu_3294_p2(0) = '1') else 
        add_ln703_53_reg_4216;
    select_ln340_80_fu_2414_p3 <= 
        select_ln340_fu_2402_p3 when (or_ln340_49_fu_2397_p2(0) = '1') else 
        select_ln388_fu_2408_p3;
    select_ln340_81_fu_2443_p3 <= 
        select_ln340_64_fu_2431_p3 when (or_ln340_52_fu_2426_p2(0) = '1') else 
        select_ln388_32_fu_2437_p3;
    select_ln340_82_fu_2533_p3 <= 
        select_ln340_65_fu_2517_p3 when (or_ln340_53_fu_2511_p2(0) = '1') else 
        select_ln388_33_fu_2525_p3;
    select_ln340_83_fu_2562_p3 <= 
        select_ln340_66_fu_2550_p3 when (or_ln340_56_fu_2545_p2(0) = '1') else 
        select_ln388_34_fu_2556_p3;
    select_ln340_84_fu_2818_p3 <= 
        select_ln340_67_fu_2804_p3 when (or_ln340_57_fu_2799_p2(0) = '1') else 
        select_ln388_35_fu_2811_p3;
    select_ln340_85_fu_2627_p3 <= 
        select_ln340_68_fu_2615_p3 when (or_ln340_60_fu_2610_p2(0) = '1') else 
        select_ln388_36_fu_2621_p3;
    select_ln340_86_fu_2906_p3 <= 
        select_ln340_69_fu_2890_p3 when (or_ln340_61_fu_2884_p2(0) = '1') else 
        select_ln388_37_fu_2898_p3;
    select_ln340_87_fu_2656_p3 <= 
        select_ln340_70_fu_2644_p3 when (or_ln340_64_fu_2639_p2(0) = '1') else 
        select_ln388_38_fu_2650_p3;
    select_ln340_88_fu_2986_p3 <= 
        select_ln340_71_fu_2972_p3 when (or_ln340_65_fu_2967_p2(0) = '1') else 
        select_ln388_39_fu_2979_p3;
    select_ln340_89_fu_2685_p3 <= 
        select_ln340_72_fu_2673_p3 when (or_ln340_68_fu_2668_p2(0) = '1') else 
        select_ln388_40_fu_2679_p3;
    select_ln340_90_fu_3074_p3 <= 
        select_ln340_73_fu_3058_p3 when (or_ln340_69_fu_3052_p2(0) = '1') else 
        select_ln388_41_fu_3066_p3;
    select_ln340_91_fu_2714_p3 <= 
        select_ln340_74_fu_2702_p3 when (or_ln340_72_fu_2697_p2(0) = '1') else 
        select_ln388_42_fu_2708_p3;
    select_ln340_92_fu_3154_p3 <= 
        select_ln340_75_fu_3140_p3 when (or_ln340_73_fu_3135_p2(0) = '1') else 
        select_ln388_43_fu_3147_p3;
    select_ln340_93_fu_2743_p3 <= 
        select_ln340_76_fu_2731_p3 when (or_ln340_76_fu_2726_p2(0) = '1') else 
        select_ln388_44_fu_2737_p3;
    select_ln340_94_fu_3242_p3 <= 
        select_ln340_77_fu_3226_p3 when (or_ln340_77_fu_3220_p2(0) = '1') else 
        select_ln388_45_fu_3234_p3;
    select_ln340_95_fu_2772_p3 <= 
        select_ln340_78_fu_2760_p3 when (or_ln340_80_fu_2755_p2(0) = '1') else 
        select_ln388_46_fu_2766_p3;
    select_ln340_fu_2402_p3 <= 
        ap_const_lv16_7FFF when (or_ln340_reg_3860(0) = '1') else 
        add_ln415_reg_3834;
    select_ln388_32_fu_2437_p3 <= 
        ap_const_lv16_8000 when (and_ln786_50_reg_3886(0) = '1') else 
        add_ln415_16_reg_3865;
    select_ln388_33_fu_2525_p3 <= 
        ap_const_lv16_8000 when (and_ln786_51_fu_2493_p2(0) = '1') else 
        add_ln703_fu_2473_p2;
    select_ln388_34_fu_2556_p3 <= 
        ap_const_lv16_8000 when (and_ln786_53_reg_3917(0) = '1') else 
        add_ln415_17_reg_3896;
    select_ln388_35_fu_2811_p3 <= 
        ap_const_lv16_8000 when (and_ln786_54_fu_2785_p2(0) = '1') else 
        add_ln703_47_reg_4120;
    select_ln388_36_fu_2621_p3 <= 
        ap_const_lv16_8000 when (and_ln786_56_reg_3948(0) = '1') else 
        add_ln415_18_reg_3927;
    select_ln388_37_fu_2898_p3 <= 
        ap_const_lv16_8000 when (and_ln786_57_fu_2866_p2(0) = '1') else 
        add_ln703_48_fu_2847_p2;
    select_ln388_38_fu_2650_p3 <= 
        ap_const_lv16_8000 when (and_ln786_59_reg_3979(0) = '1') else 
        add_ln415_19_reg_3958;
    select_ln388_39_fu_2979_p3 <= 
        ap_const_lv16_8000 when (and_ln786_60_fu_2953_p2(0) = '1') else 
        add_ln703_49_reg_4176;
    select_ln388_40_fu_2679_p3 <= 
        ap_const_lv16_8000 when (and_ln786_62_reg_4010(0) = '1') else 
        add_ln415_20_reg_3989;
    select_ln388_41_fu_3066_p3 <= 
        ap_const_lv16_8000 when (and_ln786_63_fu_3034_p2(0) = '1') else 
        add_ln703_50_fu_3015_p2;
    select_ln388_42_fu_2708_p3 <= 
        ap_const_lv16_8000 when (and_ln786_65_reg_4041(0) = '1') else 
        add_ln415_21_reg_4020;
    select_ln388_43_fu_3147_p3 <= 
        ap_const_lv16_8000 when (and_ln786_66_fu_3121_p2(0) = '1') else 
        add_ln703_51_reg_4196;
    select_ln388_44_fu_2737_p3 <= 
        ap_const_lv16_8000 when (and_ln786_68_reg_4072(0) = '1') else 
        add_ln415_22_reg_4051;
    select_ln388_45_fu_3234_p3 <= 
        ap_const_lv16_8000 when (and_ln786_69_fu_3202_p2(0) = '1') else 
        add_ln703_52_fu_3183_p2;
    select_ln388_46_fu_2766_p3 <= 
        ap_const_lv16_8000 when (and_ln786_71_reg_4103(0) = '1') else 
        add_ln415_23_reg_4082;
    select_ln388_47_fu_3315_p3 <= 
        ap_const_lv16_8000 when (and_ln786_72_fu_3289_p2(0) = '1') else 
        add_ln703_53_reg_4216;
    select_ln388_fu_2408_p3 <= 
        ap_const_lv16_8000 when (and_ln786_48_reg_3855(0) = '1') else 
        add_ln415_reg_3834;
    select_ln416_1_fu_976_p3 <= 
        and_ln779_1_fu_970_p2 when (and_ln416_16_fu_920_p2(0) = '1') else 
        icmp_ln879_3_fu_939_p2;
    select_ln416_2_fu_1169_p3 <= 
        and_ln779_2_fu_1163_p2 when (and_ln416_17_fu_1113_p2(0) = '1') else 
        icmp_ln879_5_fu_1132_p2;
    select_ln416_3_fu_1362_p3 <= 
        and_ln779_3_fu_1356_p2 when (and_ln416_18_fu_1306_p2(0) = '1') else 
        icmp_ln879_7_fu_1325_p2;
    select_ln416_4_fu_1555_p3 <= 
        and_ln779_4_fu_1549_p2 when (and_ln416_19_fu_1499_p2(0) = '1') else 
        icmp_ln879_9_fu_1518_p2;
    select_ln416_5_fu_1748_p3 <= 
        and_ln779_5_fu_1742_p2 when (and_ln416_20_fu_1692_p2(0) = '1') else 
        icmp_ln879_11_fu_1711_p2;
    select_ln416_6_fu_1941_p3 <= 
        and_ln779_6_fu_1935_p2 when (and_ln416_21_fu_1885_p2(0) = '1') else 
        icmp_ln879_13_fu_1904_p2;
    select_ln416_7_fu_2134_p3 <= 
        and_ln779_7_fu_2128_p2 when (and_ln416_22_fu_2078_p2(0) = '1') else 
        icmp_ln879_15_fu_2097_p2;
    select_ln416_8_fu_2327_p3 <= 
        and_ln779_8_fu_2321_p2 when (and_ln416_23_fu_2271_p2(0) = '1') else 
        icmp_ln879_17_fu_2290_p2;
    select_ln416_fu_783_p3 <= 
        and_ln779_fu_777_p2 when (and_ln416_fu_727_p2(0) = '1') else 
        icmp_ln879_1_fu_746_p2;
    select_ln777_1_fu_949_p3 <= 
        icmp_ln879_3_fu_939_p2 when (and_ln416_16_fu_920_p2(0) = '1') else 
        icmp_ln768_1_fu_944_p2;
    select_ln777_2_fu_1142_p3 <= 
        icmp_ln879_5_fu_1132_p2 when (and_ln416_17_fu_1113_p2(0) = '1') else 
        icmp_ln768_2_fu_1137_p2;
    select_ln777_3_fu_1335_p3 <= 
        icmp_ln879_7_fu_1325_p2 when (and_ln416_18_fu_1306_p2(0) = '1') else 
        icmp_ln768_3_fu_1330_p2;
    select_ln777_4_fu_1528_p3 <= 
        icmp_ln879_9_fu_1518_p2 when (and_ln416_19_fu_1499_p2(0) = '1') else 
        icmp_ln768_4_fu_1523_p2;
    select_ln777_5_fu_1721_p3 <= 
        icmp_ln879_11_fu_1711_p2 when (and_ln416_20_fu_1692_p2(0) = '1') else 
        icmp_ln768_5_fu_1716_p2;
    select_ln777_6_fu_1914_p3 <= 
        icmp_ln879_13_fu_1904_p2 when (and_ln416_21_fu_1885_p2(0) = '1') else 
        icmp_ln768_6_fu_1909_p2;
    select_ln777_7_fu_2107_p3 <= 
        icmp_ln879_15_fu_2097_p2 when (and_ln416_22_fu_2078_p2(0) = '1') else 
        icmp_ln768_7_fu_2102_p2;
    select_ln777_8_fu_2300_p3 <= 
        icmp_ln879_17_fu_2290_p2 when (and_ln416_23_fu_2271_p2(0) = '1') else 
        icmp_ln768_8_fu_2295_p2;
    select_ln777_fu_756_p3 <= 
        icmp_ln879_1_fu_746_p2 when (and_ln416_fu_727_p2(0) = '1') else 
        icmp_ln768_fu_751_p2;
        sext_ln703_80_fu_2455_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(select_ln340_81_fu_2443_p3),17));

        sext_ln703_81_fu_2570_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(select_ln340_82_fu_2533_p3),17));

        sext_ln703_82_fu_2574_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(select_ln340_83_fu_2562_p3),17));

        sext_ln703_83_fu_2826_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(select_ln340_84_fu_2818_p3),17));

        sext_ln703_84_fu_2830_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(select_ln340_85_reg_4133),17));

        sext_ln703_85_fu_2914_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(select_ln340_86_fu_2906_p3),17));

        sext_ln703_86_fu_2918_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(select_ln340_87_reg_4139),17));

        sext_ln703_87_fu_2994_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(select_ln340_88_fu_2986_p3),17));

        sext_ln703_88_fu_2998_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(select_ln340_89_reg_4145_pp0_iter5_reg),17));

        sext_ln703_89_fu_3082_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(select_ln340_90_fu_3074_p3),17));

        sext_ln703_90_fu_3086_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(select_ln340_91_reg_4151_pp0_iter5_reg),17));

        sext_ln703_91_fu_3162_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(select_ln340_92_fu_3154_p3),17));

        sext_ln703_92_fu_3166_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(select_ln340_93_reg_4157_pp0_iter6_reg),17));

        sext_ln703_93_fu_3250_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(select_ln340_94_fu_3242_p3),17));

        sext_ln703_94_fu_3254_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(select_ln340_95_reg_4163_pp0_iter6_reg),17));

        sext_ln703_fu_2451_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(select_ln340_80_fu_2414_p3),17));

    tmp_243_fu_665_p3 <= mul_ln1118_reg_3555(8 downto 8);
    tmp_244_fu_677_p3 <= mul_ln1118_reg_3555(23 downto 23);
    tmp_245_fu_690_p3 <= mul_ln1118_reg_3555(7 downto 7);
    tmp_246_fu_713_p3 <= add_ln415_fu_707_p2(15 downto 15);
    tmp_247_fu_733_p3 <= add_ln415_fu_707_p2(15 downto 15);
    tmp_250_fu_764_p3 <= mul_ln1118_reg_3555(24 downto 24);
    tmp_252_fu_858_p3 <= mul_ln1118_16_reg_3586(8 downto 8);
    tmp_253_fu_870_p3 <= mul_ln1118_16_reg_3586(23 downto 23);
    tmp_254_fu_883_p3 <= mul_ln1118_16_reg_3586(7 downto 7);
    tmp_255_fu_906_p3 <= add_ln415_16_fu_900_p2(15 downto 15);
    tmp_256_fu_926_p3 <= add_ln415_16_fu_900_p2(15 downto 15);
    tmp_259_fu_957_p3 <= mul_ln1118_16_reg_3586(24 downto 24);
    tmp_260_fu_2465_p3 <= add_ln1192_fu_2459_p2(16 downto 16);
    tmp_261_fu_2479_p3 <= add_ln703_fu_2473_p2(15 downto 15);
    tmp_263_fu_1051_p3 <= mul_ln1118_17_reg_3617(8 downto 8);
    tmp_264_fu_1063_p3 <= mul_ln1118_17_reg_3617(23 downto 23);
    tmp_265_fu_1076_p3 <= mul_ln1118_17_reg_3617(7 downto 7);
    tmp_266_fu_1099_p3 <= add_ln415_17_fu_1093_p2(15 downto 15);
    tmp_267_fu_1119_p3 <= add_ln415_17_fu_1093_p2(15 downto 15);
    tmp_270_fu_1150_p3 <= mul_ln1118_17_reg_3617(24 downto 24);
    tmp_274_fu_1244_p3 <= mul_ln1118_18_reg_3648(8 downto 8);
    tmp_275_fu_1256_p3 <= mul_ln1118_18_reg_3648(23 downto 23);
    tmp_276_fu_1269_p3 <= mul_ln1118_18_reg_3648(7 downto 7);
    tmp_277_fu_1292_p3 <= add_ln415_18_fu_1286_p2(15 downto 15);
    tmp_278_fu_1312_p3 <= add_ln415_18_fu_1286_p2(15 downto 15);
    tmp_281_fu_1343_p3 <= mul_ln1118_18_reg_3648(24 downto 24);
    tmp_282_fu_2839_p3 <= add_ln1192_65_fu_2833_p2(16 downto 16);
    tmp_283_fu_2852_p3 <= add_ln703_48_fu_2847_p2(15 downto 15);
    tmp_285_fu_1437_p3 <= mul_ln1118_19_reg_3679(8 downto 8);
    tmp_286_fu_1449_p3 <= mul_ln1118_19_reg_3679(23 downto 23);
    tmp_287_fu_1462_p3 <= mul_ln1118_19_reg_3679(7 downto 7);
    tmp_288_fu_1485_p3 <= add_ln415_19_fu_1479_p2(15 downto 15);
    tmp_289_fu_1505_p3 <= add_ln415_19_fu_1479_p2(15 downto 15);
    tmp_292_fu_1536_p3 <= mul_ln1118_19_reg_3679(24 downto 24);
    tmp_296_fu_1630_p3 <= mul_ln1118_20_reg_3710(8 downto 8);
    tmp_297_fu_1642_p3 <= mul_ln1118_20_reg_3710(23 downto 23);
    tmp_298_fu_1655_p3 <= mul_ln1118_20_reg_3710(7 downto 7);
    tmp_299_fu_1678_p3 <= add_ln415_20_fu_1672_p2(15 downto 15);
    tmp_300_fu_1698_p3 <= add_ln415_20_fu_1672_p2(15 downto 15);
    tmp_303_fu_1729_p3 <= mul_ln1118_20_reg_3710(24 downto 24);
    tmp_304_fu_3007_p3 <= add_ln1192_67_fu_3001_p2(16 downto 16);
    tmp_305_fu_3020_p3 <= add_ln703_50_fu_3015_p2(15 downto 15);
    tmp_307_fu_1823_p3 <= mul_ln1118_21_reg_3741(8 downto 8);
    tmp_308_fu_1835_p3 <= mul_ln1118_21_reg_3741(23 downto 23);
    tmp_309_fu_1848_p3 <= mul_ln1118_21_reg_3741(7 downto 7);
    tmp_310_fu_1871_p3 <= add_ln415_21_fu_1865_p2(15 downto 15);
    tmp_311_fu_1891_p3 <= add_ln415_21_fu_1865_p2(15 downto 15);
    tmp_314_fu_1922_p3 <= mul_ln1118_21_reg_3741(24 downto 24);
    tmp_318_fu_2016_p3 <= mul_ln1118_22_reg_3772(8 downto 8);
    tmp_319_fu_2028_p3 <= mul_ln1118_22_reg_3772(23 downto 23);
    tmp_320_fu_2041_p3 <= mul_ln1118_22_reg_3772(7 downto 7);
    tmp_321_fu_2064_p3 <= add_ln415_22_fu_2058_p2(15 downto 15);
    tmp_322_fu_2084_p3 <= add_ln415_22_fu_2058_p2(15 downto 15);
    tmp_325_fu_2115_p3 <= mul_ln1118_22_reg_3772(24 downto 24);
    tmp_326_fu_3175_p3 <= add_ln1192_69_fu_3169_p2(16 downto 16);
    tmp_327_fu_3188_p3 <= add_ln703_52_fu_3183_p2(15 downto 15);
    tmp_329_fu_2209_p3 <= mul_ln1118_23_reg_3803(8 downto 8);
    tmp_330_fu_2221_p3 <= mul_ln1118_23_reg_3803(23 downto 23);
    tmp_331_fu_2234_p3 <= mul_ln1118_23_reg_3803(7 downto 7);
    tmp_332_fu_2257_p3 <= add_ln415_23_fu_2251_p2(15 downto 15);
    tmp_333_fu_2277_p3 <= add_ln415_23_fu_2251_p2(15 downto 15);
    tmp_336_fu_2308_p3 <= mul_ln1118_23_reg_3803(24 downto 24);
    trunc_ln3_fu_656_p4 <= mul_ln1118_reg_3555(23 downto 8);
    trunc_ln708_15_fu_1042_p4 <= mul_ln1118_17_reg_3617(23 downto 8);
    trunc_ln708_16_fu_1235_p4 <= mul_ln1118_18_reg_3648(23 downto 8);
    trunc_ln708_17_fu_1428_p4 <= mul_ln1118_19_reg_3679(23 downto 8);
    trunc_ln708_18_fu_1621_p4 <= mul_ln1118_20_reg_3710(23 downto 8);
    trunc_ln708_19_fu_1814_p4 <= mul_ln1118_21_reg_3741(23 downto 8);
    trunc_ln708_20_fu_2007_p4 <= mul_ln1118_22_reg_3772(23 downto 8);
    trunc_ln708_21_fu_2200_p4 <= mul_ln1118_23_reg_3803(23 downto 8);
    trunc_ln708_s_fu_849_p4 <= mul_ln1118_16_reg_3586(23 downto 8);
    trunc_ln718_16_fu_397_p1 <= mul_ln1118_16_fu_3340_p2(7 - 1 downto 0);
    trunc_ln718_17_fu_431_p1 <= mul_ln1118_17_fu_3350_p2(7 - 1 downto 0);
    trunc_ln718_18_fu_465_p1 <= mul_ln1118_18_fu_3360_p2(7 - 1 downto 0);
    trunc_ln718_19_fu_499_p1 <= mul_ln1118_19_fu_3370_p2(7 - 1 downto 0);
    trunc_ln718_20_fu_533_p1 <= mul_ln1118_20_fu_3380_p2(7 - 1 downto 0);
    trunc_ln718_21_fu_567_p1 <= mul_ln1118_21_fu_3390_p2(7 - 1 downto 0);
    trunc_ln718_22_fu_601_p1 <= mul_ln1118_22_fu_3400_p2(7 - 1 downto 0);
    trunc_ln718_23_fu_635_p1 <= mul_ln1118_23_fu_3410_p2(7 - 1 downto 0);
    trunc_ln718_fu_363_p1 <= mul_ln1118_fu_3330_p2(7 - 1 downto 0);
    weight_V_offset_cast_fu_257_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(weight_V_offset),64));
    xor_ln340_48_fu_2505_p2 <= (tmp_260_fu_2465_p3 xor ap_const_lv1_1);
    xor_ln340_49_fu_2790_p2 <= (tmp_272_reg_4126 xor tmp_271_reg_4113);
    xor_ln340_50_fu_2794_p2 <= (tmp_271_reg_4113 xor ap_const_lv1_1);
    xor_ln340_51_fu_2872_p2 <= (tmp_283_fu_2852_p3 xor tmp_282_fu_2839_p3);
    xor_ln340_52_fu_2878_p2 <= (tmp_282_fu_2839_p3 xor ap_const_lv1_1);
    xor_ln340_53_fu_2958_p2 <= (tmp_294_reg_4182 xor tmp_293_reg_4169);
    xor_ln340_54_fu_2962_p2 <= (tmp_293_reg_4169 xor ap_const_lv1_1);
    xor_ln340_55_fu_3040_p2 <= (tmp_305_fu_3020_p3 xor tmp_304_fu_3007_p3);
    xor_ln340_56_fu_3046_p2 <= (tmp_304_fu_3007_p3 xor ap_const_lv1_1);
    xor_ln340_57_fu_3126_p2 <= (tmp_316_reg_4202 xor tmp_315_reg_4189);
    xor_ln340_58_fu_3130_p2 <= (tmp_315_reg_4189 xor ap_const_lv1_1);
    xor_ln340_59_fu_3208_p2 <= (tmp_327_fu_3188_p3 xor tmp_326_fu_3175_p3);
    xor_ln340_60_fu_3214_p2 <= (tmp_326_fu_3175_p3 xor ap_const_lv1_1);
    xor_ln340_61_fu_3294_p2 <= (tmp_338_reg_4222 xor tmp_337_reg_4209);
    xor_ln340_62_fu_3298_p2 <= (tmp_337_reg_4209 xor ap_const_lv1_1);
    xor_ln340_fu_2499_p2 <= (tmp_261_fu_2479_p3 xor tmp_260_fu_2465_p3);
    xor_ln416_47_fu_914_p2 <= (tmp_255_fu_906_p3 xor ap_const_lv1_1);
    xor_ln416_48_fu_1107_p2 <= (tmp_266_fu_1099_p3 xor ap_const_lv1_1);
    xor_ln416_49_fu_1300_p2 <= (tmp_277_fu_1292_p3 xor ap_const_lv1_1);
    xor_ln416_50_fu_1493_p2 <= (tmp_288_fu_1485_p3 xor ap_const_lv1_1);
    xor_ln416_51_fu_1686_p2 <= (tmp_299_fu_1678_p3 xor ap_const_lv1_1);
    xor_ln416_52_fu_1879_p2 <= (tmp_310_fu_1871_p3 xor ap_const_lv1_1);
    xor_ln416_53_fu_2072_p2 <= (tmp_321_fu_2064_p3 xor ap_const_lv1_1);
    xor_ln416_54_fu_2265_p2 <= (tmp_332_fu_2257_p3 xor ap_const_lv1_1);
    xor_ln416_fu_721_p2 <= (tmp_246_fu_713_p3 xor ap_const_lv1_1);
    xor_ln779_16_fu_964_p2 <= (tmp_259_fu_957_p3 xor ap_const_lv1_1);
    xor_ln779_17_fu_1157_p2 <= (tmp_270_fu_1150_p3 xor ap_const_lv1_1);
    xor_ln779_18_fu_1350_p2 <= (tmp_281_fu_1343_p3 xor ap_const_lv1_1);
    xor_ln779_19_fu_1543_p2 <= (tmp_292_fu_1536_p3 xor ap_const_lv1_1);
    xor_ln779_20_fu_1736_p2 <= (tmp_303_fu_1729_p3 xor ap_const_lv1_1);
    xor_ln779_21_fu_1929_p2 <= (tmp_314_fu_1922_p3 xor ap_const_lv1_1);
    xor_ln779_22_fu_2122_p2 <= (tmp_325_fu_2115_p3 xor ap_const_lv1_1);
    xor_ln779_23_fu_2315_p2 <= (tmp_336_fu_2308_p3 xor ap_const_lv1_1);
    xor_ln779_fu_771_p2 <= (tmp_250_fu_764_p3 xor ap_const_lv1_1);
    xor_ln785_16_fu_809_p2 <= (tmp_reg_3564 xor ap_const_lv1_1);
    xor_ln785_17_fu_990_p2 <= (select_ln777_1_fu_949_p3 xor ap_const_lv1_1);
    xor_ln785_18_fu_1002_p2 <= (tmp_251_reg_3595 xor ap_const_lv1_1);
    xor_ln785_19_fu_1183_p2 <= (select_ln777_2_fu_1142_p3 xor ap_const_lv1_1);
    xor_ln785_20_fu_1195_p2 <= (tmp_262_reg_3626 xor ap_const_lv1_1);
    xor_ln785_21_fu_1376_p2 <= (select_ln777_3_fu_1335_p3 xor ap_const_lv1_1);
    xor_ln785_22_fu_1388_p2 <= (tmp_273_reg_3657 xor ap_const_lv1_1);
    xor_ln785_23_fu_1569_p2 <= (select_ln777_4_fu_1528_p3 xor ap_const_lv1_1);
    xor_ln785_24_fu_1581_p2 <= (tmp_284_reg_3688 xor ap_const_lv1_1);
    xor_ln785_25_fu_1762_p2 <= (select_ln777_5_fu_1721_p3 xor ap_const_lv1_1);
    xor_ln785_26_fu_1774_p2 <= (tmp_295_reg_3719 xor ap_const_lv1_1);
    xor_ln785_27_fu_1955_p2 <= (select_ln777_6_fu_1914_p3 xor ap_const_lv1_1);
    xor_ln785_28_fu_1967_p2 <= (tmp_306_reg_3750 xor ap_const_lv1_1);
    xor_ln785_29_fu_2148_p2 <= (select_ln777_7_fu_2107_p3 xor ap_const_lv1_1);
    xor_ln785_30_fu_2160_p2 <= (tmp_317_reg_3781 xor ap_const_lv1_1);
    xor_ln785_31_fu_2341_p2 <= (select_ln777_8_fu_2300_p3 xor ap_const_lv1_1);
    xor_ln785_32_fu_2353_p2 <= (tmp_328_reg_3812 xor ap_const_lv1_1);
    xor_ln785_fu_797_p2 <= (select_ln777_fu_756_p3 xor ap_const_lv1_1);
    xor_ln786_32_fu_1025_p2 <= (or_ln786_32_fu_1019_p2 xor ap_const_lv1_1);
    xor_ln786_33_fu_2487_p2 <= (tmp_261_fu_2479_p3 xor ap_const_lv1_1);
    xor_ln786_34_fu_1218_p2 <= (or_ln786_33_fu_1212_p2 xor ap_const_lv1_1);
    xor_ln786_35_fu_2780_p2 <= (tmp_272_reg_4126 xor ap_const_lv1_1);
    xor_ln786_36_fu_1411_p2 <= (or_ln786_34_fu_1405_p2 xor ap_const_lv1_1);
    xor_ln786_37_fu_2860_p2 <= (tmp_283_fu_2852_p3 xor ap_const_lv1_1);
    xor_ln786_38_fu_1604_p2 <= (or_ln786_35_fu_1598_p2 xor ap_const_lv1_1);
    xor_ln786_39_fu_2948_p2 <= (tmp_294_reg_4182 xor ap_const_lv1_1);
    xor_ln786_40_fu_1797_p2 <= (or_ln786_36_fu_1791_p2 xor ap_const_lv1_1);
    xor_ln786_41_fu_3028_p2 <= (tmp_305_fu_3020_p3 xor ap_const_lv1_1);
    xor_ln786_42_fu_1990_p2 <= (or_ln786_37_fu_1984_p2 xor ap_const_lv1_1);
    xor_ln786_43_fu_3116_p2 <= (tmp_316_reg_4202 xor ap_const_lv1_1);
    xor_ln786_44_fu_2183_p2 <= (or_ln786_38_fu_2177_p2 xor ap_const_lv1_1);
    xor_ln786_45_fu_3196_p2 <= (tmp_327_fu_3188_p3 xor ap_const_lv1_1);
    xor_ln786_46_fu_2376_p2 <= (or_ln786_39_fu_2370_p2 xor ap_const_lv1_1);
    xor_ln786_47_fu_3284_p2 <= (tmp_338_reg_4222 xor ap_const_lv1_1);
    xor_ln786_fu_832_p2 <= (or_ln786_fu_826_p2 xor ap_const_lv1_1);
    zext_ln1117_1_fu_279_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1117_1_fu_273_p2),64));
    zext_ln1117_2_fu_290_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1117_2_fu_284_p2),64));
    zext_ln1117_3_fu_301_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1117_3_fu_295_p2),64));
    zext_ln1117_4_fu_312_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1117_4_fu_306_p2),64));
    zext_ln1117_5_fu_323_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1117_5_fu_317_p2),64));
    zext_ln1117_6_fu_334_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1117_6_fu_328_p2),64));
    zext_ln1117_7_fu_345_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1117_7_fu_339_p2),64));
    zext_ln1117_fu_268_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1117_fu_262_p2),64));
    zext_ln415_16_fu_896_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(and_ln415_16_fu_890_p2),16));
    zext_ln415_17_fu_1089_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(and_ln415_17_fu_1083_p2),16));
    zext_ln415_18_fu_1282_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(and_ln415_18_fu_1276_p2),16));
    zext_ln415_19_fu_1475_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(and_ln415_19_fu_1469_p2),16));
    zext_ln415_20_fu_1668_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(and_ln415_20_fu_1662_p2),16));
    zext_ln415_21_fu_1861_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(and_ln415_21_fu_1855_p2),16));
    zext_ln415_22_fu_2054_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(and_ln415_22_fu_2048_p2),16));
    zext_ln415_23_fu_2247_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(and_ln415_23_fu_2241_p2),16));
    zext_ln415_fu_703_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(and_ln415_fu_697_p2),16));
end behav;
