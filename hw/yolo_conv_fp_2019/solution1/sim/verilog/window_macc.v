// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module window_macc (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        ap_ce,
        window_0_0_val_V_r,
        window_0_1_val_V_r,
        window_0_2_val_V_r,
        window_1_0_val_V_r,
        window_1_1_val_V_r,
        window_1_2_val_V_r,
        window_2_0_val_V_r,
        window_2_1_val_V_r,
        window_2_2_val_V_r,
        weight_V_offset,
        ap_return
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input   ap_ce;
input  [15:0] window_0_0_val_V_r;
input  [15:0] window_0_1_val_V_r;
input  [15:0] window_0_2_val_V_r;
input  [15:0] window_1_0_val_V_r;
input  [15:0] window_1_1_val_V_r;
input  [15:0] window_1_2_val_V_r;
input  [15:0] window_2_0_val_V_r;
input  [15:0] window_2_1_val_V_r;
input  [15:0] window_2_2_val_V_r;
input  [8:0] weight_V_offset;
output  [15:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
wire    ap_block_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_idle_pp0;
reg    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_state7_pp0_stage0_iter6;
wire    ap_block_state8_pp0_stage0_iter7;
wire    ap_block_state9_pp0_stage0_iter8;
reg    ap_block_pp0_stage0_11001;
wire   [8:0] kernel_weight_fp_address0;
reg    kernel_weight_fp_ce0;
wire   [13:0] kernel_weight_fp_q0;
wire   [8:0] kernel_weight_fp_address1;
reg    kernel_weight_fp_ce1;
wire   [13:0] kernel_weight_fp_q1;
wire   [8:0] kernel_weight_fp_address2;
reg    kernel_weight_fp_ce2;
wire   [13:0] kernel_weight_fp_q2;
wire   [8:0] kernel_weight_fp_address3;
reg    kernel_weight_fp_ce3;
wire   [13:0] kernel_weight_fp_q3;
wire   [8:0] kernel_weight_fp_address4;
reg    kernel_weight_fp_ce4;
wire   [13:0] kernel_weight_fp_q4;
wire   [8:0] kernel_weight_fp_address5;
reg    kernel_weight_fp_ce5;
wire   [13:0] kernel_weight_fp_q5;
wire   [8:0] kernel_weight_fp_address6;
reg    kernel_weight_fp_ce6;
wire   [13:0] kernel_weight_fp_q6;
wire   [8:0] kernel_weight_fp_address7;
reg    kernel_weight_fp_ce7;
wire   [13:0] kernel_weight_fp_q7;
wire   [8:0] kernel_weight_fp_address8;
reg    kernel_weight_fp_ce8;
wire   [13:0] kernel_weight_fp_q8;
reg   [15:0] window_2_2_val_V_r_1_reg_3420;
reg  signed [15:0] window_2_2_val_V_r_1_reg_3420_pp0_iter1_reg;
reg   [15:0] window_2_1_val_V_r_1_reg_3425;
reg  signed [15:0] window_2_1_val_V_r_1_reg_3425_pp0_iter1_reg;
reg   [15:0] window_2_0_val_V_r_1_reg_3430;
reg  signed [15:0] window_2_0_val_V_r_1_reg_3430_pp0_iter1_reg;
reg   [15:0] window_1_2_val_V_r_1_reg_3435;
reg  signed [15:0] window_1_2_val_V_r_1_reg_3435_pp0_iter1_reg;
reg   [15:0] window_1_1_val_V_r_1_reg_3440;
reg  signed [15:0] window_1_1_val_V_r_1_reg_3440_pp0_iter1_reg;
reg   [15:0] window_1_0_val_V_r_1_reg_3445;
reg  signed [15:0] window_1_0_val_V_r_1_reg_3445_pp0_iter1_reg;
reg   [15:0] window_0_2_val_V_r_1_reg_3450;
reg  signed [15:0] window_0_2_val_V_r_1_reg_3450_pp0_iter1_reg;
reg   [15:0] window_0_1_val_V_r_1_reg_3455;
reg  signed [15:0] window_0_1_val_V_r_1_reg_3455_pp0_iter1_reg;
reg   [15:0] window_0_0_val_V_r_1_reg_3460;
reg  signed [15:0] window_0_0_val_V_r_1_reg_3460_pp0_iter1_reg;
reg  signed [13:0] kernel_weight_fp_loa_reg_3510;
reg  signed [13:0] kernel_weight_fp_loa_1_reg_3515;
reg  signed [13:0] kernel_weight_fp_loa_2_reg_3520;
reg  signed [13:0] kernel_weight_fp_loa_3_reg_3525;
reg  signed [13:0] kernel_weight_fp_loa_4_reg_3530;
reg  signed [13:0] kernel_weight_fp_loa_5_reg_3535;
reg  signed [13:0] kernel_weight_fp_loa_6_reg_3540;
reg  signed [13:0] kernel_weight_fp_loa_7_reg_3545;
reg  signed [13:0] kernel_weight_fp_loa_8_reg_3550;
wire  signed [29:0] mul_ln1118_fu_3330_p2;
reg  signed [29:0] mul_ln1118_reg_3555;
reg   [0:0] tmp_reg_3564;
wire   [6:0] trunc_ln718_fu_363_p1;
reg   [6:0] trunc_ln718_reg_3570;
reg   [4:0] tmp_248_reg_3575;
reg   [5:0] tmp_249_reg_3580;
wire  signed [29:0] mul_ln1118_16_fu_3340_p2;
reg  signed [29:0] mul_ln1118_16_reg_3586;
reg   [0:0] tmp_251_reg_3595;
wire   [6:0] trunc_ln718_16_fu_397_p1;
reg   [6:0] trunc_ln718_16_reg_3601;
reg   [4:0] tmp_257_reg_3606;
reg   [5:0] tmp_258_reg_3611;
wire  signed [29:0] mul_ln1118_17_fu_3350_p2;
reg  signed [29:0] mul_ln1118_17_reg_3617;
reg   [0:0] tmp_262_reg_3626;
wire   [6:0] trunc_ln718_17_fu_431_p1;
reg   [6:0] trunc_ln718_17_reg_3632;
reg   [4:0] tmp_268_reg_3637;
reg   [5:0] tmp_269_reg_3642;
wire  signed [29:0] mul_ln1118_18_fu_3360_p2;
reg  signed [29:0] mul_ln1118_18_reg_3648;
reg   [0:0] tmp_273_reg_3657;
wire   [6:0] trunc_ln718_18_fu_465_p1;
reg   [6:0] trunc_ln718_18_reg_3663;
reg   [4:0] tmp_279_reg_3668;
reg   [5:0] tmp_280_reg_3673;
wire  signed [29:0] mul_ln1118_19_fu_3370_p2;
reg  signed [29:0] mul_ln1118_19_reg_3679;
reg   [0:0] tmp_284_reg_3688;
wire   [6:0] trunc_ln718_19_fu_499_p1;
reg   [6:0] trunc_ln718_19_reg_3694;
reg   [4:0] tmp_290_reg_3699;
reg   [5:0] tmp_291_reg_3704;
wire  signed [29:0] mul_ln1118_20_fu_3380_p2;
reg  signed [29:0] mul_ln1118_20_reg_3710;
reg   [0:0] tmp_295_reg_3719;
wire   [6:0] trunc_ln718_20_fu_533_p1;
reg   [6:0] trunc_ln718_20_reg_3725;
reg   [4:0] tmp_301_reg_3730;
reg   [5:0] tmp_302_reg_3735;
wire  signed [29:0] mul_ln1118_21_fu_3390_p2;
reg  signed [29:0] mul_ln1118_21_reg_3741;
reg   [0:0] tmp_306_reg_3750;
wire   [6:0] trunc_ln718_21_fu_567_p1;
reg   [6:0] trunc_ln718_21_reg_3756;
reg   [4:0] tmp_312_reg_3761;
reg   [5:0] tmp_313_reg_3766;
wire  signed [29:0] mul_ln1118_22_fu_3400_p2;
reg  signed [29:0] mul_ln1118_22_reg_3772;
reg   [0:0] tmp_317_reg_3781;
wire   [6:0] trunc_ln718_22_fu_601_p1;
reg   [6:0] trunc_ln718_22_reg_3787;
reg   [4:0] tmp_323_reg_3792;
reg   [5:0] tmp_324_reg_3797;
wire  signed [29:0] mul_ln1118_23_fu_3410_p2;
reg  signed [29:0] mul_ln1118_23_reg_3803;
reg   [0:0] tmp_328_reg_3812;
wire   [6:0] trunc_ln718_23_fu_635_p1;
reg   [6:0] trunc_ln718_23_reg_3818;
reg   [4:0] tmp_334_reg_3823;
reg   [5:0] tmp_335_reg_3828;
wire   [15:0] add_ln415_fu_707_p2;
reg   [15:0] add_ln415_reg_3834;
wire   [0:0] and_ln781_fu_791_p2;
reg   [0:0] and_ln781_reg_3840;
wire   [0:0] xor_ln785_16_fu_809_p2;
reg   [0:0] xor_ln785_16_reg_3845;
wire   [0:0] and_ln786_fu_820_p2;
reg   [0:0] and_ln786_reg_3850;
wire   [0:0] and_ln786_48_fu_838_p2;
reg   [0:0] and_ln786_48_reg_3855;
wire   [0:0] or_ln340_fu_843_p2;
reg   [0:0] or_ln340_reg_3860;
wire   [15:0] add_ln415_16_fu_900_p2;
reg   [15:0] add_ln415_16_reg_3865;
wire   [0:0] and_ln781_16_fu_984_p2;
reg   [0:0] and_ln781_16_reg_3871;
wire   [0:0] xor_ln785_18_fu_1002_p2;
reg   [0:0] xor_ln785_18_reg_3876;
wire   [0:0] and_ln786_49_fu_1013_p2;
reg   [0:0] and_ln786_49_reg_3881;
wire   [0:0] and_ln786_50_fu_1031_p2;
reg   [0:0] and_ln786_50_reg_3886;
wire   [0:0] or_ln340_50_fu_1036_p2;
reg   [0:0] or_ln340_50_reg_3891;
wire   [15:0] add_ln415_17_fu_1093_p2;
reg   [15:0] add_ln415_17_reg_3896;
wire   [0:0] and_ln781_17_fu_1177_p2;
reg   [0:0] and_ln781_17_reg_3902;
wire   [0:0] xor_ln785_20_fu_1195_p2;
reg   [0:0] xor_ln785_20_reg_3907;
wire   [0:0] and_ln786_52_fu_1206_p2;
reg   [0:0] and_ln786_52_reg_3912;
wire   [0:0] and_ln786_53_fu_1224_p2;
reg   [0:0] and_ln786_53_reg_3917;
wire   [0:0] or_ln340_54_fu_1229_p2;
reg   [0:0] or_ln340_54_reg_3922;
wire   [15:0] add_ln415_18_fu_1286_p2;
reg   [15:0] add_ln415_18_reg_3927;
wire   [0:0] and_ln781_18_fu_1370_p2;
reg   [0:0] and_ln781_18_reg_3933;
wire   [0:0] xor_ln785_22_fu_1388_p2;
reg   [0:0] xor_ln785_22_reg_3938;
wire   [0:0] and_ln786_55_fu_1399_p2;
reg   [0:0] and_ln786_55_reg_3943;
wire   [0:0] and_ln786_56_fu_1417_p2;
reg   [0:0] and_ln786_56_reg_3948;
wire   [0:0] or_ln340_58_fu_1422_p2;
reg   [0:0] or_ln340_58_reg_3953;
wire   [15:0] add_ln415_19_fu_1479_p2;
reg   [15:0] add_ln415_19_reg_3958;
wire   [0:0] and_ln781_19_fu_1563_p2;
reg   [0:0] and_ln781_19_reg_3964;
wire   [0:0] xor_ln785_24_fu_1581_p2;
reg   [0:0] xor_ln785_24_reg_3969;
wire   [0:0] and_ln786_58_fu_1592_p2;
reg   [0:0] and_ln786_58_reg_3974;
wire   [0:0] and_ln786_59_fu_1610_p2;
reg   [0:0] and_ln786_59_reg_3979;
wire   [0:0] or_ln340_62_fu_1615_p2;
reg   [0:0] or_ln340_62_reg_3984;
wire   [15:0] add_ln415_20_fu_1672_p2;
reg   [15:0] add_ln415_20_reg_3989;
wire   [0:0] and_ln781_20_fu_1756_p2;
reg   [0:0] and_ln781_20_reg_3995;
wire   [0:0] xor_ln785_26_fu_1774_p2;
reg   [0:0] xor_ln785_26_reg_4000;
wire   [0:0] and_ln786_61_fu_1785_p2;
reg   [0:0] and_ln786_61_reg_4005;
wire   [0:0] and_ln786_62_fu_1803_p2;
reg   [0:0] and_ln786_62_reg_4010;
wire   [0:0] or_ln340_66_fu_1808_p2;
reg   [0:0] or_ln340_66_reg_4015;
wire   [15:0] add_ln415_21_fu_1865_p2;
reg   [15:0] add_ln415_21_reg_4020;
wire   [0:0] and_ln781_21_fu_1949_p2;
reg   [0:0] and_ln781_21_reg_4026;
wire   [0:0] xor_ln785_28_fu_1967_p2;
reg   [0:0] xor_ln785_28_reg_4031;
wire   [0:0] and_ln786_64_fu_1978_p2;
reg   [0:0] and_ln786_64_reg_4036;
wire   [0:0] and_ln786_65_fu_1996_p2;
reg   [0:0] and_ln786_65_reg_4041;
wire   [0:0] or_ln340_70_fu_2001_p2;
reg   [0:0] or_ln340_70_reg_4046;
wire   [15:0] add_ln415_22_fu_2058_p2;
reg   [15:0] add_ln415_22_reg_4051;
wire   [0:0] and_ln781_22_fu_2142_p2;
reg   [0:0] and_ln781_22_reg_4057;
wire   [0:0] xor_ln785_30_fu_2160_p2;
reg   [0:0] xor_ln785_30_reg_4062;
wire   [0:0] and_ln786_67_fu_2171_p2;
reg   [0:0] and_ln786_67_reg_4067;
wire   [0:0] and_ln786_68_fu_2189_p2;
reg   [0:0] and_ln786_68_reg_4072;
wire   [0:0] or_ln340_74_fu_2194_p2;
reg   [0:0] or_ln340_74_reg_4077;
wire   [15:0] add_ln415_23_fu_2251_p2;
reg   [15:0] add_ln415_23_reg_4082;
wire   [0:0] and_ln781_23_fu_2335_p2;
reg   [0:0] and_ln781_23_reg_4088;
wire   [0:0] xor_ln785_32_fu_2353_p2;
reg   [0:0] xor_ln785_32_reg_4093;
wire   [0:0] and_ln786_70_fu_2364_p2;
reg   [0:0] and_ln786_70_reg_4098;
wire   [0:0] and_ln786_71_fu_2382_p2;
reg   [0:0] and_ln786_71_reg_4103;
wire   [0:0] or_ln340_78_fu_2387_p2;
reg   [0:0] or_ln340_78_reg_4108;
reg   [0:0] tmp_271_reg_4113;
wire   [15:0] add_ln703_47_fu_2592_p2;
reg   [15:0] add_ln703_47_reg_4120;
reg   [0:0] tmp_272_reg_4126;
wire  signed [15:0] select_ln340_85_fu_2627_p3;
reg  signed [15:0] select_ln340_85_reg_4133;
wire  signed [15:0] select_ln340_87_fu_2656_p3;
reg  signed [15:0] select_ln340_87_reg_4139;
wire  signed [15:0] select_ln340_89_fu_2685_p3;
reg  signed [15:0] select_ln340_89_reg_4145;
reg  signed [15:0] select_ln340_89_reg_4145_pp0_iter5_reg;
wire  signed [15:0] select_ln340_91_fu_2714_p3;
reg  signed [15:0] select_ln340_91_reg_4151;
reg  signed [15:0] select_ln340_91_reg_4151_pp0_iter5_reg;
wire  signed [15:0] select_ln340_93_fu_2743_p3;
reg  signed [15:0] select_ln340_93_reg_4157;
reg  signed [15:0] select_ln340_93_reg_4157_pp0_iter5_reg;
reg  signed [15:0] select_ln340_93_reg_4157_pp0_iter6_reg;
wire  signed [15:0] select_ln340_95_fu_2772_p3;
reg  signed [15:0] select_ln340_95_reg_4163;
reg  signed [15:0] select_ln340_95_reg_4163_pp0_iter5_reg;
reg  signed [15:0] select_ln340_95_reg_4163_pp0_iter6_reg;
reg   [0:0] tmp_293_reg_4169;
wire   [15:0] add_ln703_49_fu_2935_p2;
reg   [15:0] add_ln703_49_reg_4176;
reg   [0:0] tmp_294_reg_4182;
reg   [0:0] tmp_315_reg_4189;
wire   [15:0] add_ln703_51_fu_3103_p2;
reg   [15:0] add_ln703_51_reg_4196;
reg   [0:0] tmp_316_reg_4202;
reg   [0:0] tmp_337_reg_4209;
wire   [15:0] add_ln703_53_fu_3271_p2;
reg   [15:0] add_ln703_53_reg_4216;
reg   [0:0] tmp_338_reg_4222;
reg    ap_block_pp0_stage0_subdone;
wire   [63:0] weight_V_offset_cast_fu_257_p1;
wire   [63:0] zext_ln1117_fu_268_p1;
wire   [63:0] zext_ln1117_1_fu_279_p1;
wire   [63:0] zext_ln1117_2_fu_290_p1;
wire   [63:0] zext_ln1117_3_fu_301_p1;
wire   [63:0] zext_ln1117_4_fu_312_p1;
wire   [63:0] zext_ln1117_5_fu_323_p1;
wire   [63:0] zext_ln1117_6_fu_334_p1;
wire   [63:0] zext_ln1117_7_fu_345_p1;
wire   [8:0] add_ln1117_fu_262_p2;
wire   [8:0] add_ln1117_1_fu_273_p2;
wire   [8:0] add_ln1117_2_fu_284_p2;
wire   [8:0] add_ln1117_3_fu_295_p2;
wire   [8:0] add_ln1117_4_fu_306_p2;
wire   [8:0] add_ln1117_5_fu_317_p2;
wire   [8:0] add_ln1117_6_fu_328_p2;
wire   [8:0] add_ln1117_7_fu_339_p2;
wire   [0:0] icmp_ln718_fu_672_p2;
wire   [0:0] tmp_243_fu_665_p3;
wire   [0:0] tmp_245_fu_690_p3;
wire   [0:0] or_ln412_fu_684_p2;
wire   [0:0] and_ln415_fu_697_p2;
wire   [15:0] zext_ln415_fu_703_p1;
wire   [15:0] trunc_ln3_fu_656_p4;
wire   [0:0] tmp_246_fu_713_p3;
wire   [0:0] tmp_244_fu_677_p3;
wire   [0:0] xor_ln416_fu_721_p2;
wire   [0:0] and_ln416_fu_727_p2;
wire   [0:0] icmp_ln879_1_fu_746_p2;
wire   [0:0] icmp_ln768_fu_751_p2;
wire   [0:0] tmp_250_fu_764_p3;
wire   [0:0] icmp_ln879_fu_741_p2;
wire   [0:0] xor_ln779_fu_771_p2;
wire   [0:0] and_ln779_fu_777_p2;
wire   [0:0] select_ln777_fu_756_p3;
wire   [0:0] tmp_247_fu_733_p3;
wire   [0:0] xor_ln785_fu_797_p2;
wire   [0:0] or_ln785_fu_803_p2;
wire   [0:0] select_ln416_fu_783_p3;
wire   [0:0] or_ln786_fu_826_p2;
wire   [0:0] xor_ln786_fu_832_p2;
wire   [0:0] and_ln785_fu_814_p2;
wire   [0:0] icmp_ln718_16_fu_865_p2;
wire   [0:0] tmp_252_fu_858_p3;
wire   [0:0] tmp_254_fu_883_p3;
wire   [0:0] or_ln412_16_fu_877_p2;
wire   [0:0] and_ln415_16_fu_890_p2;
wire   [15:0] zext_ln415_16_fu_896_p1;
wire   [15:0] trunc_ln708_s_fu_849_p4;
wire   [0:0] tmp_255_fu_906_p3;
wire   [0:0] tmp_253_fu_870_p3;
wire   [0:0] xor_ln416_47_fu_914_p2;
wire   [0:0] and_ln416_16_fu_920_p2;
wire   [0:0] icmp_ln879_3_fu_939_p2;
wire   [0:0] icmp_ln768_1_fu_944_p2;
wire   [0:0] tmp_259_fu_957_p3;
wire   [0:0] icmp_ln879_2_fu_934_p2;
wire   [0:0] xor_ln779_16_fu_964_p2;
wire   [0:0] and_ln779_1_fu_970_p2;
wire   [0:0] select_ln777_1_fu_949_p3;
wire   [0:0] tmp_256_fu_926_p3;
wire   [0:0] xor_ln785_17_fu_990_p2;
wire   [0:0] or_ln785_16_fu_996_p2;
wire   [0:0] select_ln416_1_fu_976_p3;
wire   [0:0] or_ln786_32_fu_1019_p2;
wire   [0:0] xor_ln786_32_fu_1025_p2;
wire   [0:0] and_ln785_1_fu_1007_p2;
wire   [0:0] icmp_ln718_17_fu_1058_p2;
wire   [0:0] tmp_263_fu_1051_p3;
wire   [0:0] tmp_265_fu_1076_p3;
wire   [0:0] or_ln412_17_fu_1070_p2;
wire   [0:0] and_ln415_17_fu_1083_p2;
wire   [15:0] zext_ln415_17_fu_1089_p1;
wire   [15:0] trunc_ln708_15_fu_1042_p4;
wire   [0:0] tmp_266_fu_1099_p3;
wire   [0:0] tmp_264_fu_1063_p3;
wire   [0:0] xor_ln416_48_fu_1107_p2;
wire   [0:0] and_ln416_17_fu_1113_p2;
wire   [0:0] icmp_ln879_5_fu_1132_p2;
wire   [0:0] icmp_ln768_2_fu_1137_p2;
wire   [0:0] tmp_270_fu_1150_p3;
wire   [0:0] icmp_ln879_4_fu_1127_p2;
wire   [0:0] xor_ln779_17_fu_1157_p2;
wire   [0:0] and_ln779_2_fu_1163_p2;
wire   [0:0] select_ln777_2_fu_1142_p3;
wire   [0:0] tmp_267_fu_1119_p3;
wire   [0:0] xor_ln785_19_fu_1183_p2;
wire   [0:0] or_ln785_17_fu_1189_p2;
wire   [0:0] select_ln416_2_fu_1169_p3;
wire   [0:0] or_ln786_33_fu_1212_p2;
wire   [0:0] xor_ln786_34_fu_1218_p2;
wire   [0:0] and_ln785_2_fu_1200_p2;
wire   [0:0] icmp_ln718_18_fu_1251_p2;
wire   [0:0] tmp_274_fu_1244_p3;
wire   [0:0] tmp_276_fu_1269_p3;
wire   [0:0] or_ln412_18_fu_1263_p2;
wire   [0:0] and_ln415_18_fu_1276_p2;
wire   [15:0] zext_ln415_18_fu_1282_p1;
wire   [15:0] trunc_ln708_16_fu_1235_p4;
wire   [0:0] tmp_277_fu_1292_p3;
wire   [0:0] tmp_275_fu_1256_p3;
wire   [0:0] xor_ln416_49_fu_1300_p2;
wire   [0:0] and_ln416_18_fu_1306_p2;
wire   [0:0] icmp_ln879_7_fu_1325_p2;
wire   [0:0] icmp_ln768_3_fu_1330_p2;
wire   [0:0] tmp_281_fu_1343_p3;
wire   [0:0] icmp_ln879_6_fu_1320_p2;
wire   [0:0] xor_ln779_18_fu_1350_p2;
wire   [0:0] and_ln779_3_fu_1356_p2;
wire   [0:0] select_ln777_3_fu_1335_p3;
wire   [0:0] tmp_278_fu_1312_p3;
wire   [0:0] xor_ln785_21_fu_1376_p2;
wire   [0:0] or_ln785_18_fu_1382_p2;
wire   [0:0] select_ln416_3_fu_1362_p3;
wire   [0:0] or_ln786_34_fu_1405_p2;
wire   [0:0] xor_ln786_36_fu_1411_p2;
wire   [0:0] and_ln785_3_fu_1393_p2;
wire   [0:0] icmp_ln718_19_fu_1444_p2;
wire   [0:0] tmp_285_fu_1437_p3;
wire   [0:0] tmp_287_fu_1462_p3;
wire   [0:0] or_ln412_19_fu_1456_p2;
wire   [0:0] and_ln415_19_fu_1469_p2;
wire   [15:0] zext_ln415_19_fu_1475_p1;
wire   [15:0] trunc_ln708_17_fu_1428_p4;
wire   [0:0] tmp_288_fu_1485_p3;
wire   [0:0] tmp_286_fu_1449_p3;
wire   [0:0] xor_ln416_50_fu_1493_p2;
wire   [0:0] and_ln416_19_fu_1499_p2;
wire   [0:0] icmp_ln879_9_fu_1518_p2;
wire   [0:0] icmp_ln768_4_fu_1523_p2;
wire   [0:0] tmp_292_fu_1536_p3;
wire   [0:0] icmp_ln879_8_fu_1513_p2;
wire   [0:0] xor_ln779_19_fu_1543_p2;
wire   [0:0] and_ln779_4_fu_1549_p2;
wire   [0:0] select_ln777_4_fu_1528_p3;
wire   [0:0] tmp_289_fu_1505_p3;
wire   [0:0] xor_ln785_23_fu_1569_p2;
wire   [0:0] or_ln785_19_fu_1575_p2;
wire   [0:0] select_ln416_4_fu_1555_p3;
wire   [0:0] or_ln786_35_fu_1598_p2;
wire   [0:0] xor_ln786_38_fu_1604_p2;
wire   [0:0] and_ln785_4_fu_1586_p2;
wire   [0:0] icmp_ln718_20_fu_1637_p2;
wire   [0:0] tmp_296_fu_1630_p3;
wire   [0:0] tmp_298_fu_1655_p3;
wire   [0:0] or_ln412_20_fu_1649_p2;
wire   [0:0] and_ln415_20_fu_1662_p2;
wire   [15:0] zext_ln415_20_fu_1668_p1;
wire   [15:0] trunc_ln708_18_fu_1621_p4;
wire   [0:0] tmp_299_fu_1678_p3;
wire   [0:0] tmp_297_fu_1642_p3;
wire   [0:0] xor_ln416_51_fu_1686_p2;
wire   [0:0] and_ln416_20_fu_1692_p2;
wire   [0:0] icmp_ln879_11_fu_1711_p2;
wire   [0:0] icmp_ln768_5_fu_1716_p2;
wire   [0:0] tmp_303_fu_1729_p3;
wire   [0:0] icmp_ln879_10_fu_1706_p2;
wire   [0:0] xor_ln779_20_fu_1736_p2;
wire   [0:0] and_ln779_5_fu_1742_p2;
wire   [0:0] select_ln777_5_fu_1721_p3;
wire   [0:0] tmp_300_fu_1698_p3;
wire   [0:0] xor_ln785_25_fu_1762_p2;
wire   [0:0] or_ln785_20_fu_1768_p2;
wire   [0:0] select_ln416_5_fu_1748_p3;
wire   [0:0] or_ln786_36_fu_1791_p2;
wire   [0:0] xor_ln786_40_fu_1797_p2;
wire   [0:0] and_ln785_5_fu_1779_p2;
wire   [0:0] icmp_ln718_21_fu_1830_p2;
wire   [0:0] tmp_307_fu_1823_p3;
wire   [0:0] tmp_309_fu_1848_p3;
wire   [0:0] or_ln412_21_fu_1842_p2;
wire   [0:0] and_ln415_21_fu_1855_p2;
wire   [15:0] zext_ln415_21_fu_1861_p1;
wire   [15:0] trunc_ln708_19_fu_1814_p4;
wire   [0:0] tmp_310_fu_1871_p3;
wire   [0:0] tmp_308_fu_1835_p3;
wire   [0:0] xor_ln416_52_fu_1879_p2;
wire   [0:0] and_ln416_21_fu_1885_p2;
wire   [0:0] icmp_ln879_13_fu_1904_p2;
wire   [0:0] icmp_ln768_6_fu_1909_p2;
wire   [0:0] tmp_314_fu_1922_p3;
wire   [0:0] icmp_ln879_12_fu_1899_p2;
wire   [0:0] xor_ln779_21_fu_1929_p2;
wire   [0:0] and_ln779_6_fu_1935_p2;
wire   [0:0] select_ln777_6_fu_1914_p3;
wire   [0:0] tmp_311_fu_1891_p3;
wire   [0:0] xor_ln785_27_fu_1955_p2;
wire   [0:0] or_ln785_21_fu_1961_p2;
wire   [0:0] select_ln416_6_fu_1941_p3;
wire   [0:0] or_ln786_37_fu_1984_p2;
wire   [0:0] xor_ln786_42_fu_1990_p2;
wire   [0:0] and_ln785_6_fu_1972_p2;
wire   [0:0] icmp_ln718_22_fu_2023_p2;
wire   [0:0] tmp_318_fu_2016_p3;
wire   [0:0] tmp_320_fu_2041_p3;
wire   [0:0] or_ln412_22_fu_2035_p2;
wire   [0:0] and_ln415_22_fu_2048_p2;
wire   [15:0] zext_ln415_22_fu_2054_p1;
wire   [15:0] trunc_ln708_20_fu_2007_p4;
wire   [0:0] tmp_321_fu_2064_p3;
wire   [0:0] tmp_319_fu_2028_p3;
wire   [0:0] xor_ln416_53_fu_2072_p2;
wire   [0:0] and_ln416_22_fu_2078_p2;
wire   [0:0] icmp_ln879_15_fu_2097_p2;
wire   [0:0] icmp_ln768_7_fu_2102_p2;
wire   [0:0] tmp_325_fu_2115_p3;
wire   [0:0] icmp_ln879_14_fu_2092_p2;
wire   [0:0] xor_ln779_22_fu_2122_p2;
wire   [0:0] and_ln779_7_fu_2128_p2;
wire   [0:0] select_ln777_7_fu_2107_p3;
wire   [0:0] tmp_322_fu_2084_p3;
wire   [0:0] xor_ln785_29_fu_2148_p2;
wire   [0:0] or_ln785_22_fu_2154_p2;
wire   [0:0] select_ln416_7_fu_2134_p3;
wire   [0:0] or_ln786_38_fu_2177_p2;
wire   [0:0] xor_ln786_44_fu_2183_p2;
wire   [0:0] and_ln785_7_fu_2165_p2;
wire   [0:0] icmp_ln718_23_fu_2216_p2;
wire   [0:0] tmp_329_fu_2209_p3;
wire   [0:0] tmp_331_fu_2234_p3;
wire   [0:0] or_ln412_23_fu_2228_p2;
wire   [0:0] and_ln415_23_fu_2241_p2;
wire   [15:0] zext_ln415_23_fu_2247_p1;
wire   [15:0] trunc_ln708_21_fu_2200_p4;
wire   [0:0] tmp_332_fu_2257_p3;
wire   [0:0] tmp_330_fu_2221_p3;
wire   [0:0] xor_ln416_54_fu_2265_p2;
wire   [0:0] and_ln416_23_fu_2271_p2;
wire   [0:0] icmp_ln879_17_fu_2290_p2;
wire   [0:0] icmp_ln768_8_fu_2295_p2;
wire   [0:0] tmp_336_fu_2308_p3;
wire   [0:0] icmp_ln879_16_fu_2285_p2;
wire   [0:0] xor_ln779_23_fu_2315_p2;
wire   [0:0] and_ln779_8_fu_2321_p2;
wire   [0:0] select_ln777_8_fu_2300_p3;
wire   [0:0] tmp_333_fu_2277_p3;
wire   [0:0] xor_ln785_31_fu_2341_p2;
wire   [0:0] or_ln785_23_fu_2347_p2;
wire   [0:0] select_ln416_8_fu_2327_p3;
wire   [0:0] or_ln786_39_fu_2370_p2;
wire   [0:0] xor_ln786_46_fu_2376_p2;
wire   [0:0] and_ln785_8_fu_2358_p2;
wire   [0:0] or_ln340_48_fu_2393_p2;
wire   [0:0] or_ln340_49_fu_2397_p2;
wire   [15:0] select_ln340_fu_2402_p3;
wire   [15:0] select_ln388_fu_2408_p3;
wire   [0:0] or_ln340_51_fu_2422_p2;
wire   [0:0] or_ln340_52_fu_2426_p2;
wire   [15:0] select_ln340_64_fu_2431_p3;
wire   [15:0] select_ln388_32_fu_2437_p3;
wire  signed [15:0] select_ln340_80_fu_2414_p3;
wire  signed [15:0] select_ln340_81_fu_2443_p3;
wire  signed [16:0] sext_ln703_fu_2451_p1;
wire  signed [16:0] sext_ln703_80_fu_2455_p1;
wire   [16:0] add_ln1192_fu_2459_p2;
wire   [15:0] add_ln703_fu_2473_p2;
wire   [0:0] tmp_261_fu_2479_p3;
wire   [0:0] tmp_260_fu_2465_p3;
wire   [0:0] xor_ln786_33_fu_2487_p2;
wire   [0:0] xor_ln340_48_fu_2505_p2;
wire   [0:0] xor_ln340_fu_2499_p2;
wire   [0:0] and_ln786_51_fu_2493_p2;
wire   [0:0] or_ln340_53_fu_2511_p2;
wire   [15:0] select_ln340_65_fu_2517_p3;
wire   [15:0] select_ln388_33_fu_2525_p3;
wire   [0:0] or_ln340_55_fu_2541_p2;
wire   [0:0] or_ln340_56_fu_2545_p2;
wire   [15:0] select_ln340_66_fu_2550_p3;
wire   [15:0] select_ln388_34_fu_2556_p3;
wire  signed [15:0] select_ln340_82_fu_2533_p3;
wire  signed [15:0] select_ln340_83_fu_2562_p3;
wire  signed [16:0] sext_ln703_81_fu_2570_p1;
wire  signed [16:0] sext_ln703_82_fu_2574_p1;
wire   [16:0] add_ln1192_64_fu_2578_p2;
wire   [0:0] or_ln340_59_fu_2606_p2;
wire   [0:0] or_ln340_60_fu_2610_p2;
wire   [15:0] select_ln340_68_fu_2615_p3;
wire   [15:0] select_ln388_36_fu_2621_p3;
wire   [0:0] or_ln340_63_fu_2635_p2;
wire   [0:0] or_ln340_64_fu_2639_p2;
wire   [15:0] select_ln340_70_fu_2644_p3;
wire   [15:0] select_ln388_38_fu_2650_p3;
wire   [0:0] or_ln340_67_fu_2664_p2;
wire   [0:0] or_ln340_68_fu_2668_p2;
wire   [15:0] select_ln340_72_fu_2673_p3;
wire   [15:0] select_ln388_40_fu_2679_p3;
wire   [0:0] or_ln340_71_fu_2693_p2;
wire   [0:0] or_ln340_72_fu_2697_p2;
wire   [15:0] select_ln340_74_fu_2702_p3;
wire   [15:0] select_ln388_42_fu_2708_p3;
wire   [0:0] or_ln340_75_fu_2722_p2;
wire   [0:0] or_ln340_76_fu_2726_p2;
wire   [15:0] select_ln340_76_fu_2731_p3;
wire   [15:0] select_ln388_44_fu_2737_p3;
wire   [0:0] or_ln340_79_fu_2751_p2;
wire   [0:0] or_ln340_80_fu_2755_p2;
wire   [15:0] select_ln340_78_fu_2760_p3;
wire   [15:0] select_ln388_46_fu_2766_p3;
wire   [0:0] xor_ln786_35_fu_2780_p2;
wire   [0:0] xor_ln340_50_fu_2794_p2;
wire   [0:0] xor_ln340_49_fu_2790_p2;
wire   [0:0] and_ln786_54_fu_2785_p2;
wire   [0:0] or_ln340_57_fu_2799_p2;
wire   [15:0] select_ln340_67_fu_2804_p3;
wire   [15:0] select_ln388_35_fu_2811_p3;
wire  signed [15:0] select_ln340_84_fu_2818_p3;
wire  signed [16:0] sext_ln703_83_fu_2826_p1;
wire  signed [16:0] sext_ln703_84_fu_2830_p1;
wire   [16:0] add_ln1192_65_fu_2833_p2;
wire   [15:0] add_ln703_48_fu_2847_p2;
wire   [0:0] tmp_283_fu_2852_p3;
wire   [0:0] tmp_282_fu_2839_p3;
wire   [0:0] xor_ln786_37_fu_2860_p2;
wire   [0:0] xor_ln340_52_fu_2878_p2;
wire   [0:0] xor_ln340_51_fu_2872_p2;
wire   [0:0] and_ln786_57_fu_2866_p2;
wire   [0:0] or_ln340_61_fu_2884_p2;
wire   [15:0] select_ln340_69_fu_2890_p3;
wire   [15:0] select_ln388_37_fu_2898_p3;
wire  signed [15:0] select_ln340_86_fu_2906_p3;
wire  signed [16:0] sext_ln703_85_fu_2914_p1;
wire  signed [16:0] sext_ln703_86_fu_2918_p1;
wire   [16:0] add_ln1192_66_fu_2921_p2;
wire   [0:0] xor_ln786_39_fu_2948_p2;
wire   [0:0] xor_ln340_54_fu_2962_p2;
wire   [0:0] xor_ln340_53_fu_2958_p2;
wire   [0:0] and_ln786_60_fu_2953_p2;
wire   [0:0] or_ln340_65_fu_2967_p2;
wire   [15:0] select_ln340_71_fu_2972_p3;
wire   [15:0] select_ln388_39_fu_2979_p3;
wire  signed [15:0] select_ln340_88_fu_2986_p3;
wire  signed [16:0] sext_ln703_87_fu_2994_p1;
wire  signed [16:0] sext_ln703_88_fu_2998_p1;
wire   [16:0] add_ln1192_67_fu_3001_p2;
wire   [15:0] add_ln703_50_fu_3015_p2;
wire   [0:0] tmp_305_fu_3020_p3;
wire   [0:0] tmp_304_fu_3007_p3;
wire   [0:0] xor_ln786_41_fu_3028_p2;
wire   [0:0] xor_ln340_56_fu_3046_p2;
wire   [0:0] xor_ln340_55_fu_3040_p2;
wire   [0:0] and_ln786_63_fu_3034_p2;
wire   [0:0] or_ln340_69_fu_3052_p2;
wire   [15:0] select_ln340_73_fu_3058_p3;
wire   [15:0] select_ln388_41_fu_3066_p3;
wire  signed [15:0] select_ln340_90_fu_3074_p3;
wire  signed [16:0] sext_ln703_89_fu_3082_p1;
wire  signed [16:0] sext_ln703_90_fu_3086_p1;
wire   [16:0] add_ln1192_68_fu_3089_p2;
wire   [0:0] xor_ln786_43_fu_3116_p2;
wire   [0:0] xor_ln340_58_fu_3130_p2;
wire   [0:0] xor_ln340_57_fu_3126_p2;
wire   [0:0] and_ln786_66_fu_3121_p2;
wire   [0:0] or_ln340_73_fu_3135_p2;
wire   [15:0] select_ln340_75_fu_3140_p3;
wire   [15:0] select_ln388_43_fu_3147_p3;
wire  signed [15:0] select_ln340_92_fu_3154_p3;
wire  signed [16:0] sext_ln703_91_fu_3162_p1;
wire  signed [16:0] sext_ln703_92_fu_3166_p1;
wire   [16:0] add_ln1192_69_fu_3169_p2;
wire   [15:0] add_ln703_52_fu_3183_p2;
wire   [0:0] tmp_327_fu_3188_p3;
wire   [0:0] tmp_326_fu_3175_p3;
wire   [0:0] xor_ln786_45_fu_3196_p2;
wire   [0:0] xor_ln340_60_fu_3214_p2;
wire   [0:0] xor_ln340_59_fu_3208_p2;
wire   [0:0] and_ln786_69_fu_3202_p2;
wire   [0:0] or_ln340_77_fu_3220_p2;
wire   [15:0] select_ln340_77_fu_3226_p3;
wire   [15:0] select_ln388_45_fu_3234_p3;
wire  signed [15:0] select_ln340_94_fu_3242_p3;
wire  signed [16:0] sext_ln703_93_fu_3250_p1;
wire  signed [16:0] sext_ln703_94_fu_3254_p1;
wire   [16:0] add_ln1192_70_fu_3257_p2;
wire   [0:0] xor_ln786_47_fu_3284_p2;
wire   [0:0] xor_ln340_62_fu_3298_p2;
wire   [0:0] xor_ln340_61_fu_3294_p2;
wire   [0:0] and_ln786_72_fu_3289_p2;
wire   [0:0] or_ln340_81_fu_3303_p2;
wire   [15:0] select_ln340_79_fu_3308_p3;
wire   [15:0] select_ln388_47_fu_3315_p3;
reg   [0:0] ap_NS_fsm;
reg    ap_idle_pp0_0to7;
reg    ap_reset_idle_pp0;
wire    ap_enable_pp0;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
end

window_macc_kernel_weight_fp #(
    .DataWidth( 14 ),
    .AddressRange( 432 ),
    .AddressWidth( 9 ))
kernel_weight_fp_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(kernel_weight_fp_address0),
    .ce0(kernel_weight_fp_ce0),
    .q0(kernel_weight_fp_q0),
    .address1(kernel_weight_fp_address1),
    .ce1(kernel_weight_fp_ce1),
    .q1(kernel_weight_fp_q1),
    .address2(kernel_weight_fp_address2),
    .ce2(kernel_weight_fp_ce2),
    .q2(kernel_weight_fp_q2),
    .address3(kernel_weight_fp_address3),
    .ce3(kernel_weight_fp_ce3),
    .q3(kernel_weight_fp_q3),
    .address4(kernel_weight_fp_address4),
    .ce4(kernel_weight_fp_ce4),
    .q4(kernel_weight_fp_q4),
    .address5(kernel_weight_fp_address5),
    .ce5(kernel_weight_fp_ce5),
    .q5(kernel_weight_fp_q5),
    .address6(kernel_weight_fp_address6),
    .ce6(kernel_weight_fp_ce6),
    .q6(kernel_weight_fp_q6),
    .address7(kernel_weight_fp_address7),
    .ce7(kernel_weight_fp_ce7),
    .q7(kernel_weight_fp_q7),
    .address8(kernel_weight_fp_address8),
    .ce8(kernel_weight_fp_ce8),
    .q8(kernel_weight_fp_q8)
);

yolo_conv_top_mul_mul_14s_16s_30_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 30 ))
yolo_conv_top_mul_mul_14s_16s_30_1_1_U10(
    .din0(kernel_weight_fp_loa_reg_3510),
    .din1(window_0_0_val_V_r_1_reg_3460_pp0_iter1_reg),
    .dout(mul_ln1118_fu_3330_p2)
);

yolo_conv_top_mul_mul_14s_16s_30_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 30 ))
yolo_conv_top_mul_mul_14s_16s_30_1_1_U11(
    .din0(kernel_weight_fp_loa_1_reg_3515),
    .din1(window_0_1_val_V_r_1_reg_3455_pp0_iter1_reg),
    .dout(mul_ln1118_16_fu_3340_p2)
);

yolo_conv_top_mul_mul_14s_16s_30_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 30 ))
yolo_conv_top_mul_mul_14s_16s_30_1_1_U12(
    .din0(kernel_weight_fp_loa_2_reg_3520),
    .din1(window_0_2_val_V_r_1_reg_3450_pp0_iter1_reg),
    .dout(mul_ln1118_17_fu_3350_p2)
);

yolo_conv_top_mul_mul_14s_16s_30_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 30 ))
yolo_conv_top_mul_mul_14s_16s_30_1_1_U13(
    .din0(kernel_weight_fp_loa_3_reg_3525),
    .din1(window_1_0_val_V_r_1_reg_3445_pp0_iter1_reg),
    .dout(mul_ln1118_18_fu_3360_p2)
);

yolo_conv_top_mul_mul_14s_16s_30_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 30 ))
yolo_conv_top_mul_mul_14s_16s_30_1_1_U14(
    .din0(kernel_weight_fp_loa_4_reg_3530),
    .din1(window_1_1_val_V_r_1_reg_3440_pp0_iter1_reg),
    .dout(mul_ln1118_19_fu_3370_p2)
);

yolo_conv_top_mul_mul_14s_16s_30_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 30 ))
yolo_conv_top_mul_mul_14s_16s_30_1_1_U15(
    .din0(kernel_weight_fp_loa_5_reg_3535),
    .din1(window_1_2_val_V_r_1_reg_3435_pp0_iter1_reg),
    .dout(mul_ln1118_20_fu_3380_p2)
);

yolo_conv_top_mul_mul_14s_16s_30_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 30 ))
yolo_conv_top_mul_mul_14s_16s_30_1_1_U16(
    .din0(kernel_weight_fp_loa_6_reg_3540),
    .din1(window_2_0_val_V_r_1_reg_3430_pp0_iter1_reg),
    .dout(mul_ln1118_21_fu_3390_p2)
);

yolo_conv_top_mul_mul_14s_16s_30_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 30 ))
yolo_conv_top_mul_mul_14s_16s_30_1_1_U17(
    .din0(kernel_weight_fp_loa_7_reg_3545),
    .din1(window_2_1_val_V_r_1_reg_3425_pp0_iter1_reg),
    .dout(mul_ln1118_22_fu_3400_p2)
);

yolo_conv_top_mul_mul_14s_16s_30_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 30 ))
yolo_conv_top_mul_mul_14s_16s_30_1_1_U18(
    .din0(kernel_weight_fp_loa_8_reg_3550),
    .din1(window_2_2_val_V_r_1_reg_3420_pp0_iter1_reg),
    .dout(mul_ln1118_23_fu_3410_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add_ln415_16_reg_3865 <= add_ln415_16_fu_900_p2;
        add_ln415_17_reg_3896 <= add_ln415_17_fu_1093_p2;
        add_ln415_18_reg_3927 <= add_ln415_18_fu_1286_p2;
        add_ln415_19_reg_3958 <= add_ln415_19_fu_1479_p2;
        add_ln415_20_reg_3989 <= add_ln415_20_fu_1672_p2;
        add_ln415_21_reg_4020 <= add_ln415_21_fu_1865_p2;
        add_ln415_22_reg_4051 <= add_ln415_22_fu_2058_p2;
        add_ln415_23_reg_4082 <= add_ln415_23_fu_2251_p2;
        add_ln415_reg_3834 <= add_ln415_fu_707_p2;
        add_ln703_47_reg_4120 <= add_ln703_47_fu_2592_p2;
        add_ln703_49_reg_4176 <= add_ln703_49_fu_2935_p2;
        add_ln703_51_reg_4196 <= add_ln703_51_fu_3103_p2;
        add_ln703_53_reg_4216 <= add_ln703_53_fu_3271_p2;
        and_ln781_16_reg_3871 <= and_ln781_16_fu_984_p2;
        and_ln781_17_reg_3902 <= and_ln781_17_fu_1177_p2;
        and_ln781_18_reg_3933 <= and_ln781_18_fu_1370_p2;
        and_ln781_19_reg_3964 <= and_ln781_19_fu_1563_p2;
        and_ln781_20_reg_3995 <= and_ln781_20_fu_1756_p2;
        and_ln781_21_reg_4026 <= and_ln781_21_fu_1949_p2;
        and_ln781_22_reg_4057 <= and_ln781_22_fu_2142_p2;
        and_ln781_23_reg_4088 <= and_ln781_23_fu_2335_p2;
        and_ln781_reg_3840 <= and_ln781_fu_791_p2;
        and_ln786_48_reg_3855 <= and_ln786_48_fu_838_p2;
        and_ln786_49_reg_3881 <= and_ln786_49_fu_1013_p2;
        and_ln786_50_reg_3886 <= and_ln786_50_fu_1031_p2;
        and_ln786_52_reg_3912 <= and_ln786_52_fu_1206_p2;
        and_ln786_53_reg_3917 <= and_ln786_53_fu_1224_p2;
        and_ln786_55_reg_3943 <= and_ln786_55_fu_1399_p2;
        and_ln786_56_reg_3948 <= and_ln786_56_fu_1417_p2;
        and_ln786_58_reg_3974 <= and_ln786_58_fu_1592_p2;
        and_ln786_59_reg_3979 <= and_ln786_59_fu_1610_p2;
        and_ln786_61_reg_4005 <= and_ln786_61_fu_1785_p2;
        and_ln786_62_reg_4010 <= and_ln786_62_fu_1803_p2;
        and_ln786_64_reg_4036 <= and_ln786_64_fu_1978_p2;
        and_ln786_65_reg_4041 <= and_ln786_65_fu_1996_p2;
        and_ln786_67_reg_4067 <= and_ln786_67_fu_2171_p2;
        and_ln786_68_reg_4072 <= and_ln786_68_fu_2189_p2;
        and_ln786_70_reg_4098 <= and_ln786_70_fu_2364_p2;
        and_ln786_71_reg_4103 <= and_ln786_71_fu_2382_p2;
        and_ln786_reg_3850 <= and_ln786_fu_820_p2;
        mul_ln1118_16_reg_3586 <= mul_ln1118_16_fu_3340_p2;
        mul_ln1118_17_reg_3617 <= mul_ln1118_17_fu_3350_p2;
        mul_ln1118_18_reg_3648 <= mul_ln1118_18_fu_3360_p2;
        mul_ln1118_19_reg_3679 <= mul_ln1118_19_fu_3370_p2;
        mul_ln1118_20_reg_3710 <= mul_ln1118_20_fu_3380_p2;
        mul_ln1118_21_reg_3741 <= mul_ln1118_21_fu_3390_p2;
        mul_ln1118_22_reg_3772 <= mul_ln1118_22_fu_3400_p2;
        mul_ln1118_23_reg_3803 <= mul_ln1118_23_fu_3410_p2;
        mul_ln1118_reg_3555 <= mul_ln1118_fu_3330_p2;
        or_ln340_50_reg_3891 <= or_ln340_50_fu_1036_p2;
        or_ln340_54_reg_3922 <= or_ln340_54_fu_1229_p2;
        or_ln340_58_reg_3953 <= or_ln340_58_fu_1422_p2;
        or_ln340_62_reg_3984 <= or_ln340_62_fu_1615_p2;
        or_ln340_66_reg_4015 <= or_ln340_66_fu_1808_p2;
        or_ln340_70_reg_4046 <= or_ln340_70_fu_2001_p2;
        or_ln340_74_reg_4077 <= or_ln340_74_fu_2194_p2;
        or_ln340_78_reg_4108 <= or_ln340_78_fu_2387_p2;
        or_ln340_reg_3860 <= or_ln340_fu_843_p2;
        select_ln340_85_reg_4133 <= select_ln340_85_fu_2627_p3;
        select_ln340_87_reg_4139 <= select_ln340_87_fu_2656_p3;
        select_ln340_89_reg_4145 <= select_ln340_89_fu_2685_p3;
        select_ln340_89_reg_4145_pp0_iter5_reg <= select_ln340_89_reg_4145;
        select_ln340_91_reg_4151 <= select_ln340_91_fu_2714_p3;
        select_ln340_91_reg_4151_pp0_iter5_reg <= select_ln340_91_reg_4151;
        select_ln340_93_reg_4157 <= select_ln340_93_fu_2743_p3;
        select_ln340_93_reg_4157_pp0_iter5_reg <= select_ln340_93_reg_4157;
        select_ln340_93_reg_4157_pp0_iter6_reg <= select_ln340_93_reg_4157_pp0_iter5_reg;
        select_ln340_95_reg_4163 <= select_ln340_95_fu_2772_p3;
        select_ln340_95_reg_4163_pp0_iter5_reg <= select_ln340_95_reg_4163;
        select_ln340_95_reg_4163_pp0_iter6_reg <= select_ln340_95_reg_4163_pp0_iter5_reg;
        tmp_248_reg_3575 <= {{mul_ln1118_fu_3330_p2[29:25]}};
        tmp_249_reg_3580 <= {{mul_ln1118_fu_3330_p2[29:24]}};
        tmp_251_reg_3595 <= mul_ln1118_16_fu_3340_p2[32'd28];
        tmp_257_reg_3606 <= {{mul_ln1118_16_fu_3340_p2[29:25]}};
        tmp_258_reg_3611 <= {{mul_ln1118_16_fu_3340_p2[29:24]}};
        tmp_262_reg_3626 <= mul_ln1118_17_fu_3350_p2[32'd28];
        tmp_268_reg_3637 <= {{mul_ln1118_17_fu_3350_p2[29:25]}};
        tmp_269_reg_3642 <= {{mul_ln1118_17_fu_3350_p2[29:24]}};
        tmp_271_reg_4113 <= add_ln1192_64_fu_2578_p2[32'd16];
        tmp_272_reg_4126 <= add_ln703_47_fu_2592_p2[32'd15];
        tmp_273_reg_3657 <= mul_ln1118_18_fu_3360_p2[32'd28];
        tmp_279_reg_3668 <= {{mul_ln1118_18_fu_3360_p2[29:25]}};
        tmp_280_reg_3673 <= {{mul_ln1118_18_fu_3360_p2[29:24]}};
        tmp_284_reg_3688 <= mul_ln1118_19_fu_3370_p2[32'd28];
        tmp_290_reg_3699 <= {{mul_ln1118_19_fu_3370_p2[29:25]}};
        tmp_291_reg_3704 <= {{mul_ln1118_19_fu_3370_p2[29:24]}};
        tmp_293_reg_4169 <= add_ln1192_66_fu_2921_p2[32'd16];
        tmp_294_reg_4182 <= add_ln703_49_fu_2935_p2[32'd15];
        tmp_295_reg_3719 <= mul_ln1118_20_fu_3380_p2[32'd28];
        tmp_301_reg_3730 <= {{mul_ln1118_20_fu_3380_p2[29:25]}};
        tmp_302_reg_3735 <= {{mul_ln1118_20_fu_3380_p2[29:24]}};
        tmp_306_reg_3750 <= mul_ln1118_21_fu_3390_p2[32'd28];
        tmp_312_reg_3761 <= {{mul_ln1118_21_fu_3390_p2[29:25]}};
        tmp_313_reg_3766 <= {{mul_ln1118_21_fu_3390_p2[29:24]}};
        tmp_315_reg_4189 <= add_ln1192_68_fu_3089_p2[32'd16];
        tmp_316_reg_4202 <= add_ln703_51_fu_3103_p2[32'd15];
        tmp_317_reg_3781 <= mul_ln1118_22_fu_3400_p2[32'd28];
        tmp_323_reg_3792 <= {{mul_ln1118_22_fu_3400_p2[29:25]}};
        tmp_324_reg_3797 <= {{mul_ln1118_22_fu_3400_p2[29:24]}};
        tmp_328_reg_3812 <= mul_ln1118_23_fu_3410_p2[32'd28];
        tmp_334_reg_3823 <= {{mul_ln1118_23_fu_3410_p2[29:25]}};
        tmp_335_reg_3828 <= {{mul_ln1118_23_fu_3410_p2[29:24]}};
        tmp_337_reg_4209 <= add_ln1192_70_fu_3257_p2[32'd16];
        tmp_338_reg_4222 <= add_ln703_53_fu_3271_p2[32'd15];
        tmp_reg_3564 <= mul_ln1118_fu_3330_p2[32'd28];
        trunc_ln718_16_reg_3601 <= trunc_ln718_16_fu_397_p1;
        trunc_ln718_17_reg_3632 <= trunc_ln718_17_fu_431_p1;
        trunc_ln718_18_reg_3663 <= trunc_ln718_18_fu_465_p1;
        trunc_ln718_19_reg_3694 <= trunc_ln718_19_fu_499_p1;
        trunc_ln718_20_reg_3725 <= trunc_ln718_20_fu_533_p1;
        trunc_ln718_21_reg_3756 <= trunc_ln718_21_fu_567_p1;
        trunc_ln718_22_reg_3787 <= trunc_ln718_22_fu_601_p1;
        trunc_ln718_23_reg_3818 <= trunc_ln718_23_fu_635_p1;
        trunc_ln718_reg_3570 <= trunc_ln718_fu_363_p1;
        xor_ln785_16_reg_3845 <= xor_ln785_16_fu_809_p2;
        xor_ln785_18_reg_3876 <= xor_ln785_18_fu_1002_p2;
        xor_ln785_20_reg_3907 <= xor_ln785_20_fu_1195_p2;
        xor_ln785_22_reg_3938 <= xor_ln785_22_fu_1388_p2;
        xor_ln785_24_reg_3969 <= xor_ln785_24_fu_1581_p2;
        xor_ln785_26_reg_4000 <= xor_ln785_26_fu_1774_p2;
        xor_ln785_28_reg_4031 <= xor_ln785_28_fu_1967_p2;
        xor_ln785_30_reg_4062 <= xor_ln785_30_fu_2160_p2;
        xor_ln785_32_reg_4093 <= xor_ln785_32_fu_2353_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        kernel_weight_fp_loa_1_reg_3515 <= kernel_weight_fp_q1;
        kernel_weight_fp_loa_2_reg_3520 <= kernel_weight_fp_q2;
        kernel_weight_fp_loa_3_reg_3525 <= kernel_weight_fp_q3;
        kernel_weight_fp_loa_4_reg_3530 <= kernel_weight_fp_q4;
        kernel_weight_fp_loa_5_reg_3535 <= kernel_weight_fp_q5;
        kernel_weight_fp_loa_6_reg_3540 <= kernel_weight_fp_q6;
        kernel_weight_fp_loa_7_reg_3545 <= kernel_weight_fp_q7;
        kernel_weight_fp_loa_8_reg_3550 <= kernel_weight_fp_q8;
        kernel_weight_fp_loa_reg_3510 <= kernel_weight_fp_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        window_0_0_val_V_r_1_reg_3460 <= window_0_0_val_V_r;
        window_0_0_val_V_r_1_reg_3460_pp0_iter1_reg <= window_0_0_val_V_r_1_reg_3460;
        window_0_1_val_V_r_1_reg_3455 <= window_0_1_val_V_r;
        window_0_1_val_V_r_1_reg_3455_pp0_iter1_reg <= window_0_1_val_V_r_1_reg_3455;
        window_0_2_val_V_r_1_reg_3450 <= window_0_2_val_V_r;
        window_0_2_val_V_r_1_reg_3450_pp0_iter1_reg <= window_0_2_val_V_r_1_reg_3450;
        window_1_0_val_V_r_1_reg_3445 <= window_1_0_val_V_r;
        window_1_0_val_V_r_1_reg_3445_pp0_iter1_reg <= window_1_0_val_V_r_1_reg_3445;
        window_1_1_val_V_r_1_reg_3440 <= window_1_1_val_V_r;
        window_1_1_val_V_r_1_reg_3440_pp0_iter1_reg <= window_1_1_val_V_r_1_reg_3440;
        window_1_2_val_V_r_1_reg_3435 <= window_1_2_val_V_r;
        window_1_2_val_V_r_1_reg_3435_pp0_iter1_reg <= window_1_2_val_V_r_1_reg_3435;
        window_2_0_val_V_r_1_reg_3430 <= window_2_0_val_V_r;
        window_2_0_val_V_r_1_reg_3430_pp0_iter1_reg <= window_2_0_val_V_r_1_reg_3430;
        window_2_1_val_V_r_1_reg_3425 <= window_2_1_val_V_r;
        window_2_1_val_V_r_1_reg_3425_pp0_iter1_reg <= window_2_1_val_V_r_1_reg_3425;
        window_2_2_val_V_r_1_reg_3420 <= window_2_2_val_V_r;
        window_2_2_val_V_r_1_reg_3420_pp0_iter1_reg <= window_2_2_val_V_r_1_reg_3420;
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b0 == ap_block_pp0_stage0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to7 = 1'b1;
    end else begin
        ap_idle_pp0_0to7 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to7 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        kernel_weight_fp_ce0 = 1'b1;
    end else begin
        kernel_weight_fp_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        kernel_weight_fp_ce1 = 1'b1;
    end else begin
        kernel_weight_fp_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        kernel_weight_fp_ce2 = 1'b1;
    end else begin
        kernel_weight_fp_ce2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        kernel_weight_fp_ce3 = 1'b1;
    end else begin
        kernel_weight_fp_ce3 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        kernel_weight_fp_ce4 = 1'b1;
    end else begin
        kernel_weight_fp_ce4 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        kernel_weight_fp_ce5 = 1'b1;
    end else begin
        kernel_weight_fp_ce5 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        kernel_weight_fp_ce6 = 1'b1;
    end else begin
        kernel_weight_fp_ce6 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        kernel_weight_fp_ce7 = 1'b1;
    end else begin
        kernel_weight_fp_ce7 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        kernel_weight_fp_ce8 = 1'b1;
    end else begin
        kernel_weight_fp_ce8 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln1117_1_fu_273_p2 = (9'd2 + weight_V_offset);

assign add_ln1117_2_fu_284_p2 = (9'd3 + weight_V_offset);

assign add_ln1117_3_fu_295_p2 = (9'd4 + weight_V_offset);

assign add_ln1117_4_fu_306_p2 = (9'd5 + weight_V_offset);

assign add_ln1117_5_fu_317_p2 = (9'd6 + weight_V_offset);

assign add_ln1117_6_fu_328_p2 = (9'd7 + weight_V_offset);

assign add_ln1117_7_fu_339_p2 = (9'd8 + weight_V_offset);

assign add_ln1117_fu_262_p2 = (9'd1 + weight_V_offset);

assign add_ln1192_64_fu_2578_p2 = ($signed(sext_ln703_81_fu_2570_p1) + $signed(sext_ln703_82_fu_2574_p1));

assign add_ln1192_65_fu_2833_p2 = ($signed(sext_ln703_83_fu_2826_p1) + $signed(sext_ln703_84_fu_2830_p1));

assign add_ln1192_66_fu_2921_p2 = ($signed(sext_ln703_85_fu_2914_p1) + $signed(sext_ln703_86_fu_2918_p1));

assign add_ln1192_67_fu_3001_p2 = ($signed(sext_ln703_87_fu_2994_p1) + $signed(sext_ln703_88_fu_2998_p1));

assign add_ln1192_68_fu_3089_p2 = ($signed(sext_ln703_89_fu_3082_p1) + $signed(sext_ln703_90_fu_3086_p1));

assign add_ln1192_69_fu_3169_p2 = ($signed(sext_ln703_91_fu_3162_p1) + $signed(sext_ln703_92_fu_3166_p1));

assign add_ln1192_70_fu_3257_p2 = ($signed(sext_ln703_93_fu_3250_p1) + $signed(sext_ln703_94_fu_3254_p1));

assign add_ln1192_fu_2459_p2 = ($signed(sext_ln703_fu_2451_p1) + $signed(sext_ln703_80_fu_2455_p1));

assign add_ln415_16_fu_900_p2 = (zext_ln415_16_fu_896_p1 + trunc_ln708_s_fu_849_p4);

assign add_ln415_17_fu_1093_p2 = (zext_ln415_17_fu_1089_p1 + trunc_ln708_15_fu_1042_p4);

assign add_ln415_18_fu_1286_p2 = (zext_ln415_18_fu_1282_p1 + trunc_ln708_16_fu_1235_p4);

assign add_ln415_19_fu_1479_p2 = (zext_ln415_19_fu_1475_p1 + trunc_ln708_17_fu_1428_p4);

assign add_ln415_20_fu_1672_p2 = (zext_ln415_20_fu_1668_p1 + trunc_ln708_18_fu_1621_p4);

assign add_ln415_21_fu_1865_p2 = (zext_ln415_21_fu_1861_p1 + trunc_ln708_19_fu_1814_p4);

assign add_ln415_22_fu_2058_p2 = (zext_ln415_22_fu_2054_p1 + trunc_ln708_20_fu_2007_p4);

assign add_ln415_23_fu_2251_p2 = (zext_ln415_23_fu_2247_p1 + trunc_ln708_21_fu_2200_p4);

assign add_ln415_fu_707_p2 = (zext_ln415_fu_703_p1 + trunc_ln3_fu_656_p4);

assign add_ln703_47_fu_2592_p2 = ($signed(select_ln340_83_fu_2562_p3) + $signed(select_ln340_82_fu_2533_p3));

assign add_ln703_48_fu_2847_p2 = ($signed(select_ln340_85_reg_4133) + $signed(select_ln340_84_fu_2818_p3));

assign add_ln703_49_fu_2935_p2 = ($signed(select_ln340_87_reg_4139) + $signed(select_ln340_86_fu_2906_p3));

assign add_ln703_50_fu_3015_p2 = ($signed(select_ln340_89_reg_4145_pp0_iter5_reg) + $signed(select_ln340_88_fu_2986_p3));

assign add_ln703_51_fu_3103_p2 = ($signed(select_ln340_91_reg_4151_pp0_iter5_reg) + $signed(select_ln340_90_fu_3074_p3));

assign add_ln703_52_fu_3183_p2 = ($signed(select_ln340_93_reg_4157_pp0_iter6_reg) + $signed(select_ln340_92_fu_3154_p3));

assign add_ln703_53_fu_3271_p2 = ($signed(select_ln340_95_reg_4163_pp0_iter6_reg) + $signed(select_ln340_94_fu_3242_p3));

assign add_ln703_fu_2473_p2 = ($signed(select_ln340_81_fu_2443_p3) + $signed(select_ln340_80_fu_2414_p3));

assign and_ln415_16_fu_890_p2 = (tmp_254_fu_883_p3 & or_ln412_16_fu_877_p2);

assign and_ln415_17_fu_1083_p2 = (tmp_265_fu_1076_p3 & or_ln412_17_fu_1070_p2);

assign and_ln415_18_fu_1276_p2 = (tmp_276_fu_1269_p3 & or_ln412_18_fu_1263_p2);

assign and_ln415_19_fu_1469_p2 = (tmp_287_fu_1462_p3 & or_ln412_19_fu_1456_p2);

assign and_ln415_20_fu_1662_p2 = (tmp_298_fu_1655_p3 & or_ln412_20_fu_1649_p2);

assign and_ln415_21_fu_1855_p2 = (tmp_309_fu_1848_p3 & or_ln412_21_fu_1842_p2);

assign and_ln415_22_fu_2048_p2 = (tmp_320_fu_2041_p3 & or_ln412_22_fu_2035_p2);

assign and_ln415_23_fu_2241_p2 = (tmp_331_fu_2234_p3 & or_ln412_23_fu_2228_p2);

assign and_ln415_fu_697_p2 = (tmp_245_fu_690_p3 & or_ln412_fu_684_p2);

assign and_ln416_16_fu_920_p2 = (xor_ln416_47_fu_914_p2 & tmp_253_fu_870_p3);

assign and_ln416_17_fu_1113_p2 = (xor_ln416_48_fu_1107_p2 & tmp_264_fu_1063_p3);

assign and_ln416_18_fu_1306_p2 = (xor_ln416_49_fu_1300_p2 & tmp_275_fu_1256_p3);

assign and_ln416_19_fu_1499_p2 = (xor_ln416_50_fu_1493_p2 & tmp_286_fu_1449_p3);

assign and_ln416_20_fu_1692_p2 = (xor_ln416_51_fu_1686_p2 & tmp_297_fu_1642_p3);

assign and_ln416_21_fu_1885_p2 = (xor_ln416_52_fu_1879_p2 & tmp_308_fu_1835_p3);

assign and_ln416_22_fu_2078_p2 = (xor_ln416_53_fu_2072_p2 & tmp_319_fu_2028_p3);

assign and_ln416_23_fu_2271_p2 = (xor_ln416_54_fu_2265_p2 & tmp_330_fu_2221_p3);

assign and_ln416_fu_727_p2 = (xor_ln416_fu_721_p2 & tmp_244_fu_677_p3);

assign and_ln779_1_fu_970_p2 = (xor_ln779_16_fu_964_p2 & icmp_ln879_2_fu_934_p2);

assign and_ln779_2_fu_1163_p2 = (xor_ln779_17_fu_1157_p2 & icmp_ln879_4_fu_1127_p2);

assign and_ln779_3_fu_1356_p2 = (xor_ln779_18_fu_1350_p2 & icmp_ln879_6_fu_1320_p2);

assign and_ln779_4_fu_1549_p2 = (xor_ln779_19_fu_1543_p2 & icmp_ln879_8_fu_1513_p2);

assign and_ln779_5_fu_1742_p2 = (xor_ln779_20_fu_1736_p2 & icmp_ln879_10_fu_1706_p2);

assign and_ln779_6_fu_1935_p2 = (xor_ln779_21_fu_1929_p2 & icmp_ln879_12_fu_1899_p2);

assign and_ln779_7_fu_2128_p2 = (xor_ln779_22_fu_2122_p2 & icmp_ln879_14_fu_2092_p2);

assign and_ln779_8_fu_2321_p2 = (xor_ln779_23_fu_2315_p2 & icmp_ln879_16_fu_2285_p2);

assign and_ln779_fu_777_p2 = (xor_ln779_fu_771_p2 & icmp_ln879_fu_741_p2);

assign and_ln781_16_fu_984_p2 = (icmp_ln879_3_fu_939_p2 & and_ln416_16_fu_920_p2);

assign and_ln781_17_fu_1177_p2 = (icmp_ln879_5_fu_1132_p2 & and_ln416_17_fu_1113_p2);

assign and_ln781_18_fu_1370_p2 = (icmp_ln879_7_fu_1325_p2 & and_ln416_18_fu_1306_p2);

assign and_ln781_19_fu_1563_p2 = (icmp_ln879_9_fu_1518_p2 & and_ln416_19_fu_1499_p2);

assign and_ln781_20_fu_1756_p2 = (icmp_ln879_11_fu_1711_p2 & and_ln416_20_fu_1692_p2);

assign and_ln781_21_fu_1949_p2 = (icmp_ln879_13_fu_1904_p2 & and_ln416_21_fu_1885_p2);

assign and_ln781_22_fu_2142_p2 = (icmp_ln879_15_fu_2097_p2 & and_ln416_22_fu_2078_p2);

assign and_ln781_23_fu_2335_p2 = (icmp_ln879_17_fu_2290_p2 & and_ln416_23_fu_2271_p2);

assign and_ln781_fu_791_p2 = (icmp_ln879_1_fu_746_p2 & and_ln416_fu_727_p2);

assign and_ln785_1_fu_1007_p2 = (xor_ln785_18_fu_1002_p2 & or_ln785_16_fu_996_p2);

assign and_ln785_2_fu_1200_p2 = (xor_ln785_20_fu_1195_p2 & or_ln785_17_fu_1189_p2);

assign and_ln785_3_fu_1393_p2 = (xor_ln785_22_fu_1388_p2 & or_ln785_18_fu_1382_p2);

assign and_ln785_4_fu_1586_p2 = (xor_ln785_24_fu_1581_p2 & or_ln785_19_fu_1575_p2);

assign and_ln785_5_fu_1779_p2 = (xor_ln785_26_fu_1774_p2 & or_ln785_20_fu_1768_p2);

assign and_ln785_6_fu_1972_p2 = (xor_ln785_28_fu_1967_p2 & or_ln785_21_fu_1961_p2);

assign and_ln785_7_fu_2165_p2 = (xor_ln785_30_fu_2160_p2 & or_ln785_22_fu_2154_p2);

assign and_ln785_8_fu_2358_p2 = (xor_ln785_32_fu_2353_p2 & or_ln785_23_fu_2347_p2);

assign and_ln785_fu_814_p2 = (xor_ln785_16_fu_809_p2 & or_ln785_fu_803_p2);

assign and_ln786_48_fu_838_p2 = (xor_ln786_fu_832_p2 & tmp_reg_3564);

assign and_ln786_49_fu_1013_p2 = (tmp_256_fu_926_p3 & select_ln416_1_fu_976_p3);

assign and_ln786_50_fu_1031_p2 = (xor_ln786_32_fu_1025_p2 & tmp_251_reg_3595);

assign and_ln786_51_fu_2493_p2 = (xor_ln786_33_fu_2487_p2 & tmp_260_fu_2465_p3);

assign and_ln786_52_fu_1206_p2 = (tmp_267_fu_1119_p3 & select_ln416_2_fu_1169_p3);

assign and_ln786_53_fu_1224_p2 = (xor_ln786_34_fu_1218_p2 & tmp_262_reg_3626);

assign and_ln786_54_fu_2785_p2 = (xor_ln786_35_fu_2780_p2 & tmp_271_reg_4113);

assign and_ln786_55_fu_1399_p2 = (tmp_278_fu_1312_p3 & select_ln416_3_fu_1362_p3);

assign and_ln786_56_fu_1417_p2 = (xor_ln786_36_fu_1411_p2 & tmp_273_reg_3657);

assign and_ln786_57_fu_2866_p2 = (xor_ln786_37_fu_2860_p2 & tmp_282_fu_2839_p3);

assign and_ln786_58_fu_1592_p2 = (tmp_289_fu_1505_p3 & select_ln416_4_fu_1555_p3);

assign and_ln786_59_fu_1610_p2 = (xor_ln786_38_fu_1604_p2 & tmp_284_reg_3688);

assign and_ln786_60_fu_2953_p2 = (xor_ln786_39_fu_2948_p2 & tmp_293_reg_4169);

assign and_ln786_61_fu_1785_p2 = (tmp_300_fu_1698_p3 & select_ln416_5_fu_1748_p3);

assign and_ln786_62_fu_1803_p2 = (xor_ln786_40_fu_1797_p2 & tmp_295_reg_3719);

assign and_ln786_63_fu_3034_p2 = (xor_ln786_41_fu_3028_p2 & tmp_304_fu_3007_p3);

assign and_ln786_64_fu_1978_p2 = (tmp_311_fu_1891_p3 & select_ln416_6_fu_1941_p3);

assign and_ln786_65_fu_1996_p2 = (xor_ln786_42_fu_1990_p2 & tmp_306_reg_3750);

assign and_ln786_66_fu_3121_p2 = (xor_ln786_43_fu_3116_p2 & tmp_315_reg_4189);

assign and_ln786_67_fu_2171_p2 = (tmp_322_fu_2084_p3 & select_ln416_7_fu_2134_p3);

assign and_ln786_68_fu_2189_p2 = (xor_ln786_44_fu_2183_p2 & tmp_317_reg_3781);

assign and_ln786_69_fu_3202_p2 = (xor_ln786_45_fu_3196_p2 & tmp_326_fu_3175_p3);

assign and_ln786_70_fu_2364_p2 = (tmp_333_fu_2277_p3 & select_ln416_8_fu_2327_p3);

assign and_ln786_71_fu_2382_p2 = (xor_ln786_46_fu_2376_p2 & tmp_328_reg_3812);

assign and_ln786_72_fu_3289_p2 = (xor_ln786_47_fu_3284_p2 & tmp_337_reg_4209);

assign and_ln786_fu_820_p2 = (tmp_247_fu_733_p3 & select_ln416_fu_783_p3);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_start == 1'b0) & (ap_start == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((1'b0 == ap_ce) | ((ap_start == 1'b0) & (ap_start == 1'b1)));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = (ap_start == 1'b0);
end

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start;

assign ap_return = ((or_ln340_81_fu_3303_p2[0:0] === 1'b1) ? select_ln340_79_fu_3308_p3 : select_ln388_47_fu_3315_p3);

assign icmp_ln718_16_fu_865_p2 = ((trunc_ln718_16_reg_3601 != 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln718_17_fu_1058_p2 = ((trunc_ln718_17_reg_3632 != 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln718_18_fu_1251_p2 = ((trunc_ln718_18_reg_3663 != 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln718_19_fu_1444_p2 = ((trunc_ln718_19_reg_3694 != 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln718_20_fu_1637_p2 = ((trunc_ln718_20_reg_3725 != 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln718_21_fu_1830_p2 = ((trunc_ln718_21_reg_3756 != 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln718_22_fu_2023_p2 = ((trunc_ln718_22_reg_3787 != 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln718_23_fu_2216_p2 = ((trunc_ln718_23_reg_3818 != 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln718_fu_672_p2 = ((trunc_ln718_reg_3570 != 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln768_1_fu_944_p2 = ((tmp_258_reg_3611 == 6'd0) ? 1'b1 : 1'b0);

assign icmp_ln768_2_fu_1137_p2 = ((tmp_269_reg_3642 == 6'd0) ? 1'b1 : 1'b0);

assign icmp_ln768_3_fu_1330_p2 = ((tmp_280_reg_3673 == 6'd0) ? 1'b1 : 1'b0);

assign icmp_ln768_4_fu_1523_p2 = ((tmp_291_reg_3704 == 6'd0) ? 1'b1 : 1'b0);

assign icmp_ln768_5_fu_1716_p2 = ((tmp_302_reg_3735 == 6'd0) ? 1'b1 : 1'b0);

assign icmp_ln768_6_fu_1909_p2 = ((tmp_313_reg_3766 == 6'd0) ? 1'b1 : 1'b0);

assign icmp_ln768_7_fu_2102_p2 = ((tmp_324_reg_3797 == 6'd0) ? 1'b1 : 1'b0);

assign icmp_ln768_8_fu_2295_p2 = ((tmp_335_reg_3828 == 6'd0) ? 1'b1 : 1'b0);

assign icmp_ln768_fu_751_p2 = ((tmp_249_reg_3580 == 6'd0) ? 1'b1 : 1'b0);

assign icmp_ln879_10_fu_1706_p2 = ((tmp_301_reg_3730 == 5'd31) ? 1'b1 : 1'b0);

assign icmp_ln879_11_fu_1711_p2 = ((tmp_302_reg_3735 == 6'd63) ? 1'b1 : 1'b0);

assign icmp_ln879_12_fu_1899_p2 = ((tmp_312_reg_3761 == 5'd31) ? 1'b1 : 1'b0);

assign icmp_ln879_13_fu_1904_p2 = ((tmp_313_reg_3766 == 6'd63) ? 1'b1 : 1'b0);

assign icmp_ln879_14_fu_2092_p2 = ((tmp_323_reg_3792 == 5'd31) ? 1'b1 : 1'b0);

assign icmp_ln879_15_fu_2097_p2 = ((tmp_324_reg_3797 == 6'd63) ? 1'b1 : 1'b0);

assign icmp_ln879_16_fu_2285_p2 = ((tmp_334_reg_3823 == 5'd31) ? 1'b1 : 1'b0);

assign icmp_ln879_17_fu_2290_p2 = ((tmp_335_reg_3828 == 6'd63) ? 1'b1 : 1'b0);

assign icmp_ln879_1_fu_746_p2 = ((tmp_249_reg_3580 == 6'd63) ? 1'b1 : 1'b0);

assign icmp_ln879_2_fu_934_p2 = ((tmp_257_reg_3606 == 5'd31) ? 1'b1 : 1'b0);

assign icmp_ln879_3_fu_939_p2 = ((tmp_258_reg_3611 == 6'd63) ? 1'b1 : 1'b0);

assign icmp_ln879_4_fu_1127_p2 = ((tmp_268_reg_3637 == 5'd31) ? 1'b1 : 1'b0);

assign icmp_ln879_5_fu_1132_p2 = ((tmp_269_reg_3642 == 6'd63) ? 1'b1 : 1'b0);

assign icmp_ln879_6_fu_1320_p2 = ((tmp_279_reg_3668 == 5'd31) ? 1'b1 : 1'b0);

assign icmp_ln879_7_fu_1325_p2 = ((tmp_280_reg_3673 == 6'd63) ? 1'b1 : 1'b0);

assign icmp_ln879_8_fu_1513_p2 = ((tmp_290_reg_3699 == 5'd31) ? 1'b1 : 1'b0);

assign icmp_ln879_9_fu_1518_p2 = ((tmp_291_reg_3704 == 6'd63) ? 1'b1 : 1'b0);

assign icmp_ln879_fu_741_p2 = ((tmp_248_reg_3575 == 5'd31) ? 1'b1 : 1'b0);

assign kernel_weight_fp_address0 = weight_V_offset_cast_fu_257_p1;

assign kernel_weight_fp_address1 = zext_ln1117_fu_268_p1;

assign kernel_weight_fp_address2 = zext_ln1117_1_fu_279_p1;

assign kernel_weight_fp_address3 = zext_ln1117_2_fu_290_p1;

assign kernel_weight_fp_address4 = zext_ln1117_3_fu_301_p1;

assign kernel_weight_fp_address5 = zext_ln1117_4_fu_312_p1;

assign kernel_weight_fp_address6 = zext_ln1117_5_fu_323_p1;

assign kernel_weight_fp_address7 = zext_ln1117_6_fu_334_p1;

assign kernel_weight_fp_address8 = zext_ln1117_7_fu_345_p1;

assign or_ln340_48_fu_2393_p2 = (xor_ln785_16_reg_3845 | and_ln786_reg_3850);

assign or_ln340_49_fu_2397_p2 = (or_ln340_48_fu_2393_p2 | and_ln781_reg_3840);

assign or_ln340_50_fu_1036_p2 = (and_ln786_50_fu_1031_p2 | and_ln785_1_fu_1007_p2);

assign or_ln340_51_fu_2422_p2 = (xor_ln785_18_reg_3876 | and_ln786_49_reg_3881);

assign or_ln340_52_fu_2426_p2 = (or_ln340_51_fu_2422_p2 | and_ln781_16_reg_3871);

assign or_ln340_53_fu_2511_p2 = (xor_ln340_48_fu_2505_p2 | tmp_261_fu_2479_p3);

assign or_ln340_54_fu_1229_p2 = (and_ln786_53_fu_1224_p2 | and_ln785_2_fu_1200_p2);

assign or_ln340_55_fu_2541_p2 = (xor_ln785_20_reg_3907 | and_ln786_52_reg_3912);

assign or_ln340_56_fu_2545_p2 = (or_ln340_55_fu_2541_p2 | and_ln781_17_reg_3902);

assign or_ln340_57_fu_2799_p2 = (xor_ln340_50_fu_2794_p2 | tmp_272_reg_4126);

assign or_ln340_58_fu_1422_p2 = (and_ln786_56_fu_1417_p2 | and_ln785_3_fu_1393_p2);

assign or_ln340_59_fu_2606_p2 = (xor_ln785_22_reg_3938 | and_ln786_55_reg_3943);

assign or_ln340_60_fu_2610_p2 = (or_ln340_59_fu_2606_p2 | and_ln781_18_reg_3933);

assign or_ln340_61_fu_2884_p2 = (xor_ln340_52_fu_2878_p2 | tmp_283_fu_2852_p3);

assign or_ln340_62_fu_1615_p2 = (and_ln786_59_fu_1610_p2 | and_ln785_4_fu_1586_p2);

assign or_ln340_63_fu_2635_p2 = (xor_ln785_24_reg_3969 | and_ln786_58_reg_3974);

assign or_ln340_64_fu_2639_p2 = (or_ln340_63_fu_2635_p2 | and_ln781_19_reg_3964);

assign or_ln340_65_fu_2967_p2 = (xor_ln340_54_fu_2962_p2 | tmp_294_reg_4182);

assign or_ln340_66_fu_1808_p2 = (and_ln786_62_fu_1803_p2 | and_ln785_5_fu_1779_p2);

assign or_ln340_67_fu_2664_p2 = (xor_ln785_26_reg_4000 | and_ln786_61_reg_4005);

assign or_ln340_68_fu_2668_p2 = (or_ln340_67_fu_2664_p2 | and_ln781_20_reg_3995);

assign or_ln340_69_fu_3052_p2 = (xor_ln340_56_fu_3046_p2 | tmp_305_fu_3020_p3);

assign or_ln340_70_fu_2001_p2 = (and_ln786_65_fu_1996_p2 | and_ln785_6_fu_1972_p2);

assign or_ln340_71_fu_2693_p2 = (xor_ln785_28_reg_4031 | and_ln786_64_reg_4036);

assign or_ln340_72_fu_2697_p2 = (or_ln340_71_fu_2693_p2 | and_ln781_21_reg_4026);

assign or_ln340_73_fu_3135_p2 = (xor_ln340_58_fu_3130_p2 | tmp_316_reg_4202);

assign or_ln340_74_fu_2194_p2 = (and_ln786_68_fu_2189_p2 | and_ln785_7_fu_2165_p2);

assign or_ln340_75_fu_2722_p2 = (xor_ln785_30_reg_4062 | and_ln786_67_reg_4067);

assign or_ln340_76_fu_2726_p2 = (or_ln340_75_fu_2722_p2 | and_ln781_22_reg_4057);

assign or_ln340_77_fu_3220_p2 = (xor_ln340_60_fu_3214_p2 | tmp_327_fu_3188_p3);

assign or_ln340_78_fu_2387_p2 = (and_ln786_71_fu_2382_p2 | and_ln785_8_fu_2358_p2);

assign or_ln340_79_fu_2751_p2 = (xor_ln785_32_reg_4093 | and_ln786_70_reg_4098);

assign or_ln340_80_fu_2755_p2 = (or_ln340_79_fu_2751_p2 | and_ln781_23_reg_4088);

assign or_ln340_81_fu_3303_p2 = (xor_ln340_62_fu_3298_p2 | tmp_338_reg_4222);

assign or_ln340_fu_843_p2 = (and_ln786_48_fu_838_p2 | and_ln785_fu_814_p2);

assign or_ln412_16_fu_877_p2 = (tmp_252_fu_858_p3 | icmp_ln718_16_fu_865_p2);

assign or_ln412_17_fu_1070_p2 = (tmp_263_fu_1051_p3 | icmp_ln718_17_fu_1058_p2);

assign or_ln412_18_fu_1263_p2 = (tmp_274_fu_1244_p3 | icmp_ln718_18_fu_1251_p2);

assign or_ln412_19_fu_1456_p2 = (tmp_285_fu_1437_p3 | icmp_ln718_19_fu_1444_p2);

assign or_ln412_20_fu_1649_p2 = (tmp_296_fu_1630_p3 | icmp_ln718_20_fu_1637_p2);

assign or_ln412_21_fu_1842_p2 = (tmp_307_fu_1823_p3 | icmp_ln718_21_fu_1830_p2);

assign or_ln412_22_fu_2035_p2 = (tmp_318_fu_2016_p3 | icmp_ln718_22_fu_2023_p2);

assign or_ln412_23_fu_2228_p2 = (tmp_329_fu_2209_p3 | icmp_ln718_23_fu_2216_p2);

assign or_ln412_fu_684_p2 = (tmp_243_fu_665_p3 | icmp_ln718_fu_672_p2);

assign or_ln785_16_fu_996_p2 = (xor_ln785_17_fu_990_p2 | tmp_256_fu_926_p3);

assign or_ln785_17_fu_1189_p2 = (xor_ln785_19_fu_1183_p2 | tmp_267_fu_1119_p3);

assign or_ln785_18_fu_1382_p2 = (xor_ln785_21_fu_1376_p2 | tmp_278_fu_1312_p3);

assign or_ln785_19_fu_1575_p2 = (xor_ln785_23_fu_1569_p2 | tmp_289_fu_1505_p3);

assign or_ln785_20_fu_1768_p2 = (xor_ln785_25_fu_1762_p2 | tmp_300_fu_1698_p3);

assign or_ln785_21_fu_1961_p2 = (xor_ln785_27_fu_1955_p2 | tmp_311_fu_1891_p3);

assign or_ln785_22_fu_2154_p2 = (xor_ln785_29_fu_2148_p2 | tmp_322_fu_2084_p3);

assign or_ln785_23_fu_2347_p2 = (xor_ln785_31_fu_2341_p2 | tmp_333_fu_2277_p3);

assign or_ln785_fu_803_p2 = (xor_ln785_fu_797_p2 | tmp_247_fu_733_p3);

assign or_ln786_32_fu_1019_p2 = (and_ln786_49_fu_1013_p2 | and_ln781_16_fu_984_p2);

assign or_ln786_33_fu_1212_p2 = (and_ln786_52_fu_1206_p2 | and_ln781_17_fu_1177_p2);

assign or_ln786_34_fu_1405_p2 = (and_ln786_55_fu_1399_p2 | and_ln781_18_fu_1370_p2);

assign or_ln786_35_fu_1598_p2 = (and_ln786_58_fu_1592_p2 | and_ln781_19_fu_1563_p2);

assign or_ln786_36_fu_1791_p2 = (and_ln786_61_fu_1785_p2 | and_ln781_20_fu_1756_p2);

assign or_ln786_37_fu_1984_p2 = (and_ln786_64_fu_1978_p2 | and_ln781_21_fu_1949_p2);

assign or_ln786_38_fu_2177_p2 = (and_ln786_67_fu_2171_p2 | and_ln781_22_fu_2142_p2);

assign or_ln786_39_fu_2370_p2 = (and_ln786_70_fu_2364_p2 | and_ln781_23_fu_2335_p2);

assign or_ln786_fu_826_p2 = (and_ln786_fu_820_p2 | and_ln781_fu_791_p2);

assign select_ln340_64_fu_2431_p3 = ((or_ln340_50_reg_3891[0:0] === 1'b1) ? 16'd32767 : add_ln415_16_reg_3865);

assign select_ln340_65_fu_2517_p3 = ((xor_ln340_fu_2499_p2[0:0] === 1'b1) ? 16'd32767 : add_ln703_fu_2473_p2);

assign select_ln340_66_fu_2550_p3 = ((or_ln340_54_reg_3922[0:0] === 1'b1) ? 16'd32767 : add_ln415_17_reg_3896);

assign select_ln340_67_fu_2804_p3 = ((xor_ln340_49_fu_2790_p2[0:0] === 1'b1) ? 16'd32767 : add_ln703_47_reg_4120);

assign select_ln340_68_fu_2615_p3 = ((or_ln340_58_reg_3953[0:0] === 1'b1) ? 16'd32767 : add_ln415_18_reg_3927);

assign select_ln340_69_fu_2890_p3 = ((xor_ln340_51_fu_2872_p2[0:0] === 1'b1) ? 16'd32767 : add_ln703_48_fu_2847_p2);

assign select_ln340_70_fu_2644_p3 = ((or_ln340_62_reg_3984[0:0] === 1'b1) ? 16'd32767 : add_ln415_19_reg_3958);

assign select_ln340_71_fu_2972_p3 = ((xor_ln340_53_fu_2958_p2[0:0] === 1'b1) ? 16'd32767 : add_ln703_49_reg_4176);

assign select_ln340_72_fu_2673_p3 = ((or_ln340_66_reg_4015[0:0] === 1'b1) ? 16'd32767 : add_ln415_20_reg_3989);

assign select_ln340_73_fu_3058_p3 = ((xor_ln340_55_fu_3040_p2[0:0] === 1'b1) ? 16'd32767 : add_ln703_50_fu_3015_p2);

assign select_ln340_74_fu_2702_p3 = ((or_ln340_70_reg_4046[0:0] === 1'b1) ? 16'd32767 : add_ln415_21_reg_4020);

assign select_ln340_75_fu_3140_p3 = ((xor_ln340_57_fu_3126_p2[0:0] === 1'b1) ? 16'd32767 : add_ln703_51_reg_4196);

assign select_ln340_76_fu_2731_p3 = ((or_ln340_74_reg_4077[0:0] === 1'b1) ? 16'd32767 : add_ln415_22_reg_4051);

assign select_ln340_77_fu_3226_p3 = ((xor_ln340_59_fu_3208_p2[0:0] === 1'b1) ? 16'd32767 : add_ln703_52_fu_3183_p2);

assign select_ln340_78_fu_2760_p3 = ((or_ln340_78_reg_4108[0:0] === 1'b1) ? 16'd32767 : add_ln415_23_reg_4082);

assign select_ln340_79_fu_3308_p3 = ((xor_ln340_61_fu_3294_p2[0:0] === 1'b1) ? 16'd32767 : add_ln703_53_reg_4216);

assign select_ln340_80_fu_2414_p3 = ((or_ln340_49_fu_2397_p2[0:0] === 1'b1) ? select_ln340_fu_2402_p3 : select_ln388_fu_2408_p3);

assign select_ln340_81_fu_2443_p3 = ((or_ln340_52_fu_2426_p2[0:0] === 1'b1) ? select_ln340_64_fu_2431_p3 : select_ln388_32_fu_2437_p3);

assign select_ln340_82_fu_2533_p3 = ((or_ln340_53_fu_2511_p2[0:0] === 1'b1) ? select_ln340_65_fu_2517_p3 : select_ln388_33_fu_2525_p3);

assign select_ln340_83_fu_2562_p3 = ((or_ln340_56_fu_2545_p2[0:0] === 1'b1) ? select_ln340_66_fu_2550_p3 : select_ln388_34_fu_2556_p3);

assign select_ln340_84_fu_2818_p3 = ((or_ln340_57_fu_2799_p2[0:0] === 1'b1) ? select_ln340_67_fu_2804_p3 : select_ln388_35_fu_2811_p3);

assign select_ln340_85_fu_2627_p3 = ((or_ln340_60_fu_2610_p2[0:0] === 1'b1) ? select_ln340_68_fu_2615_p3 : select_ln388_36_fu_2621_p3);

assign select_ln340_86_fu_2906_p3 = ((or_ln340_61_fu_2884_p2[0:0] === 1'b1) ? select_ln340_69_fu_2890_p3 : select_ln388_37_fu_2898_p3);

assign select_ln340_87_fu_2656_p3 = ((or_ln340_64_fu_2639_p2[0:0] === 1'b1) ? select_ln340_70_fu_2644_p3 : select_ln388_38_fu_2650_p3);

assign select_ln340_88_fu_2986_p3 = ((or_ln340_65_fu_2967_p2[0:0] === 1'b1) ? select_ln340_71_fu_2972_p3 : select_ln388_39_fu_2979_p3);

assign select_ln340_89_fu_2685_p3 = ((or_ln340_68_fu_2668_p2[0:0] === 1'b1) ? select_ln340_72_fu_2673_p3 : select_ln388_40_fu_2679_p3);

assign select_ln340_90_fu_3074_p3 = ((or_ln340_69_fu_3052_p2[0:0] === 1'b1) ? select_ln340_73_fu_3058_p3 : select_ln388_41_fu_3066_p3);

assign select_ln340_91_fu_2714_p3 = ((or_ln340_72_fu_2697_p2[0:0] === 1'b1) ? select_ln340_74_fu_2702_p3 : select_ln388_42_fu_2708_p3);

assign select_ln340_92_fu_3154_p3 = ((or_ln340_73_fu_3135_p2[0:0] === 1'b1) ? select_ln340_75_fu_3140_p3 : select_ln388_43_fu_3147_p3);

assign select_ln340_93_fu_2743_p3 = ((or_ln340_76_fu_2726_p2[0:0] === 1'b1) ? select_ln340_76_fu_2731_p3 : select_ln388_44_fu_2737_p3);

assign select_ln340_94_fu_3242_p3 = ((or_ln340_77_fu_3220_p2[0:0] === 1'b1) ? select_ln340_77_fu_3226_p3 : select_ln388_45_fu_3234_p3);

assign select_ln340_95_fu_2772_p3 = ((or_ln340_80_fu_2755_p2[0:0] === 1'b1) ? select_ln340_78_fu_2760_p3 : select_ln388_46_fu_2766_p3);

assign select_ln340_fu_2402_p3 = ((or_ln340_reg_3860[0:0] === 1'b1) ? 16'd32767 : add_ln415_reg_3834);

assign select_ln388_32_fu_2437_p3 = ((and_ln786_50_reg_3886[0:0] === 1'b1) ? 16'd32768 : add_ln415_16_reg_3865);

assign select_ln388_33_fu_2525_p3 = ((and_ln786_51_fu_2493_p2[0:0] === 1'b1) ? 16'd32768 : add_ln703_fu_2473_p2);

assign select_ln388_34_fu_2556_p3 = ((and_ln786_53_reg_3917[0:0] === 1'b1) ? 16'd32768 : add_ln415_17_reg_3896);

assign select_ln388_35_fu_2811_p3 = ((and_ln786_54_fu_2785_p2[0:0] === 1'b1) ? 16'd32768 : add_ln703_47_reg_4120);

assign select_ln388_36_fu_2621_p3 = ((and_ln786_56_reg_3948[0:0] === 1'b1) ? 16'd32768 : add_ln415_18_reg_3927);

assign select_ln388_37_fu_2898_p3 = ((and_ln786_57_fu_2866_p2[0:0] === 1'b1) ? 16'd32768 : add_ln703_48_fu_2847_p2);

assign select_ln388_38_fu_2650_p3 = ((and_ln786_59_reg_3979[0:0] === 1'b1) ? 16'd32768 : add_ln415_19_reg_3958);

assign select_ln388_39_fu_2979_p3 = ((and_ln786_60_fu_2953_p2[0:0] === 1'b1) ? 16'd32768 : add_ln703_49_reg_4176);

assign select_ln388_40_fu_2679_p3 = ((and_ln786_62_reg_4010[0:0] === 1'b1) ? 16'd32768 : add_ln415_20_reg_3989);

assign select_ln388_41_fu_3066_p3 = ((and_ln786_63_fu_3034_p2[0:0] === 1'b1) ? 16'd32768 : add_ln703_50_fu_3015_p2);

assign select_ln388_42_fu_2708_p3 = ((and_ln786_65_reg_4041[0:0] === 1'b1) ? 16'd32768 : add_ln415_21_reg_4020);

assign select_ln388_43_fu_3147_p3 = ((and_ln786_66_fu_3121_p2[0:0] === 1'b1) ? 16'd32768 : add_ln703_51_reg_4196);

assign select_ln388_44_fu_2737_p3 = ((and_ln786_68_reg_4072[0:0] === 1'b1) ? 16'd32768 : add_ln415_22_reg_4051);

assign select_ln388_45_fu_3234_p3 = ((and_ln786_69_fu_3202_p2[0:0] === 1'b1) ? 16'd32768 : add_ln703_52_fu_3183_p2);

assign select_ln388_46_fu_2766_p3 = ((and_ln786_71_reg_4103[0:0] === 1'b1) ? 16'd32768 : add_ln415_23_reg_4082);

assign select_ln388_47_fu_3315_p3 = ((and_ln786_72_fu_3289_p2[0:0] === 1'b1) ? 16'd32768 : add_ln703_53_reg_4216);

assign select_ln388_fu_2408_p3 = ((and_ln786_48_reg_3855[0:0] === 1'b1) ? 16'd32768 : add_ln415_reg_3834);

assign select_ln416_1_fu_976_p3 = ((and_ln416_16_fu_920_p2[0:0] === 1'b1) ? and_ln779_1_fu_970_p2 : icmp_ln879_3_fu_939_p2);

assign select_ln416_2_fu_1169_p3 = ((and_ln416_17_fu_1113_p2[0:0] === 1'b1) ? and_ln779_2_fu_1163_p2 : icmp_ln879_5_fu_1132_p2);

assign select_ln416_3_fu_1362_p3 = ((and_ln416_18_fu_1306_p2[0:0] === 1'b1) ? and_ln779_3_fu_1356_p2 : icmp_ln879_7_fu_1325_p2);

assign select_ln416_4_fu_1555_p3 = ((and_ln416_19_fu_1499_p2[0:0] === 1'b1) ? and_ln779_4_fu_1549_p2 : icmp_ln879_9_fu_1518_p2);

assign select_ln416_5_fu_1748_p3 = ((and_ln416_20_fu_1692_p2[0:0] === 1'b1) ? and_ln779_5_fu_1742_p2 : icmp_ln879_11_fu_1711_p2);

assign select_ln416_6_fu_1941_p3 = ((and_ln416_21_fu_1885_p2[0:0] === 1'b1) ? and_ln779_6_fu_1935_p2 : icmp_ln879_13_fu_1904_p2);

assign select_ln416_7_fu_2134_p3 = ((and_ln416_22_fu_2078_p2[0:0] === 1'b1) ? and_ln779_7_fu_2128_p2 : icmp_ln879_15_fu_2097_p2);

assign select_ln416_8_fu_2327_p3 = ((and_ln416_23_fu_2271_p2[0:0] === 1'b1) ? and_ln779_8_fu_2321_p2 : icmp_ln879_17_fu_2290_p2);

assign select_ln416_fu_783_p3 = ((and_ln416_fu_727_p2[0:0] === 1'b1) ? and_ln779_fu_777_p2 : icmp_ln879_1_fu_746_p2);

assign select_ln777_1_fu_949_p3 = ((and_ln416_16_fu_920_p2[0:0] === 1'b1) ? icmp_ln879_3_fu_939_p2 : icmp_ln768_1_fu_944_p2);

assign select_ln777_2_fu_1142_p3 = ((and_ln416_17_fu_1113_p2[0:0] === 1'b1) ? icmp_ln879_5_fu_1132_p2 : icmp_ln768_2_fu_1137_p2);

assign select_ln777_3_fu_1335_p3 = ((and_ln416_18_fu_1306_p2[0:0] === 1'b1) ? icmp_ln879_7_fu_1325_p2 : icmp_ln768_3_fu_1330_p2);

assign select_ln777_4_fu_1528_p3 = ((and_ln416_19_fu_1499_p2[0:0] === 1'b1) ? icmp_ln879_9_fu_1518_p2 : icmp_ln768_4_fu_1523_p2);

assign select_ln777_5_fu_1721_p3 = ((and_ln416_20_fu_1692_p2[0:0] === 1'b1) ? icmp_ln879_11_fu_1711_p2 : icmp_ln768_5_fu_1716_p2);

assign select_ln777_6_fu_1914_p3 = ((and_ln416_21_fu_1885_p2[0:0] === 1'b1) ? icmp_ln879_13_fu_1904_p2 : icmp_ln768_6_fu_1909_p2);

assign select_ln777_7_fu_2107_p3 = ((and_ln416_22_fu_2078_p2[0:0] === 1'b1) ? icmp_ln879_15_fu_2097_p2 : icmp_ln768_7_fu_2102_p2);

assign select_ln777_8_fu_2300_p3 = ((and_ln416_23_fu_2271_p2[0:0] === 1'b1) ? icmp_ln879_17_fu_2290_p2 : icmp_ln768_8_fu_2295_p2);

assign select_ln777_fu_756_p3 = ((and_ln416_fu_727_p2[0:0] === 1'b1) ? icmp_ln879_1_fu_746_p2 : icmp_ln768_fu_751_p2);

assign sext_ln703_80_fu_2455_p1 = select_ln340_81_fu_2443_p3;

assign sext_ln703_81_fu_2570_p1 = select_ln340_82_fu_2533_p3;

assign sext_ln703_82_fu_2574_p1 = select_ln340_83_fu_2562_p3;

assign sext_ln703_83_fu_2826_p1 = select_ln340_84_fu_2818_p3;

assign sext_ln703_84_fu_2830_p1 = select_ln340_85_reg_4133;

assign sext_ln703_85_fu_2914_p1 = select_ln340_86_fu_2906_p3;

assign sext_ln703_86_fu_2918_p1 = select_ln340_87_reg_4139;

assign sext_ln703_87_fu_2994_p1 = select_ln340_88_fu_2986_p3;

assign sext_ln703_88_fu_2998_p1 = select_ln340_89_reg_4145_pp0_iter5_reg;

assign sext_ln703_89_fu_3082_p1 = select_ln340_90_fu_3074_p3;

assign sext_ln703_90_fu_3086_p1 = select_ln340_91_reg_4151_pp0_iter5_reg;

assign sext_ln703_91_fu_3162_p1 = select_ln340_92_fu_3154_p3;

assign sext_ln703_92_fu_3166_p1 = select_ln340_93_reg_4157_pp0_iter6_reg;

assign sext_ln703_93_fu_3250_p1 = select_ln340_94_fu_3242_p3;

assign sext_ln703_94_fu_3254_p1 = select_ln340_95_reg_4163_pp0_iter6_reg;

assign sext_ln703_fu_2451_p1 = select_ln340_80_fu_2414_p3;

assign tmp_243_fu_665_p3 = mul_ln1118_reg_3555[32'd8];

assign tmp_244_fu_677_p3 = mul_ln1118_reg_3555[32'd23];

assign tmp_245_fu_690_p3 = mul_ln1118_reg_3555[32'd7];

assign tmp_246_fu_713_p3 = add_ln415_fu_707_p2[32'd15];

assign tmp_247_fu_733_p3 = add_ln415_fu_707_p2[32'd15];

assign tmp_250_fu_764_p3 = mul_ln1118_reg_3555[32'd24];

assign tmp_252_fu_858_p3 = mul_ln1118_16_reg_3586[32'd8];

assign tmp_253_fu_870_p3 = mul_ln1118_16_reg_3586[32'd23];

assign tmp_254_fu_883_p3 = mul_ln1118_16_reg_3586[32'd7];

assign tmp_255_fu_906_p3 = add_ln415_16_fu_900_p2[32'd15];

assign tmp_256_fu_926_p3 = add_ln415_16_fu_900_p2[32'd15];

assign tmp_259_fu_957_p3 = mul_ln1118_16_reg_3586[32'd24];

assign tmp_260_fu_2465_p3 = add_ln1192_fu_2459_p2[32'd16];

assign tmp_261_fu_2479_p3 = add_ln703_fu_2473_p2[32'd15];

assign tmp_263_fu_1051_p3 = mul_ln1118_17_reg_3617[32'd8];

assign tmp_264_fu_1063_p3 = mul_ln1118_17_reg_3617[32'd23];

assign tmp_265_fu_1076_p3 = mul_ln1118_17_reg_3617[32'd7];

assign tmp_266_fu_1099_p3 = add_ln415_17_fu_1093_p2[32'd15];

assign tmp_267_fu_1119_p3 = add_ln415_17_fu_1093_p2[32'd15];

assign tmp_270_fu_1150_p3 = mul_ln1118_17_reg_3617[32'd24];

assign tmp_274_fu_1244_p3 = mul_ln1118_18_reg_3648[32'd8];

assign tmp_275_fu_1256_p3 = mul_ln1118_18_reg_3648[32'd23];

assign tmp_276_fu_1269_p3 = mul_ln1118_18_reg_3648[32'd7];

assign tmp_277_fu_1292_p3 = add_ln415_18_fu_1286_p2[32'd15];

assign tmp_278_fu_1312_p3 = add_ln415_18_fu_1286_p2[32'd15];

assign tmp_281_fu_1343_p3 = mul_ln1118_18_reg_3648[32'd24];

assign tmp_282_fu_2839_p3 = add_ln1192_65_fu_2833_p2[32'd16];

assign tmp_283_fu_2852_p3 = add_ln703_48_fu_2847_p2[32'd15];

assign tmp_285_fu_1437_p3 = mul_ln1118_19_reg_3679[32'd8];

assign tmp_286_fu_1449_p3 = mul_ln1118_19_reg_3679[32'd23];

assign tmp_287_fu_1462_p3 = mul_ln1118_19_reg_3679[32'd7];

assign tmp_288_fu_1485_p3 = add_ln415_19_fu_1479_p2[32'd15];

assign tmp_289_fu_1505_p3 = add_ln415_19_fu_1479_p2[32'd15];

assign tmp_292_fu_1536_p3 = mul_ln1118_19_reg_3679[32'd24];

assign tmp_296_fu_1630_p3 = mul_ln1118_20_reg_3710[32'd8];

assign tmp_297_fu_1642_p3 = mul_ln1118_20_reg_3710[32'd23];

assign tmp_298_fu_1655_p3 = mul_ln1118_20_reg_3710[32'd7];

assign tmp_299_fu_1678_p3 = add_ln415_20_fu_1672_p2[32'd15];

assign tmp_300_fu_1698_p3 = add_ln415_20_fu_1672_p2[32'd15];

assign tmp_303_fu_1729_p3 = mul_ln1118_20_reg_3710[32'd24];

assign tmp_304_fu_3007_p3 = add_ln1192_67_fu_3001_p2[32'd16];

assign tmp_305_fu_3020_p3 = add_ln703_50_fu_3015_p2[32'd15];

assign tmp_307_fu_1823_p3 = mul_ln1118_21_reg_3741[32'd8];

assign tmp_308_fu_1835_p3 = mul_ln1118_21_reg_3741[32'd23];

assign tmp_309_fu_1848_p3 = mul_ln1118_21_reg_3741[32'd7];

assign tmp_310_fu_1871_p3 = add_ln415_21_fu_1865_p2[32'd15];

assign tmp_311_fu_1891_p3 = add_ln415_21_fu_1865_p2[32'd15];

assign tmp_314_fu_1922_p3 = mul_ln1118_21_reg_3741[32'd24];

assign tmp_318_fu_2016_p3 = mul_ln1118_22_reg_3772[32'd8];

assign tmp_319_fu_2028_p3 = mul_ln1118_22_reg_3772[32'd23];

assign tmp_320_fu_2041_p3 = mul_ln1118_22_reg_3772[32'd7];

assign tmp_321_fu_2064_p3 = add_ln415_22_fu_2058_p2[32'd15];

assign tmp_322_fu_2084_p3 = add_ln415_22_fu_2058_p2[32'd15];

assign tmp_325_fu_2115_p3 = mul_ln1118_22_reg_3772[32'd24];

assign tmp_326_fu_3175_p3 = add_ln1192_69_fu_3169_p2[32'd16];

assign tmp_327_fu_3188_p3 = add_ln703_52_fu_3183_p2[32'd15];

assign tmp_329_fu_2209_p3 = mul_ln1118_23_reg_3803[32'd8];

assign tmp_330_fu_2221_p3 = mul_ln1118_23_reg_3803[32'd23];

assign tmp_331_fu_2234_p3 = mul_ln1118_23_reg_3803[32'd7];

assign tmp_332_fu_2257_p3 = add_ln415_23_fu_2251_p2[32'd15];

assign tmp_333_fu_2277_p3 = add_ln415_23_fu_2251_p2[32'd15];

assign tmp_336_fu_2308_p3 = mul_ln1118_23_reg_3803[32'd24];

assign trunc_ln3_fu_656_p4 = {{mul_ln1118_reg_3555[23:8]}};

assign trunc_ln708_15_fu_1042_p4 = {{mul_ln1118_17_reg_3617[23:8]}};

assign trunc_ln708_16_fu_1235_p4 = {{mul_ln1118_18_reg_3648[23:8]}};

assign trunc_ln708_17_fu_1428_p4 = {{mul_ln1118_19_reg_3679[23:8]}};

assign trunc_ln708_18_fu_1621_p4 = {{mul_ln1118_20_reg_3710[23:8]}};

assign trunc_ln708_19_fu_1814_p4 = {{mul_ln1118_21_reg_3741[23:8]}};

assign trunc_ln708_20_fu_2007_p4 = {{mul_ln1118_22_reg_3772[23:8]}};

assign trunc_ln708_21_fu_2200_p4 = {{mul_ln1118_23_reg_3803[23:8]}};

assign trunc_ln708_s_fu_849_p4 = {{mul_ln1118_16_reg_3586[23:8]}};

assign trunc_ln718_16_fu_397_p1 = mul_ln1118_16_fu_3340_p2[6:0];

assign trunc_ln718_17_fu_431_p1 = mul_ln1118_17_fu_3350_p2[6:0];

assign trunc_ln718_18_fu_465_p1 = mul_ln1118_18_fu_3360_p2[6:0];

assign trunc_ln718_19_fu_499_p1 = mul_ln1118_19_fu_3370_p2[6:0];

assign trunc_ln718_20_fu_533_p1 = mul_ln1118_20_fu_3380_p2[6:0];

assign trunc_ln718_21_fu_567_p1 = mul_ln1118_21_fu_3390_p2[6:0];

assign trunc_ln718_22_fu_601_p1 = mul_ln1118_22_fu_3400_p2[6:0];

assign trunc_ln718_23_fu_635_p1 = mul_ln1118_23_fu_3410_p2[6:0];

assign trunc_ln718_fu_363_p1 = mul_ln1118_fu_3330_p2[6:0];

assign weight_V_offset_cast_fu_257_p1 = weight_V_offset;

assign xor_ln340_48_fu_2505_p2 = (tmp_260_fu_2465_p3 ^ 1'd1);

assign xor_ln340_49_fu_2790_p2 = (tmp_272_reg_4126 ^ tmp_271_reg_4113);

assign xor_ln340_50_fu_2794_p2 = (tmp_271_reg_4113 ^ 1'd1);

assign xor_ln340_51_fu_2872_p2 = (tmp_283_fu_2852_p3 ^ tmp_282_fu_2839_p3);

assign xor_ln340_52_fu_2878_p2 = (tmp_282_fu_2839_p3 ^ 1'd1);

assign xor_ln340_53_fu_2958_p2 = (tmp_294_reg_4182 ^ tmp_293_reg_4169);

assign xor_ln340_54_fu_2962_p2 = (tmp_293_reg_4169 ^ 1'd1);

assign xor_ln340_55_fu_3040_p2 = (tmp_305_fu_3020_p3 ^ tmp_304_fu_3007_p3);

assign xor_ln340_56_fu_3046_p2 = (tmp_304_fu_3007_p3 ^ 1'd1);

assign xor_ln340_57_fu_3126_p2 = (tmp_316_reg_4202 ^ tmp_315_reg_4189);

assign xor_ln340_58_fu_3130_p2 = (tmp_315_reg_4189 ^ 1'd1);

assign xor_ln340_59_fu_3208_p2 = (tmp_327_fu_3188_p3 ^ tmp_326_fu_3175_p3);

assign xor_ln340_60_fu_3214_p2 = (tmp_326_fu_3175_p3 ^ 1'd1);

assign xor_ln340_61_fu_3294_p2 = (tmp_338_reg_4222 ^ tmp_337_reg_4209);

assign xor_ln340_62_fu_3298_p2 = (tmp_337_reg_4209 ^ 1'd1);

assign xor_ln340_fu_2499_p2 = (tmp_261_fu_2479_p3 ^ tmp_260_fu_2465_p3);

assign xor_ln416_47_fu_914_p2 = (tmp_255_fu_906_p3 ^ 1'd1);

assign xor_ln416_48_fu_1107_p2 = (tmp_266_fu_1099_p3 ^ 1'd1);

assign xor_ln416_49_fu_1300_p2 = (tmp_277_fu_1292_p3 ^ 1'd1);

assign xor_ln416_50_fu_1493_p2 = (tmp_288_fu_1485_p3 ^ 1'd1);

assign xor_ln416_51_fu_1686_p2 = (tmp_299_fu_1678_p3 ^ 1'd1);

assign xor_ln416_52_fu_1879_p2 = (tmp_310_fu_1871_p3 ^ 1'd1);

assign xor_ln416_53_fu_2072_p2 = (tmp_321_fu_2064_p3 ^ 1'd1);

assign xor_ln416_54_fu_2265_p2 = (tmp_332_fu_2257_p3 ^ 1'd1);

assign xor_ln416_fu_721_p2 = (tmp_246_fu_713_p3 ^ 1'd1);

assign xor_ln779_16_fu_964_p2 = (tmp_259_fu_957_p3 ^ 1'd1);

assign xor_ln779_17_fu_1157_p2 = (tmp_270_fu_1150_p3 ^ 1'd1);

assign xor_ln779_18_fu_1350_p2 = (tmp_281_fu_1343_p3 ^ 1'd1);

assign xor_ln779_19_fu_1543_p2 = (tmp_292_fu_1536_p3 ^ 1'd1);

assign xor_ln779_20_fu_1736_p2 = (tmp_303_fu_1729_p3 ^ 1'd1);

assign xor_ln779_21_fu_1929_p2 = (tmp_314_fu_1922_p3 ^ 1'd1);

assign xor_ln779_22_fu_2122_p2 = (tmp_325_fu_2115_p3 ^ 1'd1);

assign xor_ln779_23_fu_2315_p2 = (tmp_336_fu_2308_p3 ^ 1'd1);

assign xor_ln779_fu_771_p2 = (tmp_250_fu_764_p3 ^ 1'd1);

assign xor_ln785_16_fu_809_p2 = (tmp_reg_3564 ^ 1'd1);

assign xor_ln785_17_fu_990_p2 = (select_ln777_1_fu_949_p3 ^ 1'd1);

assign xor_ln785_18_fu_1002_p2 = (tmp_251_reg_3595 ^ 1'd1);

assign xor_ln785_19_fu_1183_p2 = (select_ln777_2_fu_1142_p3 ^ 1'd1);

assign xor_ln785_20_fu_1195_p2 = (tmp_262_reg_3626 ^ 1'd1);

assign xor_ln785_21_fu_1376_p2 = (select_ln777_3_fu_1335_p3 ^ 1'd1);

assign xor_ln785_22_fu_1388_p2 = (tmp_273_reg_3657 ^ 1'd1);

assign xor_ln785_23_fu_1569_p2 = (select_ln777_4_fu_1528_p3 ^ 1'd1);

assign xor_ln785_24_fu_1581_p2 = (tmp_284_reg_3688 ^ 1'd1);

assign xor_ln785_25_fu_1762_p2 = (select_ln777_5_fu_1721_p3 ^ 1'd1);

assign xor_ln785_26_fu_1774_p2 = (tmp_295_reg_3719 ^ 1'd1);

assign xor_ln785_27_fu_1955_p2 = (select_ln777_6_fu_1914_p3 ^ 1'd1);

assign xor_ln785_28_fu_1967_p2 = (tmp_306_reg_3750 ^ 1'd1);

assign xor_ln785_29_fu_2148_p2 = (select_ln777_7_fu_2107_p3 ^ 1'd1);

assign xor_ln785_30_fu_2160_p2 = (tmp_317_reg_3781 ^ 1'd1);

assign xor_ln785_31_fu_2341_p2 = (select_ln777_8_fu_2300_p3 ^ 1'd1);

assign xor_ln785_32_fu_2353_p2 = (tmp_328_reg_3812 ^ 1'd1);

assign xor_ln785_fu_797_p2 = (select_ln777_fu_756_p3 ^ 1'd1);

assign xor_ln786_32_fu_1025_p2 = (or_ln786_32_fu_1019_p2 ^ 1'd1);

assign xor_ln786_33_fu_2487_p2 = (tmp_261_fu_2479_p3 ^ 1'd1);

assign xor_ln786_34_fu_1218_p2 = (or_ln786_33_fu_1212_p2 ^ 1'd1);

assign xor_ln786_35_fu_2780_p2 = (tmp_272_reg_4126 ^ 1'd1);

assign xor_ln786_36_fu_1411_p2 = (or_ln786_34_fu_1405_p2 ^ 1'd1);

assign xor_ln786_37_fu_2860_p2 = (tmp_283_fu_2852_p3 ^ 1'd1);

assign xor_ln786_38_fu_1604_p2 = (or_ln786_35_fu_1598_p2 ^ 1'd1);

assign xor_ln786_39_fu_2948_p2 = (tmp_294_reg_4182 ^ 1'd1);

assign xor_ln786_40_fu_1797_p2 = (or_ln786_36_fu_1791_p2 ^ 1'd1);

assign xor_ln786_41_fu_3028_p2 = (tmp_305_fu_3020_p3 ^ 1'd1);

assign xor_ln786_42_fu_1990_p2 = (or_ln786_37_fu_1984_p2 ^ 1'd1);

assign xor_ln786_43_fu_3116_p2 = (tmp_316_reg_4202 ^ 1'd1);

assign xor_ln786_44_fu_2183_p2 = (or_ln786_38_fu_2177_p2 ^ 1'd1);

assign xor_ln786_45_fu_3196_p2 = (tmp_327_fu_3188_p3 ^ 1'd1);

assign xor_ln786_46_fu_2376_p2 = (or_ln786_39_fu_2370_p2 ^ 1'd1);

assign xor_ln786_47_fu_3284_p2 = (tmp_338_reg_4222 ^ 1'd1);

assign xor_ln786_fu_832_p2 = (or_ln786_fu_826_p2 ^ 1'd1);

assign zext_ln1117_1_fu_279_p1 = add_ln1117_1_fu_273_p2;

assign zext_ln1117_2_fu_290_p1 = add_ln1117_2_fu_284_p2;

assign zext_ln1117_3_fu_301_p1 = add_ln1117_3_fu_295_p2;

assign zext_ln1117_4_fu_312_p1 = add_ln1117_4_fu_306_p2;

assign zext_ln1117_5_fu_323_p1 = add_ln1117_5_fu_317_p2;

assign zext_ln1117_6_fu_334_p1 = add_ln1117_6_fu_328_p2;

assign zext_ln1117_7_fu_345_p1 = add_ln1117_7_fu_339_p2;

assign zext_ln1117_fu_268_p1 = add_ln1117_fu_262_p2;

assign zext_ln415_16_fu_896_p1 = and_ln415_16_fu_890_p2;

assign zext_ln415_17_fu_1089_p1 = and_ln415_17_fu_1083_p2;

assign zext_ln415_18_fu_1282_p1 = and_ln415_18_fu_1276_p2;

assign zext_ln415_19_fu_1475_p1 = and_ln415_19_fu_1469_p2;

assign zext_ln415_20_fu_1668_p1 = and_ln415_20_fu_1662_p2;

assign zext_ln415_21_fu_1861_p1 = and_ln415_21_fu_1855_p2;

assign zext_ln415_22_fu_2054_p1 = and_ln415_22_fu_2048_p2;

assign zext_ln415_23_fu_2247_p1 = and_ln415_23_fu_2241_p2;

assign zext_ln415_fu_703_p1 = and_ln415_fu_697_p2;

endmodule //window_macc
