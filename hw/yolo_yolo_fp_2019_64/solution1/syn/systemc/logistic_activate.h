// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _logistic_activate_HH_
#define _logistic_activate_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "exp_16_8_s.h"
#include "yolo_yolo_top_sdiv_18ns_17s_18_22_1.h"

namespace ap_rtl {

struct logistic_activate : public sc_module {
    // Port declarations 9
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_logic > ap_ce;
    sc_in< sc_lv<16> > val_in_V;
    sc_out< sc_lv<16> > ap_return;
    sc_signal< sc_lv<18> > ap_var_for_const0;


    // Module declarations
    logistic_activate(sc_module_name name);
    SC_HAS_PROCESS(logistic_activate);

    ~logistic_activate();

    sc_trace_file* mVcdFile;

    exp_16_8_s* grp_exp_16_8_s_fu_59;
    yolo_yolo_top_sdiv_18ns_17s_18_22_1<1,22,18,17,18>* yolo_yolo_top_sdiv_18ns_17s_18_22_1_U5;
    sc_signal< sc_lv<1> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter3;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter4;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter5;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter6;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter7;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter8;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter9;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter10;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter11;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter12;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter13;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter14;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter15;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter16;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter17;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter18;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter19;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter20;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter21;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter22;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter23;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter24;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter25;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter26;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter27;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter28;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< bool > ap_block_state1_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter1;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter2;
    sc_signal< bool > ap_block_state4_pp0_stage0_iter3;
    sc_signal< bool > ap_block_state5_pp0_stage0_iter4;
    sc_signal< bool > ap_block_state6_pp0_stage0_iter5;
    sc_signal< bool > ap_block_state7_pp0_stage0_iter6;
    sc_signal< bool > ap_block_state8_pp0_stage0_iter7;
    sc_signal< bool > ap_block_state9_pp0_stage0_iter8;
    sc_signal< bool > ap_block_state10_pp0_stage0_iter9;
    sc_signal< bool > ap_block_state11_pp0_stage0_iter10;
    sc_signal< bool > ap_block_state12_pp0_stage0_iter11;
    sc_signal< bool > ap_block_state13_pp0_stage0_iter12;
    sc_signal< bool > ap_block_state14_pp0_stage0_iter13;
    sc_signal< bool > ap_block_state15_pp0_stage0_iter14;
    sc_signal< bool > ap_block_state16_pp0_stage0_iter15;
    sc_signal< bool > ap_block_state17_pp0_stage0_iter16;
    sc_signal< bool > ap_block_state18_pp0_stage0_iter17;
    sc_signal< bool > ap_block_state19_pp0_stage0_iter18;
    sc_signal< bool > ap_block_state20_pp0_stage0_iter19;
    sc_signal< bool > ap_block_state21_pp0_stage0_iter20;
    sc_signal< bool > ap_block_state22_pp0_stage0_iter21;
    sc_signal< bool > ap_block_state23_pp0_stage0_iter22;
    sc_signal< bool > ap_block_state24_pp0_stage0_iter23;
    sc_signal< bool > ap_block_state25_pp0_stage0_iter24;
    sc_signal< bool > ap_block_state26_pp0_stage0_iter25;
    sc_signal< bool > ap_block_state27_pp0_stage0_iter26;
    sc_signal< bool > ap_block_state28_pp0_stage0_iter27;
    sc_signal< bool > ap_block_state29_pp0_stage0_iter28;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<16> > val_in_V_read_reg_215;
    sc_signal< sc_lv<1> > icmp_ln1498_fu_70_p2;
    sc_signal< sc_lv<1> > icmp_ln1498_reg_220;
    sc_signal< sc_lv<1> > icmp_ln1498_reg_220_pp0_iter1_reg;
    sc_signal< sc_lv<1> > icmp_ln1498_reg_220_pp0_iter2_reg;
    sc_signal< sc_lv<1> > icmp_ln1498_reg_220_pp0_iter3_reg;
    sc_signal< sc_lv<1> > icmp_ln1498_reg_220_pp0_iter4_reg;
    sc_signal< sc_lv<1> > icmp_ln1498_reg_220_pp0_iter5_reg;
    sc_signal< sc_lv<1> > icmp_ln1498_reg_220_pp0_iter6_reg;
    sc_signal< sc_lv<1> > icmp_ln1498_reg_220_pp0_iter7_reg;
    sc_signal< sc_lv<1> > icmp_ln1498_reg_220_pp0_iter8_reg;
    sc_signal< sc_lv<1> > icmp_ln1498_reg_220_pp0_iter9_reg;
    sc_signal< sc_lv<1> > icmp_ln1498_reg_220_pp0_iter10_reg;
    sc_signal< sc_lv<1> > icmp_ln1498_reg_220_pp0_iter11_reg;
    sc_signal< sc_lv<1> > icmp_ln1498_reg_220_pp0_iter12_reg;
    sc_signal< sc_lv<1> > icmp_ln1498_reg_220_pp0_iter13_reg;
    sc_signal< sc_lv<1> > icmp_ln1498_reg_220_pp0_iter14_reg;
    sc_signal< sc_lv<1> > icmp_ln1498_reg_220_pp0_iter15_reg;
    sc_signal< sc_lv<1> > icmp_ln1498_reg_220_pp0_iter16_reg;
    sc_signal< sc_lv<1> > icmp_ln1498_reg_220_pp0_iter17_reg;
    sc_signal< sc_lv<1> > icmp_ln1498_reg_220_pp0_iter18_reg;
    sc_signal< sc_lv<1> > icmp_ln1498_reg_220_pp0_iter19_reg;
    sc_signal< sc_lv<1> > icmp_ln1498_reg_220_pp0_iter20_reg;
    sc_signal< sc_lv<1> > icmp_ln1498_reg_220_pp0_iter21_reg;
    sc_signal< sc_lv<1> > icmp_ln1498_reg_220_pp0_iter22_reg;
    sc_signal< sc_lv<1> > icmp_ln1498_reg_220_pp0_iter23_reg;
    sc_signal< sc_lv<1> > icmp_ln1498_reg_220_pp0_iter24_reg;
    sc_signal< sc_lv<1> > icmp_ln1498_reg_220_pp0_iter25_reg;
    sc_signal< sc_lv<1> > icmp_ln1498_reg_220_pp0_iter26_reg;
    sc_signal< sc_lv<1> > icmp_ln1498_reg_220_pp0_iter27_reg;
    sc_signal< sc_lv<16> > grp_exp_16_8_s_fu_59_ap_return;
    sc_signal< sc_lv<16> > p_Val2_s_reg_224;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > grp_exp_16_8_s_fu_59_ap_start;
    sc_signal< sc_logic > grp_exp_16_8_s_fu_59_ap_done;
    sc_signal< sc_logic > grp_exp_16_8_s_fu_59_ap_idle;
    sc_signal< sc_logic > grp_exp_16_8_s_fu_59_ap_ready;
    sc_signal< sc_logic > grp_exp_16_8_s_fu_59_ap_ce;
    sc_signal< sc_lv<16> > grp_exp_16_8_s_fu_59_x_V;
    sc_signal< bool > ap_block_state1_pp0_stage0_iter0_ignore_call1;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter1_ignore_call1;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter2_ignore_call1;
    sc_signal< bool > ap_block_state4_pp0_stage0_iter3_ignore_call1;
    sc_signal< bool > ap_block_state5_pp0_stage0_iter4_ignore_call1;
    sc_signal< bool > ap_block_state6_pp0_stage0_iter5_ignore_call1;
    sc_signal< bool > ap_block_state7_pp0_stage0_iter6_ignore_call1;
    sc_signal< bool > ap_block_state8_pp0_stage0_iter7_ignore_call1;
    sc_signal< bool > ap_block_state9_pp0_stage0_iter8_ignore_call1;
    sc_signal< bool > ap_block_state10_pp0_stage0_iter9_ignore_call1;
    sc_signal< bool > ap_block_state11_pp0_stage0_iter10_ignore_call1;
    sc_signal< bool > ap_block_state12_pp0_stage0_iter11_ignore_call1;
    sc_signal< bool > ap_block_state13_pp0_stage0_iter12_ignore_call1;
    sc_signal< bool > ap_block_state14_pp0_stage0_iter13_ignore_call1;
    sc_signal< bool > ap_block_state15_pp0_stage0_iter14_ignore_call1;
    sc_signal< bool > ap_block_state16_pp0_stage0_iter15_ignore_call1;
    sc_signal< bool > ap_block_state17_pp0_stage0_iter16_ignore_call1;
    sc_signal< bool > ap_block_state18_pp0_stage0_iter17_ignore_call1;
    sc_signal< bool > ap_block_state19_pp0_stage0_iter18_ignore_call1;
    sc_signal< bool > ap_block_state20_pp0_stage0_iter19_ignore_call1;
    sc_signal< bool > ap_block_state21_pp0_stage0_iter20_ignore_call1;
    sc_signal< bool > ap_block_state22_pp0_stage0_iter21_ignore_call1;
    sc_signal< bool > ap_block_state23_pp0_stage0_iter22_ignore_call1;
    sc_signal< bool > ap_block_state24_pp0_stage0_iter23_ignore_call1;
    sc_signal< bool > ap_block_state25_pp0_stage0_iter24_ignore_call1;
    sc_signal< bool > ap_block_state26_pp0_stage0_iter25_ignore_call1;
    sc_signal< bool > ap_block_state27_pp0_stage0_iter26_ignore_call1;
    sc_signal< bool > ap_block_state28_pp0_stage0_iter27_ignore_call1;
    sc_signal< bool > ap_block_state29_pp0_stage0_iter28_ignore_call1;
    sc_signal< bool > ap_block_pp0_stage0_11001_ignoreCallOp34;
    sc_signal< sc_lv<16> > ap_phi_mux_agg_result_V_2_phi_fu_50_p6;
    sc_signal< sc_lv<16> > ap_phi_reg_pp0_iter0_agg_result_V_2_reg_46;
    sc_signal< sc_lv<16> > ap_phi_reg_pp0_iter1_agg_result_V_2_reg_46;
    sc_signal< sc_lv<16> > ap_phi_reg_pp0_iter2_agg_result_V_2_reg_46;
    sc_signal< sc_lv<16> > ap_phi_reg_pp0_iter3_agg_result_V_2_reg_46;
    sc_signal< sc_lv<16> > ap_phi_reg_pp0_iter4_agg_result_V_2_reg_46;
    sc_signal< sc_lv<16> > ap_phi_reg_pp0_iter5_agg_result_V_2_reg_46;
    sc_signal< sc_lv<16> > ap_phi_reg_pp0_iter6_agg_result_V_2_reg_46;
    sc_signal< sc_lv<16> > ap_phi_reg_pp0_iter7_agg_result_V_2_reg_46;
    sc_signal< sc_lv<16> > ap_phi_reg_pp0_iter8_agg_result_V_2_reg_46;
    sc_signal< sc_lv<16> > ap_phi_reg_pp0_iter9_agg_result_V_2_reg_46;
    sc_signal< sc_lv<16> > ap_phi_reg_pp0_iter10_agg_result_V_2_reg_46;
    sc_signal< sc_lv<16> > ap_phi_reg_pp0_iter11_agg_result_V_2_reg_46;
    sc_signal< sc_lv<16> > ap_phi_reg_pp0_iter12_agg_result_V_2_reg_46;
    sc_signal< sc_lv<16> > ap_phi_reg_pp0_iter13_agg_result_V_2_reg_46;
    sc_signal< sc_lv<16> > ap_phi_reg_pp0_iter14_agg_result_V_2_reg_46;
    sc_signal< sc_lv<16> > ap_phi_reg_pp0_iter15_agg_result_V_2_reg_46;
    sc_signal< sc_lv<16> > ap_phi_reg_pp0_iter16_agg_result_V_2_reg_46;
    sc_signal< sc_lv<16> > ap_phi_reg_pp0_iter17_agg_result_V_2_reg_46;
    sc_signal< sc_lv<16> > ap_phi_reg_pp0_iter18_agg_result_V_2_reg_46;
    sc_signal< sc_lv<16> > ap_phi_reg_pp0_iter19_agg_result_V_2_reg_46;
    sc_signal< sc_lv<16> > ap_phi_reg_pp0_iter20_agg_result_V_2_reg_46;
    sc_signal< sc_lv<16> > ap_phi_reg_pp0_iter21_agg_result_V_2_reg_46;
    sc_signal< sc_lv<16> > ap_phi_reg_pp0_iter22_agg_result_V_2_reg_46;
    sc_signal< sc_lv<16> > ap_phi_reg_pp0_iter23_agg_result_V_2_reg_46;
    sc_signal< sc_lv<16> > ap_phi_reg_pp0_iter24_agg_result_V_2_reg_46;
    sc_signal< sc_lv<16> > ap_phi_reg_pp0_iter25_agg_result_V_2_reg_46;
    sc_signal< sc_lv<16> > ap_phi_reg_pp0_iter26_agg_result_V_2_reg_46;
    sc_signal< sc_lv<16> > ap_phi_reg_pp0_iter27_agg_result_V_2_reg_46;
    sc_signal< sc_lv<16> > ap_phi_reg_pp0_iter28_agg_result_V_2_reg_46;
    sc_signal< sc_lv<16> > select_ln388_fu_206_p3;
    sc_signal< sc_lv<1> > or_ln340_1_fu_191_p2;
    sc_signal< sc_lv<16> > select_ln340_fu_197_p3;
    sc_signal< sc_logic > grp_exp_16_8_s_fu_59_ap_start_reg;
    sc_signal< sc_lv<17> > rhs_V_fu_82_p1;
    sc_signal< sc_lv<17> > ret_V_fu_85_p2;
    sc_signal< sc_lv<18> > grp_fu_95_p2;
    sc_signal< sc_lv<2> > tmp_fu_121_p4;
    sc_signal< sc_lv<1> > p_Result_4_fu_113_p3;
    sc_signal< sc_lv<1> > icmp_ln785_fu_131_p2;
    sc_signal< sc_lv<1> > p_Result_s_fu_101_p3;
    sc_signal< sc_lv<1> > or_ln785_fu_137_p2;
    sc_signal< sc_lv<1> > xor_ln785_fu_143_p2;
    sc_signal< sc_lv<1> > icmp_ln786_fu_161_p2;
    sc_signal< sc_lv<1> > xor_ln786_fu_155_p2;
    sc_signal< sc_lv<1> > or_ln786_fu_167_p2;
    sc_signal< sc_lv<1> > underflow_fu_173_p2;
    sc_signal< sc_lv<1> > overflow_fu_149_p2;
    sc_signal< sc_lv<1> > xor_ln340_fu_185_p2;
    sc_signal< sc_lv<1> > or_ln340_fu_179_p2;
    sc_signal< sc_lv<16> > p_Val2_1_fu_109_p1;
    sc_signal< sc_logic > grp_fu_95_ce;
    sc_signal< sc_lv<1> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0_0to27;
    sc_signal< sc_logic > ap_reset_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    sc_signal< bool > ap_condition_651;
    sc_signal< bool > ap_condition_156;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<1> ap_ST_fsm_pp0_stage0;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<16> ap_const_lv16_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<16> ap_const_lv16_F860;
    static const sc_lv<17> ap_const_lv17_100;
    static const sc_lv<18> ap_const_lv18_10000;
    static const sc_lv<32> ap_const_lv32_11;
    static const sc_lv<32> ap_const_lv32_F;
    static const sc_lv<32> ap_const_lv32_10;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<2> ap_const_lv2_3;
    static const sc_lv<16> ap_const_lv16_7FFF;
    static const sc_lv<16> ap_const_lv16_8000;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_11001_ignoreCallOp34();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_state10_pp0_stage0_iter9();
    void thread_ap_block_state10_pp0_stage0_iter9_ignore_call1();
    void thread_ap_block_state11_pp0_stage0_iter10();
    void thread_ap_block_state11_pp0_stage0_iter10_ignore_call1();
    void thread_ap_block_state12_pp0_stage0_iter11();
    void thread_ap_block_state12_pp0_stage0_iter11_ignore_call1();
    void thread_ap_block_state13_pp0_stage0_iter12();
    void thread_ap_block_state13_pp0_stage0_iter12_ignore_call1();
    void thread_ap_block_state14_pp0_stage0_iter13();
    void thread_ap_block_state14_pp0_stage0_iter13_ignore_call1();
    void thread_ap_block_state15_pp0_stage0_iter14();
    void thread_ap_block_state15_pp0_stage0_iter14_ignore_call1();
    void thread_ap_block_state16_pp0_stage0_iter15();
    void thread_ap_block_state16_pp0_stage0_iter15_ignore_call1();
    void thread_ap_block_state17_pp0_stage0_iter16();
    void thread_ap_block_state17_pp0_stage0_iter16_ignore_call1();
    void thread_ap_block_state18_pp0_stage0_iter17();
    void thread_ap_block_state18_pp0_stage0_iter17_ignore_call1();
    void thread_ap_block_state19_pp0_stage0_iter18();
    void thread_ap_block_state19_pp0_stage0_iter18_ignore_call1();
    void thread_ap_block_state1_pp0_stage0_iter0();
    void thread_ap_block_state1_pp0_stage0_iter0_ignore_call1();
    void thread_ap_block_state20_pp0_stage0_iter19();
    void thread_ap_block_state20_pp0_stage0_iter19_ignore_call1();
    void thread_ap_block_state21_pp0_stage0_iter20();
    void thread_ap_block_state21_pp0_stage0_iter20_ignore_call1();
    void thread_ap_block_state22_pp0_stage0_iter21();
    void thread_ap_block_state22_pp0_stage0_iter21_ignore_call1();
    void thread_ap_block_state23_pp0_stage0_iter22();
    void thread_ap_block_state23_pp0_stage0_iter22_ignore_call1();
    void thread_ap_block_state24_pp0_stage0_iter23();
    void thread_ap_block_state24_pp0_stage0_iter23_ignore_call1();
    void thread_ap_block_state25_pp0_stage0_iter24();
    void thread_ap_block_state25_pp0_stage0_iter24_ignore_call1();
    void thread_ap_block_state26_pp0_stage0_iter25();
    void thread_ap_block_state26_pp0_stage0_iter25_ignore_call1();
    void thread_ap_block_state27_pp0_stage0_iter26();
    void thread_ap_block_state27_pp0_stage0_iter26_ignore_call1();
    void thread_ap_block_state28_pp0_stage0_iter27();
    void thread_ap_block_state28_pp0_stage0_iter27_ignore_call1();
    void thread_ap_block_state29_pp0_stage0_iter28();
    void thread_ap_block_state29_pp0_stage0_iter28_ignore_call1();
    void thread_ap_block_state2_pp0_stage0_iter1();
    void thread_ap_block_state2_pp0_stage0_iter1_ignore_call1();
    void thread_ap_block_state3_pp0_stage0_iter2();
    void thread_ap_block_state3_pp0_stage0_iter2_ignore_call1();
    void thread_ap_block_state4_pp0_stage0_iter3();
    void thread_ap_block_state4_pp0_stage0_iter3_ignore_call1();
    void thread_ap_block_state5_pp0_stage0_iter4();
    void thread_ap_block_state5_pp0_stage0_iter4_ignore_call1();
    void thread_ap_block_state6_pp0_stage0_iter5();
    void thread_ap_block_state6_pp0_stage0_iter5_ignore_call1();
    void thread_ap_block_state7_pp0_stage0_iter6();
    void thread_ap_block_state7_pp0_stage0_iter6_ignore_call1();
    void thread_ap_block_state8_pp0_stage0_iter7();
    void thread_ap_block_state8_pp0_stage0_iter7_ignore_call1();
    void thread_ap_block_state9_pp0_stage0_iter8();
    void thread_ap_block_state9_pp0_stage0_iter8_ignore_call1();
    void thread_ap_condition_156();
    void thread_ap_condition_651();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_enable_reg_pp0_iter0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_idle_pp0_0to27();
    void thread_ap_phi_mux_agg_result_V_2_phi_fu_50_p6();
    void thread_ap_phi_reg_pp0_iter0_agg_result_V_2_reg_46();
    void thread_ap_ready();
    void thread_ap_reset_idle_pp0();
    void thread_ap_return();
    void thread_grp_exp_16_8_s_fu_59_ap_ce();
    void thread_grp_exp_16_8_s_fu_59_ap_start();
    void thread_grp_exp_16_8_s_fu_59_x_V();
    void thread_grp_fu_95_ce();
    void thread_icmp_ln1498_fu_70_p2();
    void thread_icmp_ln785_fu_131_p2();
    void thread_icmp_ln786_fu_161_p2();
    void thread_or_ln340_1_fu_191_p2();
    void thread_or_ln340_fu_179_p2();
    void thread_or_ln785_fu_137_p2();
    void thread_or_ln786_fu_167_p2();
    void thread_overflow_fu_149_p2();
    void thread_p_Result_4_fu_113_p3();
    void thread_p_Result_s_fu_101_p3();
    void thread_p_Val2_1_fu_109_p1();
    void thread_ret_V_fu_85_p2();
    void thread_rhs_V_fu_82_p1();
    void thread_select_ln340_fu_197_p3();
    void thread_select_ln388_fu_206_p3();
    void thread_tmp_fu_121_p4();
    void thread_underflow_fu_173_p2();
    void thread_xor_ln340_fu_185_p2();
    void thread_xor_ln785_fu_143_p2();
    void thread_xor_ln786_fu_155_p2();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
